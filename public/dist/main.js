/*! For license information please see main.js.LICENSE.txt */
(()=>{var t={377:(t,e,n)=>{var r=n(832),s=n(652),i=n(801),o=n(30),a=n(618),l=n(49),u=n(971);u.alea=r,u.xor128=s,u.xorwow=i,u.xorshift7=o,u.xor4096=a,u.tychei=l,t.exports=u},832:function(t,e,n){var r;!function(t,s,i){function o(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function a(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new o(t),r=e&&e.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&a(r,n),s.state=function(){return a(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.alea=l}(0,t=n.nmd(t),n.amdD)},49:function(t,e,n){var r;!function(t,s,i){function o(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function a(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new o(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&a(r,n),s.state=function(){return a(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.tychei=l}(0,t=n.nmd(t),n.amdD)},652:function(t,e,n){var r;!function(t,s,i){function o(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function a(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new o(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&a(r,n),s.state=function(){return a(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xor128=l}(0,t=n.nmd(t),n.amdD)},618:function(t,e,n){var r;!function(t,s,i){function o(t){var e=this;e.next=function(){var t,n,r=e.w,s=e.X,i=e.i;return e.w=r=r+1640531527|0,n=s[i+34&127],t=s[i=i+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[i]=n^t,e.i=i,n+(r^r>>>16)|0},function(t,e){var n,r,s,i,o,a=[],l=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,l=Math.max(l,e.length)),s=0,i=-32;i<l;++i)e&&(r^=e.charCodeAt((i+32)%e.length)),0===i&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(o=o+1640531527|0,s=0==(n=a[127&i]^=r+o)?s+1:0);for(s>=128&&(a[127&(e&&e.length||0)]=-1),s=127,i=512;i>0;--i)r=a[s+34&127],n=a[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,a[s]=r^n;t.w=o,t.X=a,t.i=s}(e,t)}function a(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new o(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.X&&a(r,n),s.state=function(){return a(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},30:function(t,e,n){var r;!function(t,s,i){function o(t){var e=this;e.next=function(){var t,n,r=e.x,s=e.i;return t=r[s],n=(t^=t>>>7)^t<<24,n^=(t=r[s+1&7])^t>>>10,n^=(t=r[s+3&7])^t>>>3,n^=(t=r[s+4&7])^t<<7,t=r[s+7&7],n^=(t^=t<<13)^t<<9,r[s]=n,e.i=s+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function a(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new o(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.x&&a(r,n),s.state=function(){return a(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},801:function(t,e,n){var r;!function(t,s,i){function o(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function a(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new o(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&a(r,n),s.state=function(){return a(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},971:(t,e,n)=>{var r;!function(s,i){var o,a=this,l=256,u=i.pow(l,6),c=i.pow(2,52),h=2*c,d=255;function p(t,e,n){var r=[],d=y(m((e=1==e?{entropy:!0}:e||{}).entropy?[t,b(s)]:null==t?function(){try{var t;return o&&(t=o.randomBytes)?t=t(l):(t=new Uint8Array(l),(a.crypto||a.msCrypto).getRandomValues(t)),b(t)}catch(t){var e=a.navigator,n=e&&e.plugins;return[+new Date,a,n,a.screen,b(s)]}}():t,3),r),p=new f(r),x=function(){for(var t=p.g(6),e=u,n=0;t<c;)t=(t+n)*l,e*=l,n=p.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,y(b(p.S),s),(e.pass||n||function(t,e,n,r){return r&&(r.S&&g(r,p),t.state=function(){return g(p,{})}),n?(i.random=t,e):t})(x,d,"global"in e?e.global:this==i,e.state)}function f(t){var e,n=t.length,r=this,s=0,i=r.i=r.j=0,o=r.S=[];for(n||(t=[n++]);s<l;)o[s]=s++;for(s=0;s<l;s++)o[s]=o[i=d&i+t[s%n]+(e=o[s])],o[i]=e;(r.g=function(t){for(var e,n=0,s=r.i,i=r.j,o=r.S;t--;)e=o[s=d&s+1],n=n*l+o[d&(o[s]=o[i=d&i+e])+(o[i]=e)];return r.i=s,r.j=i,n})(l)}function g(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function m(t,e){var n,r=[],s=typeof t;if(e&&"object"==s)for(n in t)try{r.push(m(t[n],e-1))}catch(t){}return r.length?r:"string"==s?t:t+"\0"}function y(t,e){for(var n,r=t+"",s=0;s<r.length;)e[d&s]=d&(n^=19*e[d&s])+r.charCodeAt(s++);return b(e)}function b(t){return String.fromCharCode.apply(0,t)}if(i.seedrandom=p,y(i.random(),s),t.exports){t.exports=p;try{o=n(906)}catch(t){}}else void 0===(r=function(){return p}.call(e,n,e,t))||(t.exports=r)}([],Math)},906:()=>{},993:()=>{},352:()=>{},589:()=>{},758:()=>{}},e={};function n(r){if(e[r])return e[r].exports;var s=e[r]={id:r,loaded:!1,exports:{}};return t[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),(()=>{"use strict";var t={};n.r(t),n.d(t,{assertParamsValid:()=>Ld,computeFlatOffset:()=>Jd,computeOutShape:()=>Pd,getNormalizedAxes:()=>Gd,isSliceContinous:()=>Yd,maskToAxes:()=>zd,parseSliceParams:()=>Zd,startForAxis:()=>jd,startIndicesWithElidedDims:()=>Hd,stopForAxis:()=>Xd,stopIndicesWithElidedDims:()=>Kd,stridesForAxis:()=>qd,stridesWithElidedDims:()=>Wd});var e={};n.r(e),n.d(e,{collectGatherOpShapeInfo:()=>$f,computeOutShape:()=>kf,segOpComputeOptimalWindowSize:()=>vf});var r={};n.r(r),n.d(r,{ERF_A1:()=>Gm,ERF_A2:()=>Hm,ERF_A3:()=>Km,ERF_A4:()=>qm,ERF_A5:()=>jm,ERF_P:()=>Vm,PARALLELIZE_THRESHOLD:()=>xf,SELU_SCALE:()=>Um,SELU_SCALEALPHA:()=>Wm,applyActivation:()=>Pg,assertAndGetBroadcastShape:()=>df,assertAxesAreInnerMostDims:()=>yp,assertParamsConsistent:()=>qp,assignToTypedArray:()=>ny,axesAreInnerMostDims:()=>pp,calculateShapes:()=>Pm,castTensor:()=>iy,combineLocations:()=>fp,complexWithEvenIndex:()=>Qm,complexWithOddIndex:()=>ty,computeConv2DInfo:()=>Rp,computeConv3DInfo:()=>Ap,computeDefaultPad:()=>Tp,computeDilation2DInfo:()=>Ep,computeOptimalWindowSize:()=>wf,computeOutAndReduceShapes:()=>gp,computeOutShape:()=>jp,computePool2DInfo:()=>Cp,computePool3DInfo:()=>Np,convertConv2DDataFormat:()=>Lp,eitherStridesOrDilationsAreOne:()=>Bp,expandShapeToKeepDim:()=>mp,exponent:()=>sy,exponents:()=>ry,getAxesPermutation:()=>bp,getBroadcastDims:()=>cf,getComplexWithIndex:()=>ey,getFusedBiasGradient:()=>zg,getFusedDyActivation:()=>Lg,getImageCenter:()=>Tm,getInnerMostAxes:()=>wp,getPermuted:()=>Fm,getReductionAxes:()=>hf,getReshaped:()=>Dm,getReshapedPermuted:()=>_m,getSliceBeginCoords:()=>Om,getSliceSize:()=>Mm,getUndoAxesPermutation:()=>xp,linspaceImpl:()=>ay,log:()=>Ym,mergeRealAndImagArrays:()=>Jm,prepareAndValidate:()=>Bm,prepareSplitSize:()=>wg,reshapeTensor:()=>oy,segment_util:()=>e,shouldFuse:()=>Wg,slice_util:()=>t,splitRealAndImagArrays:()=>Zm,tupleValuesAreOne:()=>Mp,upcastType:()=>Ch,validateInput:()=>zm,validateUpdateShape:()=>Lm,warn:()=>Xm});var s={};n.r(s),n.d(s,{maxImpl:()=>_R,transposeImpl:()=>OR});class i{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(e instanceof Promise)throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}(this.global.location.search);"tfjsflags"in t&&t.tfjsflags.split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}function o(){return l}let a,l=null;function u(){if(null==a){let t;if("undefined"!=typeof window)t=window;else if(void 0!==n.g)t=n.g;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}a=t}return a}function c(t,e){const n=function(){const t=u();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}const h="Acos",d="Acosh",p="Add",f="ArgMax",g="ArgMin",m="Asin",y="Asinh",b="Atan",x="Atanh",w="Atan2",v="AvgPool",k="BatchMatMul",$="BatchToSpaceND",I="BroadcastTo",S="Cast",E="Ceil",C="ClipByValue",N="Concat",R="Conv2D",A="Conv2DBackpropInput",T="Cos",D="Cosh",F="Cumsum",_="DepthwiseConv2dNative",O="Dilation2D",M="Dilation2DBackpropInput",B="Dilation2DBackpropFilter",L="Div",z="Expm1",P="FlipLeftRight",W="Floor",U="FloorDiv",V="FusedBatchNorm",G="GatherV2",H="GreaterEqual",K="Identity",q="IsFinite",j="IsInf",X="IsNan",Y="Log1p",J="LogSoftmax",Z="Max",Q="Maximum",tt="MaxPool",et="Minimum",nt="Multiply",rt="Negate",st="NonMaxSuppressionV4",it="NonMaxSuppressionV5",ot="OnesLike",at="OneHot",lt="PadV2",ut="Prelu",ct="Reciprocal",ht="Relu",dt="Reshape",pt="ResizeNearestNeighbor",ft="ResizeBilinear",gt="Relu6",mt="Reverse",yt="Round",bt="Rsqrt",xt="SelectV2",wt="Selu",vt="Slice",kt="Sinh",$t="Sign",It="Sigmoid",St="Softplus",Et="Sqrt",Ct="SpaceToBatchND",Nt="SplitV",Rt="Softmax",At="SquaredDifference",Tt="Square",Dt="Tanh",Ft="Tile",_t="Transpose",Ot="Unpack",Mt="UnsortedSegmentSum",Bt="ZerosLike",Lt="Step",zt="RotateWithOffset",Pt=c("kernelRegistry",(()=>new Map)),Wt=c("gradRegistry",(()=>new Map));function Ut(t){return Wt.get(t)}function Vt(t){const e=Pt.entries(),n=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[i,o]=s,[a]=i.split("_");a===t&&n.push(o)}return n}function Gt(t){const{kernelName:e,backendName:n}=t,r=Kt(e,n);Pt.has(r)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),Pt.set(r,t)}function Ht(t){const{kernelName:e}=t;Wt.has(e)&&o().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),Wt.set(e,t)}function Kt(t,e){return`${e}_${t}`}function qt(t,e,n){return Math.max(t,Math.min(e,n))}function jt(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function Xt(t,e,n=""){jt(Qt(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function Yt(t){jt(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function Jt(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||oe(t)&&!n)for(let r=0;r<t.length;++r)Jt(t[r],e,n);else e.push(t);return e}function Zt(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function Qt(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function te(t){return t%1==0}function ee(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function ne(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function re(t,e){const n=e.length;return jt((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`)),jt(t.every((t=>te(t))),(()=>`All values in axis param must be integers but got axis ${t}`)),t.map((t=>t<0?n+t:t))}function se(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function ie(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function oe(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function ae(t){return"string"==typeof t||t instanceof String}function le(t){return Array.isArray(t)?le(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":"number"==typeof t?"float32":ae(t)?"string":"boolean"==typeof t?"bool":"float32"}function ue(t){return!!(t&&t.constructor&&t.call&&t.apply)}function ce(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function he(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=Jt(t)),o().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function de(t,e,n){const r=new Array;if(1===e.length){const s=e[0];for(let e=0;e<s;e++)r[e]=n[t+e]}else{const s=e[0],i=e.slice(1),o=i.reduce(((t,e)=>t*e));for(let e=0;e<s;e++)r[e]=de(t+e*o,i,n)}return r}function pe(t,e){if(0===t.length)return e[0];const n=t.reduce(((t,e)=>t*e));if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}.`);return de(0,t,e)}function fe(t,e){const n=ge(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function ge(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function me(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return pe(t,new Float32Array(n));if("int32"===e)return pe(t,new Int32Array(n));if("bool"===e)return pe(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function ye(){return o().platform.now()}function be(t){t.forEach((e=>{jt(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function xe(t,e="utf-8"){return e=e||"utf-8",o().platform.decode(t,e)}function we(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let e=0;e<t.length-1;++e)r+=n[e]*t[e];return r}function ve(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let e=0;e<r.length-1;++e)r[e]=Math.floor(t/n[e]),t-=r[e]*n[e];return r[r.length-1]=t,r}class ke{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new Ie)}profileKernel(t,e,n){let r;const s=this.backendTimer.time((()=>{r=n()}));for(let e=0;e<r.length;e++){const n=r[e];n.data().then((e=>{$e(e,n.dtype,t)}))}return{kernelName:t,outputs:r,inputs:e,timeMs:s.then((t=>t.kernelMs)),extraInfo:s.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:s,extraInfo:i}=t;n.forEach((t=>{Promise.all([t.data(),r,i]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],s,n[2])}))}))}}function $e(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const r=t[e];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Ie{logKernelProfile(t,e,n,r,s,i){const o="number"==typeof r?ne(`${r}ms`,9):r.error,a=ne(t,25),l=e.rank,u=e.size,c=ne(e.shape.toString(),14);let h="";for(const t in s){const n=s[t];if(null!=n){const r=n.shape||e.shape,s=r.length;h+=`${t}: ${s}D ${s>0?r:""} `}}console.log(`%c${a}\t%c${o}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Se(t,e,n,r){const s=ce(e),i=function(t,e,n,r){const s=Zt(e),i=r[r.length-1],o=new Array(i).fill(0),a=e.length,l="complex64"===n?Re(t):t;if(a>1)for(let t=0;t<s/i;t++){const e=t*i;for(let t=0;t<i;t++)o[t]=Math.max(o[t],Ee(l[e+t],0,n).length)}return o}(t,e,n,s),o=e.length,a=Ne(t,e,n,s,i),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${o}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(a.map((t=>"    "+t)).join("\n")),l.join("\n")}function Ee(t,e,n){let r;return r=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:ae(t)?`'${t}'`:"bool"===n?Ce(t):parseFloat(t.toFixed(7)).toString(),ne(r,e)}function Ce(t){return 0===t?"false":"true"}function Ne(t,e,n,r,s,i=!0){const o="complex64"===n?2:1,a=e[0],l=e.length;if(0===l)return"complex64"===n?[Ee(Re(t)[0],0,n)]:"bool"===n?[Ce(t[0])]:[t[0].toString()];if(1===l){if(a>20){const e=3*o;let r=Array.from(t.slice(0,e)),i=Array.from(t.slice((a-3)*o,a*o));return"complex64"===n&&(r=Re(r),i=Re(i)),["["+r.map(((t,e)=>Ee(t,s[e],n))).join(", ")+", ..., "+i.map(((t,e)=>Ee(t,s[a-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?Re(t):Array.from(t)).map(((t,e)=>Ee(t,s[e],n))).join(", ")+"]"]}const u=e.slice(1),c=r.slice(1),h=r[0]*o,d=[];if(a>20){for(let e=0;e<3;e++){const r=e*h,i=r+h;d.push(...Ne(t.slice(r,i),u,n,c,s,!1))}d.push("...");for(let e=a-3;e<a;e++){const r=e*h,i=r+h;d.push(...Ne(t.slice(r,i),u,n,c,s,e===a-1))}}else for(let e=0;e<a;e++){const r=e*h,i=r+h;d.push(...Ne(t.slice(r,i),u,n,c,s,e===a-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let t=1;t<d.length-1;t++)d[t]=" "+d[t]+p;let f=",\n";for(let t=2;t<l;t++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function Re(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class Ae{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=Zt(t),null!=n){const t=n.length;jt(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ie(e,this.size),this.strides=ce(t)}set(t,...e){0===e.length&&(e=[0]),jt(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Te().makeTensor(this.values,this.shape,this.dtype)}}let Te=null,De=null,Fe=null;class _e{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=Zt(t),this.strides=ce(t),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return De.buffer(this.shape,this.dtype,t)}bufferSync(){return De.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return pe(this.shape,t)}arraySync(){return pe(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=Te().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>xe(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=Te().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>xe(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Te().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Te().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return De.print(this,t)}clone(){return this.throwIfDisposed(),De.clone(this)}toString(t=!1){return Se(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),De.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),Te().makeVariable(this,t,e,n)}}Object.defineProperty(_e,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed});class Oe extends _e{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!Qt(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Te().disposeTensor(this),this.dataId=t.dataId,Te().incRef(this,null)}dispose(){Te().disposeVariable(this),this.isDisposedInternal=!0}}var Me,Be,Le,ze,Pe;Object.defineProperty(Oe,Symbol.hasInstance,{value:t=>t instanceof _e&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(Me||(Me={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(Be||(Be={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(Le||(Le={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(ze||(ze={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(Pe||(Pe={}));const We={float32:ze,int32:Be,bool:Le,complex64:Pe};function Ue(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return We[t][e]}function Ve(t,e){if(t.dtype===e.dtype)return[t,e];const n=Ue(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function Ge(t){const e=[];return He(t,e,new Set),e}function He(t,e,n){if(null==t)return;if(t instanceof _e)return void e.push(t);if(r=t,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=t;for(const t in s){const r=s[t];n.has(r)||(n.add(r),He(r,e,n))}}class Ke{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class qe{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ke}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new ke(this.backendInstance),!0}setupRegisteredKernels(){Vt(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){Vt(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(Promise.resolve(n)===n){const e=++this.pendingBackendInitId,r=n.then((n=>!(e<this.pendingBackendInitId||(this.registry[t]=n,this.pendingBackendInit=null,0)))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}return this.registry[t]=n,{success:!0,asyncInit:!1}}catch(e){return console.warn(`Initialization of backend ${t} failed`),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,s=this.readSync(e);r.disposeData(e),n.backend=t,t.move(e,s,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return qe.nextTensorId++}nextVariableId(){return qe.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e="float32",n={x:t},r={dtype:e};return Xe.runKernelFunc((n=>n.cast(t,e)),n,null,S,r)}})),[],{}),e}runKernel(t,e,n,r,s){return this.runKernelFunc(null,e,null,t,n,r,s)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let s=0;n.forEach((t=>{s+="complex64"===t.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-e-s-i;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${t}'`)}runKernelFunc(t,e,n,r,s,i,o){let a,l=[];const u=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const c=this.state.numBytes,h=this.state.numTensors;let d;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const p=function(t,e){const n=Kt(t,e);return Pt.get(n)}(r,this.backendName);let f,g;if(null!=p)d=()=>{const t=this.backend.numDataIds();f=p.kernelFunc({inputs:e,attrs:s,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,t,n);const a=n.map((({dataId:t,shape:e,dtype:n})=>this.makeTensorFromDataId(t,e,n)));if(u){let t=this.getTensorsForGradient(r,e,a);if(null==t){null==o&&(o=[]);const e=a.filter(((t,e)=>o[e]));t=(i||[]).slice().concat(e)}l=this.saveTensorsForBackwardMode(t)}return a};else{const e=t=>{u&&(l=t.map((t=>this.keep(this.clone(t)))))};d=()=>{const n=this.backend.numDataIds();f=this.tidy((()=>t(this.backend,e)));const s=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,s),s}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(g=this.profiler.profileKernel(r,e,(()=>d())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(g),a=g.outputs):a=d()})),u&&this.addTapeNode(r,e,a,n,l,s),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-c,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map((t=>null!=e[t]?e[t].shape:null)),outputShapes:a.map((t=>t.shape)),kernelTimeMs:g.timeMs,extraInfo:g.extraInfo}),Array.isArray(f)?a:a[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const r=Ut(t);if(null!=r){const t=r.inputsToSave||[],s=r.outputsToSave||[];let i;r.saveAllInputs?(jt(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(e).map((t=>e[t]))):i=t.map((t=>e[t]));const o=n.filter(((t,e)=>s[e]));return i.concat(o)}return null}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=t;"string"===n&&ae(t[0])&&(s=t.map((t=>function(t,e="utf-8"){return e=e||"utf-8",o().platform.encode(t,e)}(t))));const i=r.write(s,e,n),a=new _e(e,n,i,this.nextTensorId());if(this.incRef(a,r),"string"===n){const t=this.state.tensorInfo.get(i),e=function(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}(s);this.state.numBytes+=e-t.bytes,t.bytes=e}return a}makeTensorFromDataId(t,e,n,r){const s=new _e(e,n=n||"float32",t,this.nextTensorId());return this.incRef(s,r),s}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const s=new Oe(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*function(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof Oe||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):this.state.tensorInfo.get(t.dataId).refCount--}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,s,i){const o={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},a=Ut(t);null!=a&&(r=a.gradFunc),null!=r&&(o.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],r=ge(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t})),r(t.length>1?t:t[0],s,i))),this.state.activeTape.push(o)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Ge(t),n=new Set(e.map((t=>t.id)));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==r.id||this.track(t)}))}gradients(t,e,n,r=!1){if(jt(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));jt(s instanceof _e,(()=>"The result y returned by f() must be a tensor."));const i=function(t,e,n){const r={},s={};for(let t=0;t<e.length;t++)r[e[t].id]=!0;for(let n=0;n<t.length;n++){const i=t[n],o=i.inputs;for(const t in o){const n=o[t];let a=!1;for(let t=0;t<e.length;t++)if(r[n.id]){i.outputs.forEach((t=>r[t.id]=!0)),a=!0,s[i.id]=!0;break}if(a)break}}const i={};i[n.id]=!0;const o={};for(let e=t.length-1;e>=0;e--){const n=t[e],r=n.inputs;for(let t=0;t<n.outputs.length;t++)if(i[n.outputs[t].id]){for(const t in r)i[r[t].id]=!0,o[n.id]=!0;break}}const a=[];for(let e=0;e<t.length;e++){const n=t[e];if(s[n.id]&&o[n.id]){const t={};for(const e in n.inputs){const s=n.inputs[e];r[s.id]&&(t[e]=s)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,a.push(e)}}return a}(this.state.activeTape,e,s);if(!r&&0===i.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[s.id]=null==n?function(t){const e=fe(Zt(t),"float32");return Xe.makeTensor(e,t,"float32")}(s.shape):n,function(t,e,n,r){for(let s=e.length-1;s>=0;s--){const i=e[s],o=[];if(i.outputs.forEach((e=>{const n=t[e.id];null!=n?o.push(n):o.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const a=i.gradient(o);for(const e in i.inputs){if(!(e in a))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(a)}.`);const s=n((()=>a[e]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${s.dtype}'`);const o=i.inputs[e];if(!Qt(s.shape,o.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${e}' has shape '${s.shape}', which does not match the shape of the input '${o.shape}'`);if(null==t[o.id])t[o.id]=s;else{const e=t[o.id];t[o.id]=r(e,s),e.dispose()}}}}(t,i,(t=>this.tidy(t)),Ye);const r=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(t){return jt(ue(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;jt(e.every((t=>t instanceof _e)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return e.forEach(((t,e)=>{r[e]=t})),this.runKernelFunc(((r,s)=>(n=t(...e,s),jt(n.value instanceof _e,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),jt(ue(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value)),r,((t,r)=>{const s=n.gradFunc(t,r),i=Array.isArray(s)?s:[s];jt(i.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),jt(i.every((t=>t instanceof _e)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return i.forEach(((t,e)=>{o[e]=()=>t})),o}))}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=ye(),n=await this.backend.time(t);return n.wallMs=ye()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ke;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function je(){const t=u();if(null==t._tfengine){const e=new i(t);t._tfengine=new qe(e)}var e;return e=t._tfengine.ENV,l=e,Te=()=>t._tfengine,t._tfengine}qe.nextTensorId=0,qe.nextVariableId=0;const Xe=je();function Ye(t,e){const n={a:t,b:e};return Xe.runKernelFunc(((n,r)=>{const s=n.add(t,e);return r([t,e]),s}),n,null,p)}const Je=o();Je.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Je.registerFlag("IS_BROWSER",(()=>"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope)),Je.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Je.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Je.registerFlag("PROD",(()=>!1)),Je.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Je.getBool("DEBUG"))),Je.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Je.registerFlag("IS_TEST",(()=>!1));const Ze="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Qe(t){return Ze?Buffer.byteLength(t):new Blob([t]).size}function tn(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let r=0;return t.forEach((t=>{n.set(new Uint8Array(t),r),r+=t.byteLength})),n.buffer}function en(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:Qe(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:Qe(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}class nn{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==nn.instance&&(nn.instance=new nn),nn.instance}static registerSaveRouter(t){nn.getInstance().saveRouters.push(t)}static registerLoadRouter(t){nn.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return nn.getHandlers(t,"save")}static getLoadHandlers(t,e){return nn.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?nn.getInstance().loadRouters:nn.getInstance().saveRouters).forEach((e=>{const s=e(t,n);null!==s&&r.push(s)})),r}}const rn="tensorflowjs",sn="models_store",on="model_info_store";function an(){if(!o().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function ln(t){const e=t.result;e.createObjectStore(sn,{keyPath:"modelPath"}),e.createObjectStore(on,{keyPath:"modelPath"})}class un{constructor(t){if(this.indexedDB=an(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const r=this.indexedDB.open(rn,1);r.onupgradeneeded=()=>ln(r),r.onsuccess=()=>{const s=r.result;if(null==e){const e=s.transaction(sn,"readonly"),r=e.objectStore(sn).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(s.close(),n(r.error)),e.oncomplete=()=>s.close()}else{const r=en(e),i=s.transaction(on,"readwrite");let o=i.objectStore(on);const a=o.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;a.onsuccess=()=>{l=s.transaction(sn,"readwrite");const a=l.objectStore(sn).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});a.onsuccess=()=>t({modelArtifactsInfo:r}),a.onerror=t=>{o=i.objectStore(on);const e=o.delete(this.modelPath);e.onsuccess=()=>(s.close(),n(a.error)),e.onerror=t=>(s.close(),n(a.error))}},a.onerror=t=>(s.close(),n(a.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=t=>n(r.error)}))}}un.URL_SCHEME="indexeddb://";const cn=t=>{return o().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(un.URL_SCHEME)?(e=t.slice(un.URL_SCHEME.length),new un(e)):null;var e};nn.registerSaveRouter(cn),nn.registerLoadRouter(cn);class hn{constructor(){this.indexedDB=an()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(rn,1);n.onupgradeneeded=()=>ln(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(on,"readonly"),i=s.objectStore(on).getAll();i.onsuccess=()=>{const e={};for(const t of i.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},i.onerror=t=>(r.close(),e(i.error)),s.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(un.URL_SCHEME)?e.slice(un.URL_SCHEME.length):e,new Promise(((e,n)=>{const r=this.indexedDB.open(rn,1);r.onupgradeneeded=()=>ln(r),r.onsuccess=()=>{const s=r.result,i=s.transaction(on,"readwrite"),o=i.objectStore(on),a=o.get(t);let l;a.onsuccess=()=>{if(null==a.result)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=o.delete(t),i=()=>{l=s.transaction(sn,"readwrite");const r=l.objectStore(sn).delete(t);r.onsuccess=()=>e(a.result.modelArtifactsInfo),r.onerror=t=>n(a.error)};r.onsuccess=i,r.onerror=t=>(i(),s.close(),n(a.error))}},a.onerror=t=>(s.close(),n(a.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=t=>n(r.error)}))}}const dn="/",pn="tensorflowjs_models",fn="info",gn="model_topology",mn="weight_specs",yn="weight_data",bn="model_metadata";function xn(t){return{info:[pn,t,fn].join(dn),topology:[pn,t,gn].join(dn),weightSpecs:[pn,t,mn].join(dn),weightData:[pn,t,yn].join(dn),modelMetadata:[pn,t,bn].join(dn)}}function wn(t){const e=t.split(dn);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(dn)}class vn{constructor(t){if(!o().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=xn(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),r=en(t);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(Ze)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,r=e.length;t<r;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(t.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata})),{modelArtifactsInfo:r}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const t=JSON.parse(s);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,e.userDefinedMetadata=t.userDefinedMetadata}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(Ze){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(i),e}}vn.URL_SCHEME="localstorage://";const kn=t=>{return o().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(vn.URL_SCHEME)?(e=t.slice(vn.URL_SCHEME.length),new vn(e)):null;var e};nn.registerSaveRouter(kn),nn.registerLoadRouter(kn);class $n{constructor(){jt(o().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),jt("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=pn+dn,n=dn+fn;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(e)&&s.endsWith(n)&&(t[wn(s)]=JSON.parse(this.LS.getItem(s)))}return t}async removeModel(t){var e;const n=xn(t=(e=t).startsWith(vn.URL_SCHEME)?e.slice(vn.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class In{constructor(){this.managers={}}static getInstance(){return null==In.instance&&(In.instance=new In),In.instance}static registerManager(t,e){jt(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),jt(t.length>0,(()=>"scheme must not be an empty string."));const n=In.getInstance();jt(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Sn{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(o().get("IS_BROWSER")){o().setPlatform("browser",new Sn);try{In.registerManager(vn.URL_SCHEME,new $n)}catch(t){}try{In.registerManager(un.URL_SCHEME,new hn)}catch(t){}}let En;function Cn(t,e="float32",n){return e=e||"float32",be(t),new Ae(t,e,n)}function Nn(t,e){let n=t;if(oe(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||oe(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&o().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Rn(t,r,[]),r}function Rn(t,e,n){if(n=n||[],!Array.isArray(t)&&!oe(t))return void jt(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));jt(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),jt(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const r=e.slice(1);for(let e=0;e<t.length;++e)Rn(t[e],r,n.concat(e))}function An(t,e,n,r){if(null!=t&&("numeric"!==t&&t!==e||"numeric"===t&&"string"===e))throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}function Tn(t,e,n,r="numeric"){if(t instanceof _e)return An(r,t.dtype,e,n),t;let s=le(t);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),An(r,s,e,n),null==t||!oe(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const i=Nn(t,s);oe(t)||Array.isArray(t)||(t=[t]);const o="string"!==s?he(t,s):Jt(t,[],!0);return Xe.makeTensor(o,i,s)}function Dn(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,r)=>Tn(t,`${e}[${r}]`,n)),r)}function Fn(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...t)=>{Xe.startScope(n);try{const e=r(...t);return e instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),Xe.endScope(e),e}catch(t){throw Xe.endScope(null),t}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}o().get("IS_NODE")&&o().setPlatform("node",new class{constructor(){this.util=n(758),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=o().global.fetch?o().global.fetch(t,e):(null==En&&(En=n(352)),En(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const _n=Fn({cast_:function(t,e){const n=Tn(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:e};return Xe.runKernelFunc((t=>t.cast(n,e)),r,null,S,s)}}),On=Fn({clone_:function(t){const e=Tn(t,"x","clone",null),n={x:e};return Xe.runKernelFunc((()=>Xe.makeTensorFromDataId(e.dataId,e.shape,e.dtype)),n,null,K)}});function Mn(t){return new Promise((t=>setTimeout(t))).then(t)}je(),De={buffer:Cn,cast:_n,clone:On,print:function(t,e=!1){console.log(t.toString(e))}};class Bn{constructor(t){if(!o().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Bn.URL_SCHEME)&&(t=t.slice(Bn.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n},s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),i=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(i.download=this.modelTopologyFileName,i.href=s,await Mn((()=>i.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await Mn((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:en(t)}}}}function Ln(t,e,n,r){!function(t){jt(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){jt(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${t}`)),jt(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${e}`)),jt(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(t.map((i=>(i.then((i=>{const o=n+ ++s/t.length*(r-n);return e(o),i})),i))))}async function zn(t,e){null==e&&(e={});const n=null==e.fetchFunc?o().platform.fetch:e.fetchFunc,r=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),s=(null==e.onProgress?await Promise.all(r):await Ln(r,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(s):await Ln(s,e.onProgress,.5,1)}Bn.URL_SCHEME="downloads://",nn.registerSaveRouter((t=>o().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Bn.URL_SCHEME)?function(t="model"){return new Bn(t)}(t.slice(Bn.URL_SCHEME.length)):null));class Pn{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(jt("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=o().platform.fetch,jt(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&jt(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata,weightsManifest:n};e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:en(t),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest,s=e.generatedBy,i=e.convertedBy,o=e.format,a=e.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let l,u;if(null!=r){const t=await this.loadWeights(r);[l,u]=t}return{modelTopology:n,weightSpecs:l,weightData:u,userDefinedMetadata:a,generatedBy:s,convertedBy:i,format:o}}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(e),s=this.weightPathPrefix||n,i=[];for(const e of t)i.push(...e.weights);const o=[],a=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?a.push(this.weightUrlConverter(t)):o.push(s+t+r);return this.weightUrlConverter&&o.push(...await Promise.all(a)),[i,tn(await zn(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Wn(t){return null!=t.match(Pn.URL_SCHEME_REGEX)}Pn.URL_SCHEME_REGEX=/^https?:\/\//;const Un=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>Wn(t))):Wn(t),n)return function(t,e){return new Pn(t,e)}(t,e)}return null};function Vn(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function Gn(t,e,n){const r=[];for(let s=0;s<t.length;s++)r[s]=Math.ceil((e[s]-t[s])/n[s]);return r}function Hn(t,e,n){return n<=t?n:n-(e-1)}function Kn(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function qn(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function jn(t,e,n,r,s,i){let o=e[s];const a=n[s]||1;(t&1<<s||i&1<<s||null==o)&&(o=a>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return o<0&&(o+=l),o=qt(0,o,l-1),o}function Xn(t,e,n,r,s,i){let o=e[s];const a=n[s]||1;(t&1<<s||i&1<<s||null==o)&&(o=a>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return o<0&&(o+=l),o=a>0?qt(0,o,l):qt(-1,o,l-1),o}function Yn(t,e,n){let r,s;return r="number"==typeof e?[e,...new Array(t.rank-1).fill(0)]:e.length<t.rank?e.concat(new Array(t.rank-e.length).fill(0)):e.slice(),r.forEach((t=>{jt(-1!==t,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(t.rank).fill(-1):"number"==typeof n?[n,...new Array(t.rank-1).fill(-1)]:n.length<t.rank?n.concat(new Array(t.rank-n.length).fill(-1)):n,s=s.map(((e,n)=>e>=0?e:(jt(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-r[n]))),[r,s]}nn.registerSaveRouter(Un),nn.registerLoadRouter(Un);const Jn=Fn({abs_:function(t){const e=Tn(t,"x","abs"),n={x:e};return Xe.runKernelFunc(((t,n)=>(n([e]),"complex64"===e.dtype?t.complexAbs(e):t.abs(e))),n,null,"Abs")}});function Zn(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function Qn(t,e){const n=[],r=t.length;for(let s=0;s<r;s++)-1===e.indexOf(s)&&n.push(t[s]);return[n,e.map((e=>t[e]))]}function tr(t,e){return function(t,e,n){const r=t.length+e.length,s=[];let i=0,o=0;for(let a=0;a<r;a++)-1===n.indexOf(a)?s.push(t[i++]):s.push(e[o++]);return s}(t,e.map((t=>1)),e)}function er(t,e,n){jt(Zn(e,n),(()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`))}function nr(t,e){if(Zn(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach((t=>n.push(t))),n}function rr(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function sr(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}const ir=Fn({transpose_:function(t,e){const n=Tn(t,"x","transpose");if(null==e&&(e=n.shape.map(((t,e)=>e)).reverse()),jt(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`)),e.forEach((t=>{jt(t>=0&&t<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${e}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:e};return Xe.runKernelFunc((t=>t.transpose(n,e)),r,null,_t,s)}}),or=Fn({argMax_:function(t,e=0){let n=Tn(t,"x","argMax");const r={x:n},s={axis:e};return Xe.runKernelFunc(((t,r)=>{r([n]);let s=re(e,n.shape);const i=nr(s,n.rank);return null!=i&&(n=ir(n,i),s=sr(s.length,n.rank)),t.argMax(n,s[0])}),r,null,f,s)}}),ar=Fn({complex_:function(t,e){const n=Tn(t,"real","complex"),r=Tn(e,"imag","complex");Xt(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return Xe.runKernelFunc((t=>t.complex(n,r)),s,null,"Complex")}}),lr=Fn({floorDiv_:function(t,e){let n=Tn(t,"a","floorDiv"),r=Tn(e,"b","floorDiv");[n,r]=Ve(n,r);const s={a:n,b:r};return Xe.runKernelFunc(((t,e)=>{const s=t.floorDiv(n,r);return e([n,r]),s}),s,null,U)}}),ur=Fn({div_:function(t,e){let n=Tn(t,"a","div"),r=Tn(e,"b","div");if([n,r]=Ve(n,r),"int32"===n.dtype&&"int32"===r.dtype)return lr(n,r);const s={a:n,b:r};return Xe.runKernelFunc(((t,e)=>{const s=t.realDivide(n,r);return e([n,r]),s}),s,null,L,{})}});function cr(t,e){const n=t.length,r=[];for(let s=0;s<n;s++){const i=n-1-s,o=t[i]||1;(e[e.length-1-s]||1)>1&&1===o&&r.unshift(i)}return r}function hr(t,e){const n=[];for(let r=0;r<e.length;r++){const s=t[t.length-r-1],i=e.length-r-1,o=e[i];(null==s||1===s&&o>1)&&n.unshift(i)}return n}function dr(t,e){const n=[],r=Math.max(t.length,e.length);for(let s=0;s<r;s++){let r=t[t.length-s-1];null==r&&(r=1);let i=e[e.length-s-1];if(null==i&&(i=1),1===r)n.unshift(i);else if(1===i)n.unshift(r);else{if(r!==i)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(r)}}return n}const pr=Fn({equal_:function(t,e){let n=Tn(t,"a","equal"),r=Tn(e,"b","equal");[n,r]=Ve(n,r),dr(n.shape,r.shape);const s={a:n,b:r};return Xe.runKernelFunc((t=>t.equal(n,r)),s,null,"Equal")}}),fr=Fn({imag_:function(t){const e=Tn(t,"input","imag"),n={input:e};return Xe.runKernelFunc((t=>t.imag(e)),n,null,"Imag")}}),gr=Fn({reshape_:function(t,e){const n=Tn(t,"x","reshape",null);e=function(t,e){let n=1,r=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${e}`);r=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const s=t.slice();return s[r]=e/n,s}(e,n.size),jt(n.size===Zt(e),(()=>"new shape and old shape must have the same number of elements."));const r={x:n},s={shape:e};return Xe.runKernelFunc(((t,r)=>(r([n]),t.reshape(n,e))),r,null,dt,s)}}),mr=Fn({max_:function(t,e=null,n=!1){const r=Tn(t,"x","max"),s={x:r},i={reductionIndices:e,keepDims:n};return Xe.runKernelFunc(((t,s)=>{let i=re(e,r.shape);const o=nr(i,r.rank);let a=r;null!=o&&(a=ir(r,o),i=sr(i.length,a.rank));const l=t.max(a,i);null!=o&&a.dispose();let u=l;if(n){const t=tr(u.shape,re(e,r.shape));u=gr(u,t),l.dispose()}return s([r,u]),u}),s,null,Z,i)}});function yr(t){return Xe.customGrad(t)}const br=Fn({mul_:function(t,e){let n=Tn(t,"a","mul"),r=Tn(e,"b","mul");[n,r]=Ve(n,r);const s={a:n,b:r};return Xe.runKernelFunc(((t,e)=>{const s=t.multiply(n,r);return e([n,r]),s}),s,null,nt)}});function xr(t,e="float32"){if("complex64"===e){const e=xr(t,"float32"),n=xr(t,"float32");return ar(e,n)}const n=ge(Zt(t),e);return Xe.makeTensor(n,t,e)}function wr(t,e="float32"){if("complex64"===e){const e=wr(t,"float32"),n=xr(t,"float32");return ar(e,n)}const n=fe(Zt(t),e);return Xe.makeTensor(n,t,e)}function vr(t,e,n,r){if(null==r&&(r=le(t)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!oe(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){be(e);const t=Zt(e),r=Zt(n);jt(t===r,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`));for(let t=0;t<n.length;++t){const r=n[t],s=t!==n.length-1||r!==Zt(e.slice(t));jt(n[t]===e[t]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return oe(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==r?he(t,r):Jt(t,[],!0),Xe.makeTensor(t,e,r)}function kr(t,e){if((oe(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&oe(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return vr(t,[],[],e)}const $r=Fn({sum_:function(t,e=null,n=!1){let r=Tn(t,"x","sum");"bool"===r.dtype&&(r=_n(r,"int32"));const s={x:r},i={axis:e,keepDims:n};return Xe.runKernelFunc(((t,s)=>{s([r]);const i=re(e,r.shape),o=nr(i,r.rank);let a=i,l=r;null!=o&&(l=ir(r,o),a=sr(a.length,r.rank));let u=t.sum(l,a);if(n){const t=tr(u.shape,i);u=gr(u,t)}return u}),s,null,"Sum",i)}}),Ir=Fn({mean_:function(t,e=null,n=!1){const r=Tn(t,"x","mean"),s=re(e,r.shape),i=Zt(Qn(r.shape,s)[1]);return yr((t=>{const r=kr(i),o=r.dtype===t.dtype?t:_n(t,r.dtype),a=ur(o,r);return{value:$r(a,e,n),gradFunc:e=>{const n=t.shape.slice();s.forEach((t=>{n[t]=1}));const r=gr(e,n);return ur(br(r,wr(t.shape,"float32")),i)}}}))(r)}}),Sr=Fn({min_:function(t,e=null,n=!1){const r=Tn(t,"x","min"),s={x:r},i={axis:e,keepDims:n};return Xe.runKernelFunc(((t,s)=>{const i=re(e,r.shape);let o=i;const a=nr(o,r.rank);let l=r;null!=a&&(l=ir(r,a),o=sr(o.length,r.rank));const u=t.min(l,o);null!=a&&l.dispose();let c=u;if(n){const t=tr(c.shape,i);c=gr(u,t),u.dispose()}return s([r,c]),c}),s,null,"Min",i)}}),Er=Fn({real_:function(t){const e=Tn(t,"input","real"),n={input:e};return Xe.runKernelFunc((t=>t.real(e)),n,null,"Real")}}),Cr=Fn({softmax_:function(t,e=-1){const n=Tn(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r={logits:n},s={dim:e};return Xe.runKernelFunc(((t,r)=>{const s=t.softmax(n,e);return r([s]),s}),r,null,Rt,s)}});function Nr(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}function Rr(t,e,n){return vr(t,e,Nn(t,n),n)}const Ar=Fn({concat_:function(t,e=0){jt(t.length>=1,(()=>"Pass at least one tensor to concat"));let n=Dn(t,"tensors","concat");"complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)}));const r=re(e,n[0].shape)[0],s=Nr(n.map((t=>t.shape)),r);if(0===Zt(s))return Rr([],s);if(n=n.filter((t=>t.size>0)),1===n.length)return n[0];!function(t,e){const n=t[0].length;t.forEach(((t,e)=>{jt(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),jt(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=t[0];t.forEach(((t,s)=>{for(let i=0;i<n;i++)jt(i===e||t[i]===r[i],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}(n.map((t=>t.shape)),r);const i=n,o={axis:e};return Xe.runKernelFunc(((t,e)=>{const s=t.concat(n,r);return e(n),s}),i,null,N,o)}}),Tr=Fn({expandDims_:function(t,e=0){const n=Tn(t,"x","expandDims",null);jt(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r=n.shape.slice();return e<0&&(jt(-(n.rank+1)<=e,(()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`)),e=n.rank+e+1),r.splice(e,0,1),gr(n,r)}}),Dr=Fn({stack_:function(t,e=0){const n=Dn(t,"tensors","stack");if(jt(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),1===n.length)return Tr(n[0],e);const r=n[0].rank,s=n[0].shape,i=n[0].dtype;jt(e<=r,(()=>"Axis must be <= rank of the tensor")),n.forEach((t=>{Xt(s,t.shape,"All tensors passed to stack must have matching shapes"),jt(i===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=n.map((t=>Tr(t,e)));return Ar(o,e)}}),Fr=Fn({sub_:function(t,e){let n=Tn(t,"a","sub"),r=Tn(e,"b","sub");[n,r]=Ve(n,r);const s={a:n,b:r};return Xe.runKernelFunc(((t,e)=>{const s=t.subtract(n,r);return e([n,r]),s}),s,null,"Sub")}});function _r(t,e,n){if(Yt(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Nn(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return vr(t,e,r,n)}function Or(t,e,n){if(Yt(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Nn(t,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return vr(t,e,r,n)}const Mr=Fn({slice_:function(t,e,n){const r=Tn(t,"x","slice");if(0===r.rank)throw new Error("Slicing scalar is not possible");const[s,i]=Yn(r,e,n);!function(t,e,n){jt(t.rank===e.length,(()=>`Error in slice${t.rank}D: Length of begin ${e} must match the rank of the array (${t.rank}).`)),jt(t.rank===n.length,(()=>`Error in slice${t.rank}D: Length of size ${n} must match the rank of the array (${t.rank}).`));for(let r=0;r<t.rank;++r)jt(e[r]+n[r]<=t.shape[r],(()=>`Error in slice${t.rank}D: begin[${r}] + size[${r}] (${e[r]+n[r]}) would overflow input.shape[${r}] (${t.shape[r]})`))}(r,s,i);const o={x:r},a={begin:e,size:n};return Xe.runKernelFunc(((t,e)=>(e([r]),t.slice(r,s,i))),o,null,vt,a)}}),Br=Fn({split_:function(t,e,n=0){const r=Tn(t,"x","split"),s={x:r},i={numOrSizeSplits:e,axis:n};return Xe.runKernelFunc(((t,s)=>{const i=re(n,r.shape)[0],o=function(t,e,n=0){let r=[];if("number"==typeof e)jt(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(e).fill(t.shape[n]/e);else{jt(e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0)<=1,(()=>"There should be only one negative value in split array."));const s=e.indexOf(-1);if(-1!==s){const r=e.reduce(((t,e)=>e>0?t+e:t));e[s]=t.shape[n]-r}jt(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=e}return r}(r,e,i);return t.split(r,o,i)}),s,null,Nt,i)}}),Lr=Fn({zerosLike_:function(t){const e=Tn(t,"x","zerosLike"),n={x:e};return Xe.runKernelFunc((t=>t.zerosLike(e)),n,null,Bt)}}),zr=Fn({fft_:function(t){jt("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return Xe.runKernelFunc((e=>{const n=t.shape[t.shape.length-1],r=t.size/n,s=t.as2D(r,n);return e.fft(s).reshape(t.shape)}),e,null,"FFT")}}),Pr=Fn({rfft_:function(t,e){jt("float32"===t.dtype,(()=>`The dtype for rfft() must be real value but got ${t.dtype}`));let n=t.shape[t.shape.length-1];const r=t.size/n;let s;if(null!=e&&e<n){const r=t.shape.map((t=>0)),i=t.shape.map((t=>t));i[t.shape.length-1]=e,s=Mr(t,r,i),n=e}else if(null!=e&&e>n){const r=t.shape.map((t=>t));r[t.shape.length-1]=e-n,s=Ar([t,xr(r)],t.shape.length-1),n=e}else s=t;const i=Lr(s),o=gr(ar(s,i),[r,n]),a=zr(o),l=Math.floor(n/2)+1,u=Er(a),c=fr(a),h=Br(u,[l,n-l],u.shape.length-1),d=Br(c,[l,n-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,gr(ar(h[0],d[0]),p)}}),Wr=Fn({ifft_:function(t){jt("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return Xe.runKernelFunc((e=>{const n=t.shape[t.shape.length-1],r=t.size/n,s=gr(t,[r,n]),i=e.ifft(s);return gr(i,t.shape)}),e,null,"IFFT")}}),Ur=Fn({reverse_:function(t,e){const n=Tn(t,"x","reverse"),r={x:n},s={dims:e};return Xe.runKernelFunc((t=>{const r=re(e,n.shape);if(0===n.rank)return On(n);const s=t.reverse(n,r);return gr(s,n.shape)}),r,null,mt,s)}}),Vr=Fn({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let r;if(e<=2){const s=gr(t,[n,e]);r=Wr(s)}else{const s=[n,2*(e-1)],i=gr(Er(t),[n,e]),o=gr(fr(t),[n,e]),a=Ur(Mr(i,[0,1],[n,e-2]),1),l=br(Ur(Mr(o,[0,1],[n,e-2]),1),kr(-1)),u=Ar([i,a],1),c=Ar([o,l],1),h=gr(ar(u,c),[s[0],s[1]]);r=Wr(h)}if(r=Er(r),3===t.rank&&0!==t.shape[0]){const e=r,n=t.shape[0];r=gr(r,[n,r.shape[0]/n,r.shape[1]]),e.dispose()}return r}});function Gr(t,e){Yt(t);const n=Nn(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return vr(t,null,n,e)}function Hr(t,e,n){const r=1-t%2,s=new Float32Array(t);for(let i=0;i<t;++i){const o=2*Math.PI*i/(t+r-1);s[i]=e-n*Math.cos(o)}return Gr(s,"float32")}Fn({hammingWindow_:function(t){return Hr(t,.54,.46)}});const Kr=Fn({hannWindow_:function(t){return Hr(t,.5,.5)}});function qr(t,e,n){const r={shape:t,value:e,dtype:n};return Xe.runKernelFunc((r=>r.fill(t,e,n)),{},null,"Fill",r)}const jr=Fn({frame_:function(t,e,n,r=!1,s=0){let i=0;const o=[];for(;i+e<=t.size;)o.push(Mr(t,i,e)),i+=n;if(r)for(;i<t.size;){const r=i+e-t.size,a=Ar([Mr(t,i,e-r),qr([r],s)]);o.push(a),i+=n}return 0===o.length?_r([],[0,e]):gr(Ar(o),[o.length,e])}});function Xr(t,e,n,r,s,i){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==i&&(i=0);const o=t.shape[0];return n=Math.min(n,o),jt(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),jt(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),jt(4===t.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`)),jt(1===e.rank,(()=>"scores must be a 1D tensor")),jt(e.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${e.shape[0]}`)),jt(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:i}}function Yr(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,s=t.length,i=0,o=!1;for(;r<s;){i=r+(s-r>>>1);const a=n(e,t[i]);a>0?r=i+1:(s=i,o=!a)}return o?r:-r-1}(t,e,n||Jr)}(t,e,n),s=r<0?-(r+1):r;t.splice(s,0,e)}function Jr(t,e){return t>e?1:t<e?-1:0}function Zr(t,e,n,r,s,i,o=!1,a=!1,l=!1){const u=[];for(let t=0;t<e.length;t++)e[t]>s&&u.push({score:e[t],boxIndex:t,suppressBeginIndex:0});u.sort(es);const c=i>0?-.5/i:0,h=[],d=[];for(;h.length<n&&u.length>0;){const e=u.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=e;if(n<s)break;let a=!1;for(let n=h.length-1;n>=o;--n){const o=Qr(t,i,h[n]);if(o>=r){a=!0;break}if(e.score=e.score*ts(r,c,o),e.score<=s)break}e.suppressBeginIndex=h.length,a||(e.score===n?(h.push(i),d.push(e.score)):e.score>s&&Yr(u,e,es))}const p=h.length,f=n-p;a&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:Gr(h,"int32")};return o&&(g.selectedScores=Gr(d,"float32")),l&&(g.validOutputs=kr(p,"int32")),g}function Qr(t,e,n){const r=t.subarray(4*e,4*e+4),s=t.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),a=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(a-i)*(l-o),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(i,u),m=Math.max(o,c),y=Math.min(a,h),b=Math.min(l,d),x=Math.max(y-g,0)*Math.max(b-m,0);return x/(p+f-x)}function ts(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function es(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}Fn({stft_:function(t,e,n,r,s=Kr){var i;null==r&&(i=e,r=Math.floor(Math.pow(2,Math.ceil(Math.log(i)/Math.log(2)))));const o=jr(t,e,n),a=br(o,s(e)),l=[];for(let t=0;t<o.shape[0];t++)l.push(Pr(Mr(a,[t,0],[1,e]),r));return Ar(l)}}),Fn({cropAndResize_:function(t,e,n,r,s,i){const o=Tn(t,"image","cropAndResize"),a=Tn(e,"boxes","cropAndResize","float32"),l=Tn(n,"boxInd","cropAndResize","int32");s=s||"bilinear",i=i||0;const u=a.shape[0];jt(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),jt(2===a.rank&&4===a.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${a.shape}.`)),jt(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${a.shape}.`)),jt(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),jt(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),jt("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:o,boxes:a,boxInd:l},h={method:s,extrapolationValue:i,cropSize:r};return Xe.runKernelFunc((t=>t.cropAndResize(o,a,l,r,s,i)),c,null,"CropAndResize",h)}}),Fn({flipLeftRight_:function(t){const e=Tn(t,"image","flipLeftRight","float32");jt(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return Xe.runKernel(P,n,{})}}),Fn({rotateWithOffset_:function(t,e,n=0,r=.5){const s=Tn(t,"image","rotateWithOffset","float32");jt(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const i={image:s},o={radians:e,fillValue:n,center:r};return Xe.runKernel(zt,i,o)}}),Fn({nonMaxSuppression_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=Tn(t,"boxes","nonMaxSuppression"),o=Tn(e,"scores","nonMaxSuppression"),a=Xr(i,o,n,r,s);n=a.maxOutputSize,r=a.iouThreshold,s=a.scoreThreshold;const l={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return Xe.runKernelFunc((t=>t.nonMaxSuppression(i,o,n,r,s)),{boxes:i,scores:o},null,"NonMaxSuppressionV3",l)}}),Fn({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const o=Tn(t,"boxes","nonMaxSuppression"),a=Tn(e,"scores","nonMaxSuppression"),l=Xr(o,a,n,r,s,i),u={boxes:o,scores:a},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:i=l.softNmsSigma},h=Xe.runKernel(it,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Fn({nonMaxSuppressionPadded_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const o=Tn(t,"boxes","nonMaxSuppression"),a=Tn(e,"scores","nonMaxSuppression"),l=Xr(o,a,n,r,s,null),u={boxes:o,scores:a},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:i},h=Xe.runKernel(st,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const ns=Fn({resizeBilinear_:function(t,e,n=!1){const r=Tn(t,"images","resizeBilinear");jt(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),jt(2===e.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`));let s=r,i=!1;3===r.rank&&(i=!0,s=gr(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[o,a]=e,l={images:s},u={alignCorners:n,size:e},c=Xe.runKernelFunc(((t,e)=>(e([s]),t.resizeBilinear(s,o,a,n))),l,null,ft,u);return i?gr(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),rs=Fn({resizeNearestNeighbor_:function(t,e,n=!1){const r=Tn(t,"images","resizeNearestNeighbor");jt(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),jt(2===e.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`)),jt("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype"));let s=r,i=!1;3===r.rank&&(i=!0,s=gr(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[o,a]=e,l={images:s},u={alignCorners:n,size:e},c=Xe.runKernelFunc(((t,e)=>(e([s]),t.resizeNearestNeighbor(s,o,a,n))),l,null,pt,u);return i?gr(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),ss=Fn({greaterEqual_:function(t,e){let n=Tn(t,"a","greaterEqual"),r=Tn(e,"b","greaterEqual");[n,r]=Ve(n,r),dr(n.shape,r.shape);const s={a:n,b:r};return Xe.runKernelFunc(((t,e)=>{const s=t.greaterEqual(n,r);return e([n,r]),s}),s,null,H)}}),is=Fn({lessEqual_:function(t,e){let n=Tn(t,"a","lessEqual"),r=Tn(e,"b","lessEqual");[n,r]=Ve(n,r),dr(n.shape,r.shape);const s={a:n,b:r};return Xe.runKernelFunc(((t,e)=>{const s=t.lessEqual(n,r);return e([n,r]),s}),s,null,"LessEqual")}}),os=Fn({logicalAnd_:function(t,e){const n=Tn(t,"a","logicalAnd","bool"),r=Tn(e,"b","logicalAnd","bool");dr(n.shape,r.shape);const s={a:n,b:r};return Xe.runKernelFunc((t=>t.logicalAnd(n,r)),s,null,"LogicalAnd")}});function as(t,e,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:r};return Xe.runKernelFunc((()=>{if(t===e||t<e&&n<0||e<t&&n>1)return xr([0],r);const s=ge(Math.abs(Math.ceil((e-t)/n)),r);e<t&&1===n&&(n=-1),s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+n;return Gr(s,r)}),{},null,"Range",s)}const ls=Fn({unstack_:function(t,e=0){const n=Tn(t,"x","unstack");jt(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`)),e<0&&(e+=n.shape.length);const r={value:n},s={axis:e};return Xe.runKernelFunc((t=>t.unstack(n,e)),r,null,Ot,s)}}),us=Fn({broadcastTo_:function(t,e){let n=Tn(t,"broadcastTo","x");const r=n.shape;if(e.some((t=>!(t>0)||t%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=gr(n,t)}const s=n.shape,i=Array.from(e);for(let t=e.length-1;t>=0;t--)if(s[t]===e[t])i[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(0===i.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return On(n);const o={x:n},a={shape:e,inputShape:s};return Xe.runKernelFunc((t=>t.tile(n,i)),o,null,I,a)}}),cs=Fn({where_:function(t,e,n){const r=Tn(e,"a","where"),s=Tn(n,"b","where"),i=Tn(t,"condition","where","bool"),o=dr(r.shape,s.shape),a=us(r,o),l=us(s,o);1===i.rank&&jt(i.shape[0]===r.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==i.rank&&Xt(i.shape,l.shape,"Error in where: ");const u={condition:i,t:a,e:l};return Xe.runKernelFunc(((t,e)=>{const n=t.select(i,a,l);return e([i]),n}),u,null,xt)}});Fn({bandPart_:function(t,e,n){jt(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),jt(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Tn(t,"a","bandPart");jt(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[i,o]=r.shape.slice(-2);if(!(e<=i))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);e<0&&(e=i),n<0&&(n=o);const a=gr(as(0,i,1,"int32"),[-1,1]),l=as(0,o,1,"int32"),u=Fr(a,l),c=os(is(u,kr(+e,"int32")),ss(u,kr(-n,"int32"))),h=xr([i,o],r.dtype);return gr(Dr(ls(gr(r,[-1,i,o])).map((t=>cs(c,t,h)))),s)}});const hs=Fn({pow_:function(t,e){let n=Tn(t,"base","pow"),r=Tn(e,"exp","pow");[n,r]=Ve(n,r);const s={a:n,b:r};return Xe.runKernelFunc(((t,e)=>{const s=t.pow(n,r);return e([n,r,s]),s}),s,null,"Pow")}}),ds=Fn({sqrt_:function(t){const e=Tn(t,"x","sqrt"),n={x:e};return Xe.runKernelFunc(((t,n)=>{const r=t.sqrt(e);return n([e]),r}),n,null,Et)}}),ps=Fn({square_:function(t){const e=Tn(t,"x","square"),n=[e];return Xe.runKernelFunc(((t,n)=>(n([e]),t.square(e))),{x:e},null,"Square",{},n,[])}});function fs(t,e,n=null){if(0===t.rank)return Jn(t);if(1!==t.rank&&null===n)return fs(gr(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return $r(Jn(t),n);if(e===1/0)return mr(Jn(t),n);if(e===-1/0)return Sr(Jn(t),n);if("euclidean"===e||2===e)return ds($r(hs(Jn(t),kr(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return mr($r(Jn(t),n[0]),n[1]-1);if(e===1/0)return mr($r(Jn(t),n[1]),n[0]);if(e===-1/0)return Sr($r(Jn(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return ds($r(ps(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const gs=Fn({norm_:function(t,e="euclidean",n=null,r=!1){const s=fs(t=Tn(t,"x","norm"),e,n);let i=s.shape;if(r){const e=re(n,t.shape);i=tr(s.shape,e)}return gr(s,i)}}),ms=Fn({squeeze_:function(t,e){const n=Tn(t,"x","squeeze");return gr(n,function(t,e){const n=[],r=[],s=null!=e&&Array.isArray(e)&&0===e.length,i=null==e||s?null:re(e,t).sort();let o=0;for(let e=0;e<t.length;++e){if(null!=i){if(i[o]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==i[o]||i[o]>e)&&1===t[e]&&(n.push(t[e]),r.push(e)),i[o]<=e&&o++}1!==t[e]&&(n.push(t[e]),r.push(e))}return{newShape:n,keptDims:r}}(n.shape,e).newShape)}});function ys(t){o().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function bs(){return Xe}Fn({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,jt(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)jt(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=Br(t,t.shape[0],0).map((t=>ms(t,[0])));jt(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],r=t;for(let e=0;e<t.length;++e)n.push(Xe.tidy((()=>{let t=r[e];if(e>0)for(let r=0;r<e;++r){const e=br($r(br(n[r],t)),n[r]);t=Fr(t,e)}return ur(t,gs(t,"euclidean"))})));return e?Dr(n,0):n}}),Fe=ys;const xs=Fn({tile_:function(t,e){const n=Tn(t,"x","tile",null);jt(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const r=[n],s={x:n},i={reps:e};return Xe.runKernelFunc(((t,r)=>{const s=t.tile(n,e);return r([n]),s}),s,null,Ft,i,r)}}),ws=Fn({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const s=Cn([t,e],r),i=t<=e?t:e;for(let t=0;t<i;++t)s.set(1,t,t);const o=gr(s.toTensor(),[t,e]);if(null==n)return o;if(1===n.length)return xs(Tr(o,0),[n[0],1,1]);if(2===n.length)return xs(Tr(Tr(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return xs(Tr(Tr(Tr(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),vs=Fn({greater_:function(t,e){let n=Tn(t,"a","greater"),r=Tn(e,"b","greater");[n,r]=Ve(n,r),dr(n.shape,r.shape);const s={a:n,b:r};return Xe.runKernelFunc((t=>t.greater(n,r)),s,null,"Greater")}}),ks=Fn({matMul_:function(t,e,n=!1,r=!1){let s=Tn(t,"a","matMul"),i=Tn(e,"b","matMul");[s,i]=Ve(s,i),jt(s.rank>=2&&i.rank>=2&&s.rank===i.rank,(()=>`Error in matMul: inputs must have the same rank of at least 2, got ranks ${s.rank} and ${i.rank}.`));const o=n?s.shape[s.rank-2]:s.shape[s.rank-1],a=r?i.shape[i.rank-1]:i.shape[i.rank-2],l=n?s.shape[s.rank-1]:s.shape[s.rank-2],u=r?i.shape[i.rank-2]:i.shape[i.rank-1],c=s.shape.slice(0,-2),h=i.shape.slice(0,-2),d=Zt(c),p=Zt(h);jt(Qt(c,h),(()=>`Error in matMul: outer dimensions (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${i.shape} must match.`)),jt(o===a,(()=>`Error in matMul: inner shapes (${o}) and (${a}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${n} and transposeB=${r} must match.`));const f=s.shape.slice(0,-2).concat([l,u]),g=gr(s,n?[d,o,l]:[d,l,o]),m=gr(i,r?[p,u,a]:[p,a,u]),y={a:g,b:m},b={transposeA:n,transposeB:r},x=Xe.runKernelFunc(((t,e)=>(e([g,m]),t.batchMatMul(g,m,n,r))),y,null,k,b);return gr(x,f)}}),$s=Fn({neg_:function(t){const e=Tn(t,"x","neg"),n={x:e};return Xe.runKernelFunc((t=>t.neg(e)),n,null,rt)}});function Is(t,e=!1){return Xe.tidy((()=>{jt(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],r=t.shape[1];let s=ws(n),i=On(t);const o=_r([[1]],[1,1]);let a=On(o);const l=n>=r?r:n;for(let t=0;t<l;++t){const e=i,l=a,u=s;[a,i,s]=Xe.tidy((()=>{const e=Mr(i,[t,t],[n-t,1]),l=gs(e),u=Mr(i,[t,t],[1,1]),c=cs(vs(u,0),_r([[-1]]),_r([[1]])),h=Fr(u,br(c,l)),d=ur(e,h);a=1===d.shape[0]?On(o):Ar([o,Mr(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=$s(ur(ks(c,h),l)),f=Mr(i,[t,0],[n-t,r]),g=br(p,a),m=ir(a);if(0===t)i=Fr(f,ks(g,ks(m,f)));else{const e=Fr(f,ks(g,ks(m,f)));i=Ar([Mr(i,[0,0],[t,r]),e],0)}const y=ir(g),b=Mr(s,[0,t],[n,s.shape[1]-t]);if(0===t)s=Fr(b,ks(ks(b,a),y));else{const e=Fr(b,ks(ks(b,a),y));s=Ar([Mr(s,[0,0],[n,t]),e],1)}return[a,i,s]})),Ge([e,l,u]).forEach((t=>t.dispose()))}return!e&&n>r&&(s=Mr(s,[0,0],[n,r]),i=Mr(i,[0,0],[r,r])),[s,i]}))}var Ss;Fn({qr_:function(t,e=!1){if(jt(t.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`)),2===t.rank)return Is(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),r=ls(gr(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],i=[];return r.forEach((t=>{const[n,r]=Is(t,e);s.push(n),i.push(r)})),[gr(Dr(s,0),t.shape),gr(Dr(i,0),t.shape)]}}}),function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Ss||(Ss={}));const Es=Fn({notEqual_:function(t,e){let n=Tn(t,"a","notEqual"),r=Tn(e,"b","notEqual");[n,r]=Ve(n,r),dr(n.shape,r.shape);const s={a:n,b:r};return Xe.runKernelFunc((t=>t.notEqual(n,r)),s,null,"NotEqual")}}),Cs=Fn({computeWeightedLoss_:function(t,e,n=Ss.SUM_BY_NONZERO_WEIGHTS){const r=Tn(t,"losses","computeWeightedLoss");let s=null;null!=e&&(s=Tn(e,"weights","computeWeightedLoss"));const i=null==s?r:br(r,s);if(n===Ss.NONE)return i;if(n===Ss.SUM)return $r(i);if(n===Ss.MEAN){if(null==s)return Ir(i);{const t=r.size/s.size,e=ur($r(i),$r(s));return t>1?ur(e,kr(t)):e}}if(n===Ss.SUM_BY_NONZERO_WEIGHTS){if(null==s)return ur($r(i),kr(r.size));{const t=br(s,wr(r.shape)),e=_n($r(Es(t,kr(0))),"float32");return ur($r(i),e)}}throw Error(`Unknown reduction: ${n}`)}});Fn({absoluteDifference_:function(t,e,n,r=Ss.SUM_BY_NONZERO_WEIGHTS){const s=Tn(t,"labels","absoluteDifference"),i=Tn(e,"predictions","absoluteDifference");let o=null;null!=n&&(o=Tn(n,"weights","absoluteDifference")),Xt(s.shape,i.shape,"Error in absoluteDifference: ");const a=Jn(Fr(s,i));return Cs(a,o,r)}}),Fn({cosineDistance_:function(t,e,n,r,s=Ss.SUM_BY_NONZERO_WEIGHTS){const i=Tn(t,"labels","cosineDistance"),o=Tn(e,"predictions","cosineDistance");let a=null;null!=r&&(a=Tn(r,"weights","cosineDistance")),Xt(i.shape,o.shape,"Error in cosineDistance: ");const l=kr(1),u=Fr(l,$r(br(i,o),n,!0));return Cs(u,a,s)}});const Ns=Fn({relu_:function(t){const e=Tn(t,"x","relu"),n={x:e};return Xe.runKernelFunc(((t,n)=>(n([e]),"bool"===e.dtype?_n(e,"int32"):t.relu(e))),n,null,ht)}});Fn({hingeLoss_:function(t,e,n,r=Ss.SUM_BY_NONZERO_WEIGHTS){let s=Tn(t,"labels","hingeLoss");const i=Tn(e,"predictions","hingeLoss");let o=null;null!=n&&(o=Tn(n,"weights","hingeLoss")),Xt(s.shape,i.shape,"Error in hingeLoss: ");const a=kr(1);s=Fr(br(kr(2),s),a);const l=Ns(Fr(a,br(s,i)));return Cs(l,o,r)}});const Rs=Fn({add_:function(t,e){let n=Tn(t,"a","add"),r=Tn(e,"b","add");[n,r]=Ve(n,r);const s={a:n,b:r};return Xe.runKernelFunc(((t,e)=>{const s=t.add(n,r);return e([n,r]),s}),s,null,p)}}),As=Fn({minimum_:function(t,e){let n=Tn(t,"a","minimum"),r=Tn(e,"b","minimum");[n,r]=Ve(n,r),"bool"===n.dtype&&(n=_n(n,"int32"),r=_n(r,"int32")),dr(n.shape,r.shape);const s={a:n,b:r};return Xe.runKernelFunc(((t,e)=>{const s=t.minimum(n,r);return e([n,r]),s}),s,null,et)}});Fn({huberLoss_:function(t,e,n,r=1,s=Ss.SUM_BY_NONZERO_WEIGHTS){const i=Tn(t,"labels","huberLoss"),o=Tn(e,"predictions","huberLoss");let a=null;null!=n&&(a=Tn(n,"weights","huberLoss")),Xt(i.shape,o.shape,"Error in huberLoss: ");const l=kr(r),u=Jn(Fr(o,i)),c=As(u,l),h=Fr(u,c),d=Rs(br(kr(.5),ps(c)),br(l,h));return Cs(d,a,s)}});const Ts=Fn({log_:function(t){const e=Tn(t,"x","log"),n={x:e};return Xe.runKernelFunc(((t,n)=>{const r=t.log(e);return n([e]),r}),n,null,"Log")}});Fn({logLoss_:function(t,e,n,r=1e-7,s=Ss.SUM_BY_NONZERO_WEIGHTS){const i=Tn(t,"labels","logLoss"),o=Tn(e,"predictions","logLoss");let a=null;null!=n&&(a=Tn(n,"weights","logLoss")),Xt(i.shape,o.shape,"Error in logLoss: ");const l=kr(1),u=kr(r),c=$s(br(i,Ts(Rs(o,u)))),h=br(Fr(l,i),Ts(Rs(Fr(l,o),u))),d=Fr(c,h);return Cs(d,a,s)}});const Ds=Fn({squaredDifference_:function(t,e){let n=Tn(t,"a","squaredDifference"),r=Tn(e,"b","squaredDifference");[n,r]=Ve(n,r),dr(n.shape,r.shape);const s={a:n,b:r};return Xe.runKernelFunc(((t,e)=>{const s=t.squaredDifference(n,r);return e([n,r]),s}),s,null,At,{})}});Fn({meanSquaredError_:function(t,e,n,r=Ss.SUM_BY_NONZERO_WEIGHTS){const s=Tn(t,"labels","meanSquaredError"),i=Tn(e,"predictions","meanSquaredError");let o=null;null!=n&&(o=Tn(n,"weights","meanSquaredError")),Xt(s.shape,i.shape,"Error in meanSquaredError: ");const a=Ds(s,i);return Cs(a,o,r)}});const Fs=Fn({exp_:function(t){const e=Tn(t,"x","exp"),n={x:e};return Xe.runKernelFunc(((t,n)=>{const r=t.exp(e);return n([r]),r}),n,null,"Exp")}}),_s=Fn({log1p_:function(t){const e=Tn(t,"x","log1p"),n={x:e};return Xe.runKernelFunc(((t,n)=>{const r=t.log1p(e);return n([e]),r}),n,null,Y)}});Fn({sigmoidCrossEntropy_:function(t,e,n,r=0,s=Ss.SUM_BY_NONZERO_WEIGHTS){let i=Tn(t,"multiClassLabels","sigmoidCrossEntropy");const o=Tn(e,"logits","sigmoidCrossEntropy");let a=null;if(null!=n&&(a=Tn(n,"weights","sigmoidCrossEntropy")),Xt(i.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=kr(r),e=kr(1),n=kr(.5);i=Rs(br(i,Fr(e,t)),br(n,t))}const l=function(t,e){const n=Tn(t,"labels","sigmoidCrossEntropyWithLogits"),r=Tn(e,"logits","sigmoidCrossEntropyWithLogits");Xt(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Ns(r),i=br(r,n),o=_s(Fs($s(Jn(r))));return Rs(Fr(s,i),o)}(i,o);return Cs(l,a,s)}});const Os=Fn({logSumExp_:function(t,e=null,n=!1){const r=Tn(t,"x","logSumExp"),s=re(e,r.shape),i=mr(r,s,!0),o=Fr(r,i),a=Fs(o),l=$r(a,s),u=Ts(l),c=Rs(gr(i,u.shape),u);if(n){const t=tr(c.shape,s);return gr(c,t)}return c}});function Ms(t,e,n,r,s="NHWC",i){return zs(t,[...e,t[3]],n,i,r,null,null,js(s))}function Bs(t,e,n,r,s,i,o="channelsLast"){const[a,l]=Us(e);let u;if("channelsLast"===o)u=[a,l,t[3],t[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);u=[a,l,t[1],t[1]]}return zs(t,u,n,r,s,i,!1,o)}function Ls(t,e,n,r,s,i,o="NDHWC"){const[a,l,u]=Vs(e);let c,h;if("NDHWC"===o)h="channelsLast",c=[a,l,u,t[4],t[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);h="channelsFirst",c=[a,l,u,t[1],t[1]]}return Ps(t,c,n,r,s,!1,h,i)}function zs(t,e,n,r,s,i,o=!1,a="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,h]=t;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,h,u,c]=t}const[d,p,,f]=e,[g,m]=Us(n),[y,b]=Us(r),x=Gs(d,y),w=Gs(p,b),{padInfo:v,outHeight:k,outWidth:$}=function(t,e,n,r,s,i,o,a,l){let u,c,h;if("number"==typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,r,s){null==r&&(r=Ws(t,e,n));const i=t[1],o=Hs((t[0]-e+2*r)/n+1,s);jt(te(o),(()=>`The output # of rows (${o}) must be an integer. Change the stride and/or zero pad parameters`));const a=Hs((i-e+2*r)/n+1,s);return jt(te(a),(()=>`The output # of columns (${a}) must be an integer. Change the stride and/or zero pad parameters`)),[o,a]}([e,n],i,r,t,a);c=s[0],h=s[1]}else if("same"===t){c=Math.ceil(e/r),h=Math.ceil(n/s);const t=Math.max(0,(c-1)*r+i-e),a=Math.max(0,(h-1)*s+o-n),l=Math.floor(t/2),d=t-l,p=Math.floor(a/2);u={top:l,bottom:d,left:p,right:a-p,type:"SAME"}}else if("valid"===t)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-i+1)/r),h=Math.ceil((n-o+1)/s);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const d="channelsLast"===l?t[1][0]:t[2][0],p="channelsLast"===l?t[1][1]:t[2][1],f="channelsLast"===l?t[2][0]:t[3][0],g="channelsLast"===l?t[2][1]:t[3][1];u={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},c=Hs((e-i+d+p)/r+1,a),h=Hs((n-o+f+g)/s+1,a)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,g,m,x,w,i,a),I=o?f*h:f;let S;return"channelsFirst"===a?S=[l,I,k,$]:"channelsLast"===a&&(S=[l,k,$,I]),{batchSize:l,dataFormat:a,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:$,outChannels:I,padInfo:v,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:t,outShape:S,filterShape:e}}function Ps(t,e,n,r,s,i=!1,o="channelsLast",a){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h,d]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,d,u,c,h]=t}const[p,f,g,,m]=e,[y,b,x]=Vs(n),[w,v,k]=Vs(r),$=Gs(p,w),I=Gs(f,v),S=Gs(g,k),{padInfo:E,outDepth:C,outHeight:N,outWidth:R}=function(t,e,n,r,s,i,o,a,l,u,c){let h,d,p,f;if("number"==typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const i=function(t,e,n,r,s,i){null==s&&(s=Ws(t,e,r));const o=t[1],a=t[2],l=Hs((t[0]-e+2*s)/r+1,i);jt(te(l),(()=>`The output # of depths (${l}) must be an integer. Change the stride and/or zero pad parameters`));const u=Hs((o-e+2*s)/r+1,i);jt(te(u),(()=>`The output # of rows (${u}) must be an integer. Change the stride and/or zero pad parameters`));const c=Hs((a-e+2*s)/r+1,i);return jt(te(c),(()=>`The output # of columns (${c}) must be an integer. Change the stride and/or zero pad parameters`)),[l,u,c,1]}([e,n,r,1],a,0,s,t,c);d=i[0],p=i[1],f=i[2]}else if("same"===t){d=Math.ceil(e/s),p=Math.ceil(n/i),f=Math.ceil(r/o);const t=(d-1)*s+a-e,c=(p-1)*i+l-n,g=(f-1)*o+u-r,m=Math.floor(t/2),y=t-m,b=Math.floor(c/2),x=c-b,w=Math.floor(g/2);h={top:b,bottom:x,left:w,right:g-w,front:m,back:y,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((e-a+1)/s),p=Math.ceil((n-l+1)/i),f=Math.ceil((r-u+1)/o)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,y,b,x,$,I,S,a),A=i?m*d:m;let T;return"channelsFirst"===o?T=[l,A,C,N,R]:"channelsLast"===o&&(T=[l,C,N,R,A]),{batchSize:l,dataFormat:o,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:C,outHeight:N,outWidth:R,outChannels:A,padInfo:E,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:$,effectiveFilterHeight:I,effectiveFilterWidth:S,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:t,outShape:T,filterShape:e}}function Ws(t,e,n,r=1){const s=Gs(e,r);return Math.floor((t[0]*(n-1)-n+s)/2)}function Us(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function Vs(t){return"number"==typeof t?[t,t,t]:t}function Gs(t,e){return e<=1?t:t+(t-1)*(e-1)}function Hs(t,e){if(!e)return t;switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function Ks(t){const[e,n,r]=Us(t);return 1===e&&1===n&&1===r}function qs(t,e){return Ks(t)||Ks(e)}function js(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}Fn({softmaxCrossEntropy_:function(t,e,n,r=0,s=Ss.SUM_BY_NONZERO_WEIGHTS){let i=Tn(t,"onehotLabels","softmaxCrossEntropy");const o=Tn(e,"logits","softmaxCrossEntropy");let a=null;if(null!=n&&(a=Tn(n,"weights","softmaxCrossEntropy")),Xt(i.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const t=kr(r),e=kr(1),n=kr(i.shape[1]);i=Rs(br(i,Fr(e,t)),ur(t,n))}const l=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return yr(((t,e,r)=>{const s=Os(e,[n],!0),i=Fr(_n(e,"float32"),s);r([t,i]);const o=$s(br(i,t));return{value:$r(o,[n]),gradFunc:(t,e)=>{const[r,s]=e,i=tr(t.shape,[n]);return[br(gr(t,i),Fr(_n(r,"float32"),Fs(s))),br(gr(t,i),Fr(Fs(s),_n(r,"float32")))]}}}))(t,e)}(i,o);return Cs(l,a,s)}});const Xs=Fn({elu_:function(t){const e=Tn(t,"x","elu"),n={x:e};return Xe.runKernelFunc(((t,n)=>{const r=t.elu(e);return n([r]),r}),n,null,"Elu")}}),Ys=Fn({prelu_:function(t,e){const n=Tn(t,"x","prelu"),r=Tn(e,"alpha","prelu"),s={x:n,alpha:r};return Xe.runKernelFunc(((t,e)=>{const s=t.prelu(n,r);return e([n,r]),s}),s,null,ut)}}),Js=Fn({relu6_:function(t){const e=Tn(t,"x","relu6"),n={x:e};return Xe.runKernelFunc(((t,n)=>(n([e]),"bool"===e.dtype?_n(e,"int32"):t.relu6(e))),n,null,gt)}}),Zs=Fn({step_:function(t,e=0){const n=Tn(t,"x","step"),r={x:n},s={alpha:e};return Xe.runKernelFunc((t=>t.step(n,e)),r,null,Lt,s)}});function Qs(t,e,n,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)s=s.concat([t[r+1]/e[r],e[r]]);s=s.concat(t.slice(n+1))}return s}function ti(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<t;++r)r>=2*e+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function ei(t,e,n,r=!0){const s=[];r?s.push(t[0]/n):s.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?r?s.push(e[n-1]*t[n]):s.push(t[n]/e[n-1]):s.push(t[n]);return s}function ni(t,e,n){const r=e.shape.length,s=r>1?e.shape[r-1]:1,i=n.length;let o=1;for(let t=s;t<i;++t)o*=n[t];const a=s<1?1:s;return{sliceRank:s,numUpdates:Zt(e.shape)/a,sliceSize:o,strides:[...ce(n.slice(0,s)),1],outputSize:Zt(n)}}function ri(t,e){return{real:t[2*e],imag:t[2*e+1]}}function si(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function ii(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}class oi{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}function ai(t){throw new Error(`'${t}' not yet implemented or not found in the registry. Did you forget to import the kernel?`)}const li={kernelName:"Abs",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>br(t,Zs(_n(n,"float32"),-1))}}},ui={kernelName:h,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=ps(_n(n,"float32")),r=ds(Fr(kr(1),e));return $s(ur(t,r))}}}},ci={kernelName:d,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=ds(Fr(ps(_n(n,"float32")),1));return ur(t,e)}}}},hi={kernelName:p,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=dr(n.shape,r.shape);return{a:()=>{let e=t;const r=hr(n.shape,s);return r.length>0&&(e=$r(e,r)),gr(e,n.shape)},b:()=>{let e=t;const n=hr(r.shape,s);return n.length>0&&(e=$r(e,n)),gr(e,r.shape)}}}},di={kernelName:f,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lr(n)}}},pi={kernelName:g,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lr(n)}}},fi={kernelName:m,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ur(t,ds(Fr(kr(1),ps(_n(n,"float32")))))}}},gi={kernelName:y,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=ds(Rs(kr(1),ps(_n(n,"float32"))));return ur(t,e)}}}},mi={kernelName:w,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=dr(n.shape,r.shape);return{a:()=>{const e=Rs(ps(n),ps(r));let i=br(t,ur(r,e));const o=hr(n.shape,s);return o.length>0&&(i=$r(i,o)),gr(i,n.shape)},b:()=>{const e=Rs(ps(n),ps(r));let i=$s(br(t,ur(n,e)));const o=hr(r.shape,s);return o.length>0&&(i=$r(i,o)),gr(i,r.shape)}}}},yi={kernelName:b,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ur(t,Rs(ps(_n(n,"float32")),1))}}},bi={kernelName:x,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ur(t,Fr(kr(1),ps(_n(n,"float32"))))}}},xi=Fn({avgPool3dBackprop_:function(t,e,n,r,s=[1,1,1],i,o){const a=Tn(t,"dy","avgPool3dBackprop"),l=Tn(e,"input","avgPool3dBackprop");let u=a,c=l,h=!1;4===l.rank&&(h=!0,u=gr(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),c=gr(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),jt(5===u.rank,(()=>`Error in avgPool3dBackprop: dy must be rank 5 but got rank ${u.rank}.`)),jt(5===c.rank,(()=>`Error in avgPool3dBackprop: input must be rank 5 but got rank ${c.rank}.`)),jt(qs(r,s),(()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`)),null!=o&&jt(te(i),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`));const d={dy:u,input:c},p={filterSize:n,strides:r,dilations:s,pad:i,dimRoundingMode:o},f=Xe.runKernelFunc((t=>{const e=Ls(c.shape,n,r,s,i,o);return t.avgPool3dBackprop(u,c,e)}),d,null,"AvgPool3DBackprop",p);return h?gr(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),wi={kernelName:"AvgPool3D",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:i,dilations:o,pad:a,dimRoundingMode:l}=n,u=null==o?[1,1,1]:o;return{x:()=>xi(t,r,s,i,u,a,l)}}},vi=Fn({avgPoolBackprop_:function(t,e,n,r,s){const i=Tn(t,"dy","avgPoolBackprop"),o=Tn(e,"input","avgPoolBackprop");jt(o.rank===i.rank,(()=>`Rank of input (${o.rank}) does not match rank of dy (${i.rank})`));let a=o,l=i,u=!1;3===o.rank&&(u=!0,a=gr(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=gr(i,[1,i.shape[0],i.shape[1],i.shape[2]])),jt(4===l.rank,(()=>`Error in avgPoolBackprop: dy must be rank 4 but got rank ${l.rank}.`)),jt(4===a.rank,(()=>`Error in avgPoolBackprop: input must be rank 4 but got rank ${a.rank}.`));const c={dy:l,input:a},h={filterSize:n,strides:r,pad:s},d=Xe.runKernelFunc((t=>{const e=Bs(a.shape,n,r,1,s);return t.avgPoolBackprop(l,a,e)}),c,null,"AvgPoolBackprop",h);return u?gr(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),ki={kernelName:v,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:i,pad:o}=n;return{x:()=>vi(t,r,s,i,o)}}},$i={kernelName:k,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,s]=e,{transposeA:i,transposeB:o}=n;return i||o?!i&&o?{a:()=>ks(t,s,!1,!1),b:()=>ks(t,r,!0,!1)}:i&&!o?{a:()=>ks(s,t,!1,!0),b:()=>ks(r,t,!1,!1)}:{a:()=>ks(s,t,!0,!0),b:()=>ks(t,r,!0,!0)}:{a:()=>ks(t,s,!1,!0),b:()=>ks(r,t,!0,!1)}}},Ii=Fn({spaceToBatchND_:function(t,e,n){const r=Tn(t,"x","spaceToBatchND");jt(r.rank>=1+e.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`)),jt(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),jt(r.shape.reduce(((t,r,s)=>s>0&&s<=e.length?t&&(r+n[s-1][0]+n[s-1][1])%e[s-1]==0:t),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const s={x:r},i={blockShape:e,paddings:n};return Xe.runKernelFunc((t=>t.spaceToBatchND(r,e,n)),s,null,Ct,i)}}),Si={kernelName:$,gradFunc:(t,e,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Ii(t,r,s)}}},Ei={kernelName:I,gradFunc:(t,e,n)=>{const r=n,s=r.inputShape,i=r.shape,o=Array.from(i);for(let t=s.length-1;t>=0;t--)if(s[t]===i[t])o[t]=1;else if(1!==s[t])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${i}].`);const a=[];for(let t=0;t<o.length;t++)o[t]>1&&a.push(t);return{x:()=>$r(t,a,!0)}}},Ci={kernelName:S,gradFunc:t=>({x:()=>t.clone()})},Ni={kernelName:E,gradFunc:t=>({x:()=>Lr(t)})},Ri={kernelName:C,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:s,clipValueMax:i}=n;return{x:()=>cs(os(ss(r,s),is(r,i)),t,Lr(t))}}},Ai={kernelName:N,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map((t=>t.shape)),{axis:s}=n,i=re(s,e[0].shape)[0],o=r.map((t=>t[i]));return Br(t,o,i).map((t=>()=>t))}},Ti=Fn({conv2DBackpropFilter_:function(t,e,n,r,s,i="NHWC",o){let a=t;3===t.rank&&(a=gr(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=gr(e,[1,e.shape[0],e.shape[1],e.shape[2]])),jt(4===a.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`)),jt(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),jt(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===i?a.shape[3]:a.shape[1],c="NHWC"===i?l.shape[3]:l.shape[1];jt(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),jt(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=o&&jt(te(s),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`));const h={x:a,dy:l},d={strides:r,pad:s,dataFormat:i,dimRoundingMode:o};return Xe.runKernelFunc((t=>{const e=js(i),u=zs(a.shape,n,r,1,s,o,!1,e);return t.conv2dDerFilter(a,l,u)}),h,null,"Conv2DBackpropFilter",d)}}),Di=Fn({conv2DBackpropInput_:function(t,e,n,r,s,i="NHWC",o){jt(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let a=t,l=e,u=!1;3===e.rank&&(u=!0,l=gr(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,t[0],t[1],t[2]]),jt(4===a.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`)),jt(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),jt(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===i?a[3]:a[1],h="NHWC"===i?l.shape[3]:l.shape[1];jt(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),jt(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=o&&jt(te(s),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`));const d={dy:l,filter:n},p={strides:r,pad:s,dataFormat:i,dimRoundingMode:o,inputShape:a},f=Xe.runKernelFunc(((t,e)=>{const u=js(i),c=zs(a,n.shape,r,1,s,o,!1,u),h=t.conv2dDerInput(l,n,c);return e([l,n]),h}),d,null,A,p);return u?gr(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Fi={kernelName:R,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{dilations:i,strides:o,pad:a,dataFormat:l}=n;return jt(Ks(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>Di(r.shape,t,s,o,a,l),filter:()=>Ti(r,t,s.shape,o,a,l)}}},_i=Fn({conv2d_:function(t,e,n,r,s="NHWC",i=[1,1],o){const a=Tn(t,"x","conv2d"),l=Tn(e,"filter","conv2d");let u=a,c=!1;3===a.rank&&(c=!0,u=gr(a,[1,a.shape[0],a.shape[1],a.shape[2]])),jt(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),jt(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=o&&jt(te(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`));const h="NHWC"===s?u.shape[3]:u.shape[1];jt(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),jt(qs(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:o},f=Xe.runKernelFunc(((t,e)=>{const a=js(s),c=zs(u.shape,l.shape,n,i,r,o,!1,a),h=t.conv2d(u,l,c);return e([u,l]),h}),d,null,R,p);return c?gr(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Oi={kernelName:A,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{strides:i,pad:o,dataFormat:a,dimRoundingMode:l}=n;return{dy:()=>_i(t,s,i,o,a,1,l),filter:()=>Ti(t,r,s.shape,i,o,a,l)}}},Mi=Fn({conv3DBackpropFilter_:function(t,e,n,r,s){let i=t;4===t.rank&&(i=gr(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let o=e;4===o.rank&&(o=gr(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),jt(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),jt(5===o.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`)),jt(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),jt(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),jt(o.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`));const a={x:i,y:o},l={strides:r,pad:s};return Xe.runKernelFunc((t=>{const e=Ps(i.shape,n,r,1,s);return t.conv3dDerFilter(i,o,e)}),a,null,"Conv3DBackpropFilterV2",l)}}),Bi=Fn({conv3DBackpropInput_:function(t,e,n,r,s){jt(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let i=t,o=e,a=!1;4===e.rank&&(a=!0,o=gr(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,t[0],t[1],t[2],t[3]]);const l=i[4],u=o.shape[4];jt(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),jt(5===o.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`)),jt(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),jt(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),jt(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:o},h={pad:s},d=Xe.runKernelFunc((t=>{const e=Ps(i,n.shape,r,1,s);return t.conv3dDerInput(o,n,e)}),c,null,"Conv3DBackpropInputV2",h);return a?gr(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Li={kernelName:"Conv3D",inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:i}=n;jt(Ks(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[o,a]=e;return{x:()=>Bi(o.shape,t,a,s,i),filter:()=>Mi(o,t,a.shape,s,i)}}},zi=Fn({sin_:function(t){const e=Tn(t,"x","sin"),n={x:e};return Xe.runKernelFunc(((t,n)=>{const r=t.sin(e);return n([e]),r}),n,null,"Sin")}}),Pi={kernelName:T,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>br($s(zi(_n(n,"float32"))),t)}}},Wi=Fn({sinh_:function(t){const e=Tn(t,"x","sinh"),n={x:e};return Xe.runKernelFunc(((t,n)=>{const r=t.sinh(e);return n([e]),r}),n,null,kt)}}),Ui={kernelName:D,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>br(Wi(_n(n,"float32")),t)}}},Vi=Fn({cumsum_:function(t,e=0,n=!1,r=!1){const s=Tn(t,"x","cumsum"),i={x:s},o={axis:e,exclusive:n,reverse:r};return Xe.runKernelFunc(((t,i)=>{const o=nr([e],s.rank);let a=s;null!=o&&(a=ir(s,o));const l=sr(1,s.rank)[0];let u=t.cumsum(a,l,n,r);if(i([s]),null!=o){const t=rr(o);u=ir(u,t)}return u}),i,null,F,o)}}),Gi={kernelName:F,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s,exclusive:i,reverse:o}=n;return{x:()=>{const e=nr([s],r.rank);let n=Vi(t,s,i,!o);return null!=e&&(n=ir(n,e)),n}}}},Hi=Fn({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,r){let s=t;3===t.rank&&(s=gr(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let i=e;3===i.rank&&(i=gr(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const o={x:s,dy:i};return Xe.runKernelFunc((t=>t.depthwiseConv2DDerFilter(s,i,r)),o,null,"DepthwiseConv2dNativeBackpropFilter")}}),Ki=Fn({depthwiseConv2dNativeBackpropInput_:function(t,e,n,r){let s=e,i=!1;3===e.rank&&(i=!0,s=gr(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const o={dy:s},a=Xe.runKernelFunc((t=>t.depthwiseConv2DDerInput(s,n,r)),o,null,"DepthwiseConv2dNativeBackpropInput");return i?gr(a,[a.shape[1],a.shape[2],a.shape[3]]):a}}),qi={kernelName:_,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:i,dimRoundingMode:o}=n,a=null==r?[1,1]:r;jt(Ks(a),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[l,u]=e;jt(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),jt(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),jt(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),jt(qs(s,a),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${a}'.`)),null!=o&&jt(te(i),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`));const c=zs(l.shape,u.shape,s,a,i,o,!0);return{x:()=>Ki(l.shape,t,u,c),filter:()=>Hi(l,t,u.shape,c)}}},ji={kernelName:O,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,i={x:r,filter:s,dy:t},o={x:r,filter:s,dy:t};return{x:()=>Xe.runKernel(M,i,n),filter:()=>Xe.runKernel(B,o,n)}}},Xi={kernelName:L,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=dr(n.shape,r.shape);return{a:()=>{const e=ur(t,_n(r,"float32")),i=hr(n.shape,s);return i.length>0?gr($r(e,i),n.shape):e},b:()=>{let e=br(t,_n(n,"float32"));const i=hr(r.shape,s);i.length>0&&(e=gr($r(e,i),r.shape));const o=ps(r);return $s(ur(e,_n(o,"float32")))}}}},Yi={kernelName:"Elu",outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r=e=>e.eluDer(t,n),s={dy:t,y:n};return{x:()=>Xe.runKernelFunc(r,s,null,"EluGrad")}}},Ji={kernelName:"Erf",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=br(Fs($s(ps(n))),2/Math.sqrt(Math.PI));return{x:()=>br(t,r)}}},Zi={kernelName:"Exp",outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>br(t,n)}}},Qi={kernelName:z,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>br(t,Fs(n))}}},to={kernelName:W,gradFunc:t=>({x:()=>Lr(t)})},eo={kernelName:U,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=dr(n.shape,r.shape);return{a:()=>{const e=ur(t,_n(r,"float32")),i=hr(n.shape,s);return i.length>0?gr($r(e,i),n.shape):e},b:()=>{let e=br(t,_n(n,"float32"));const i=hr(r.shape,s);i.length>0&&(e=gr($r(e,i),r.shape));const o=ps(r);return $s(ur(e,_n(o,"float32")))}}}},no=Fn({rsqrt_:function(t){const e=Tn(t,"x","rsqrt"),n={x:e};return Xe.runKernelFunc(((t,n)=>{const r=t.rsqrt(e);return n([e]),r}),n,null,bt)}}),ro={kernelName:V,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[s,i,o,a]=e,l=null==a?kr(1):a,u=hr(i.shape,s.shape),c=[];if(1===i.rank){for(let t=0;t<s.shape.length-1;++t)c.push(s.shape[t]);c.push(1)}const h=Fr(s,i),d=br(t,l),p=no(Rs(o,kr(r))),f=br(br(br(p,p),p),kr(-.5));return{x:()=>1===i.rank?gr(br(br(t,xs(gr(p,[1,1,1,i.shape[0]]),c)),l),s.shape):gr(br(br(t,p),l),s.shape),mean:()=>{let t=br(br(p,kr(-1)),d);return 1===i.rank&&(t=$r(t,u)),gr(t,i.shape)},variance:()=>{let t=br(br(f,h),d);return 1===i.rank&&(t=$r(t,u)),gr(t,i.shape)},scale:()=>{const e=br(h,p);let n=br(t,e);return 1===i.rank&&(n=$r(n,u)),gr(n,i.shape)},offset:()=>{let e=t;return 1===i.rank&&(e=$r(e,u)),gr(e,i.shape)}}}},so=Fn({unsortedSegmentSum_:function(t,e,n){const r=Tn(t,"x","unsortedSegmentSum"),s=Tn(e,"segmentIds","unsortedSegmentSum","int32");jt(te(n),(()=>"numSegments must be of dtype int"));const i={x:r,segmentIds:s},o={numSegments:n};return Xe.runKernelFunc(((t,e)=>{const i=t.unsortedSegmentSum(r,s,n);return e([s]),i}),i,null,Mt,o)}}),io={kernelName:G,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,s]=e,{axis:i}=n,o=re(i,r.shape)[0];return{x:()=>{const e=r.shape,n=s.size,a=e.slice(0,o),l=a.length,u=e.slice(i,e.length).slice(1),c=u.length,h=oo(0,l),d=oo(l+1,l+1+c),p=ao([a,[n],u]),f=gr(t,p),g=gr(s,[n]),m=ao([[l],h,d]),y=ir(f,m);let b=so(y,g,r.shape[o]);const x=rr(m);return b=ir(b,x),b},indices:()=>s}}};function oo(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function ao(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const lo={kernelName:H,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Lr(n),b:()=>Lr(r)}}},uo={kernelName:K,gradFunc:t=>({x:()=>_n(t,"float32")})},co={kernelName:q,gradFunc:t=>({x:()=>Lr(t)})},ho={kernelName:j,gradFunc:t=>({x:()=>Lr(t)})},po={kernelName:X,gradFunc:t=>({x:()=>Lr(t)})},fo={kernelName:Y,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ur(t,Rs(n,1))}}},go={kernelName:"Log",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ur(t,_n(n,"float32"))}}},mo={kernelName:J,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:s}=n;return{logits:()=>{const e=Fs(r);return Fr(t,br($r(t,s,!0),e))}}}},yo=Fn({localResponseNormalizationBackprop_:function(t,e,n,r=5,s=1,i=1,o=.5){const a={x:t,y:e,dy:n},l={depthRadius:r,bias:s,alpha:i,beta:o};return Xe.runKernelFunc((a=>a.LRNGrad(n,t,e,r,s,i,o)),a,null,"LRNBackprop",l)}}),bo={kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{depthRadius:i,bias:o,alpha:a,beta:l}=n;return{x:()=>yo(r,s,t,i,o,a,l)}}};function xo(t,e,n,r,s){return e.rank<n.rank&&(e=gr(e,tr(e.shape,r))),t.rank<n.rank&&(t=gr(t,tr(t.shape,r))),{x:()=>{const r=br(t,_n(pr(n,e),t.dtype));return null==s?r:ir(r,s)}}}const wo={kernelName:Z,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:s}=r,[i,o]=e,a=re(s,i.shape),l=nr(a,i.rank),u=xo(t,o,i,a,l);return{x:()=>{let t=u.x();return null!=l&&(t=ir(t)),t}}}},vo=Fn({less_:function(t,e){let n=Tn(t,"a","less"),r=Tn(e,"b","less");[n,r]=Ve(n,r),dr(n.shape,r.shape);const s={a:n,b:r};return Xe.runKernelFunc((t=>t.less(n,r)),s,null,"Less")}}),ko={kernelName:Q,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>br(t,_n(ss(n,r),"float32")),b:()=>br(t,_n(vo(n,r),"float32"))}}},$o=Fn({maxPool3dBackprop_:function(t,e,n,r,s,i=[1,1,1],o,a){const l=Tn(t,"dy","maxPool3dBackprop"),u=Tn(e,"input","maxPool3dBackprop"),c=Tn(n,"output","maxPool3dBackprop");let h=l,d=u,p=c,f=!1;4===u.rank&&(f=!0,h=gr(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=gr(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=gr(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),jt(5===h.rank,(()=>`Error in maxPool3dBackprop: dy must be rank 5 but got rank ${h.rank}.`)),jt(5===d.rank,(()=>`Error in maxPool3dBackprop: input must be rank 5 but got rank ${d.rank}.`)),jt(5===p.rank,(()=>`Error in maxPool3dBackprop: output must be rank 5 but got rank ${p.rank}.`)),jt(qs(s,i),(()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${s} and dilations '${i}'`)),null!=a&&jt(te(o),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`));const g={dy:h,input:d,output:p},m={filterSize:r,strides:s,dilations:i,pad:o,dimRoundingMode:a},y=Xe.runKernelFunc((t=>{const e=Ls(d.shape,r,s,i,o,a);return t.maxPool3dBackprop(h,d,p,e)}),g,null,"MaxPool3DBackprop",m);return f?gr(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),Io={kernelName:"MaxPool3D",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:i,strides:o,dilations:a,pad:l,dimRoundingMode:u}=n,c=null==a?[1,1,1]:a;return{x:()=>$o(t,r,s,i,o,c,l,u)}}},So=Fn({maxPoolBackprop_:function(t,e,n,r,s,i,o){const a=Tn(t,"dy","maxPoolBackprop"),l=Tn(e,"input","maxPoolBackprop"),u=Tn(n,"output","maxPoolBackprop");jt(l.rank===a.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`)),jt(4===a.rank,(()=>`Error in maxPoolBackprop: dy must be rank 4 but got rank ${a.rank}.`)),jt(4===l.rank,(()=>`Error in maxPoolBackprop: input must be rank 4 but got rank ${l.rank}.`)),null!=o&&jt(te(i),(()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`));const c={dy:a,input:l,output:u},h={filterSize:r,strides:s,pad:i,dimRoundingMode:o};return Xe.runKernelFunc((t=>{const e=Bs(l.shape,r,s,1,i,o);return t.maxPoolBackprop(a,l,u,e)}),c,null,"MaxPoolBackprop",h)}}),Eo={kernelName:tt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:i,strides:o,pad:a}=n;return{x:()=>So(t,r,s,i,o,a)}}},Co={kernelName:"Min",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:s}=r,[i,o]=e,a=re(s,i.shape),l=nr(a,i.rank),u=xo(t,o,i,a,l);return{x:()=>{let t=u.x();return null!=l&&(t=ir(t)),t}}}},No={kernelName:et,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>br(t,_n(is(n,r),"float32")),b:()=>br(t,_n(vs(n,r),"float32"))}}},Ro=Fn({floor_:function(t){const e=Tn(t,"x","floor"),n={x:e};return Xe.runKernelFunc((t=>t.floor(e)),n,null,W)}}),Ao={kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=dr(n.shape,r.shape);return{a:()=>{const e=hr(n.shape,s);return e.length>0?gr($r(t,e),n.shape):t},b:()=>{const e=br(t,$s(Ro(ur(n,r)))),i=hr(r.shape,s);return i.length>0?gr($r(e,i),r.shape):e}}}},To={kernelName:nt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=dr(n.shape,r.shape);return{a:()=>{const e=br(t,_n(r,"float32")),i=hr(n.shape,s);return i.length>0?gr($r(e,i),n.shape):e},b:()=>{const e=br(t,_n(n,"float32")),i=hr(r.shape,s);return i.length>0?gr($r(e,i),r.shape):e}}}},Do={kernelName:rt,gradFunc:t=>({x:()=>$s(t)})},Fo={kernelName:at,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>xr(n.shape,"float32")}}},_o={kernelName:ot,gradFunc:t=>({x:()=>Lr(t)})},Oo={kernelName:lt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,i=s.map((t=>t[0]));return{x:()=>Mr(t,i,r.shape)}}},Mo={kernelName:"Pow",inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,s]=e,i=n,o=r,a=dr(i.shape,o.shape);return{a:()=>{const e=_n(o,"float32");let n=br(t,br(e,hs(i,Fr(e,kr(1)))));const r=hr(i.shape,a);return r.length>0&&(n=$r(n,r)),gr(n,i.shape)},b:()=>{const e=vs(i,0),n=cs(e,Ts(i),Lr(i));let r=br(t,br(s,n));const l=hr(o.shape,a);return l.length>0&&(r=$r(r,l)),gr(r,o.shape)}}}},Bo={kernelName:ut,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,s=vs(n,0);return{x:()=>cs(s,t,br(t,r)),alpha:()=>{let e=cs(s,Lr(t),br(t,n));const i=hr(r.shape,t.shape);return i.length>0&&(e=$r(e,i)),gr(e,r.shape)}}}},Lo={kernelName:ct,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ur(t,$s(ps(n)))}}},zo={kernelName:gt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=br(is(n,6),Zs(n));return{x:()=>br(t,_n(r,"float32"))}}},Po={kernelName:ht,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>br(t,_n(Zs(n),"float32"))}}},Wo={kernelName:dt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>gr(t,n.shape)}}},Uo={kernelName:ft,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s=e=>{const{alignCorners:s}=n;return e.resizeBilinearBackprop(t,r,s)},i={images:r};return{images:()=>Xe.runKernelFunc(s,i,null,"ResizeBilinearGrad",n)}}},Vo={kernelName:pt,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s=e=>{const{alignCorners:s}=n;return e.resizeNearestNeighborBackprop(t,r,s)},i={images:r};return{images:()=>Xe.runKernelFunc(s,i,null,"ResizeNearestNeighborGrad",n)}}},Go={kernelName:mt,gradFunc:(t,e,n)=>{const{dims:r}=n,s=re(r,t.shape);return{x:()=>Ur(t,s)}}},Ho={kernelName:yt,gradFunc:t=>({x:()=>Lr(t)})},Ko={kernelName:bt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$s(ur(t,br(hs(n,1.5),2)))}}},qo=Fn({logicalNot_:function(t){const e=Tn(t,"x","logicalNot","bool"),n={x:e};return Xe.runKernelFunc((t=>t.logicalNot(e)),n,null,"LogicalNot")}}),jo={kernelName:xt,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>_n(Lr(n),"float32"),t:()=>br(t,_n(n,t.dtype)),e:()=>br(t,_n(qo(n),t.dtype))}}},Xo={kernelName:wt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=vs(n,kr(0)),r=kr(1.7580993408473768),s=kr(1.0507009873554805),i=br(t,s),o=br(br(t,r),Fs(_n(n,"float32")));return cs(e,i,o)}}}},Yo={kernelName:It,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>br(t,br(n,Fr(kr(1),n)))}}},Jo={kernelName:$t,gradFunc:t=>({x:()=>Lr(t)})},Zo=Fn({cos_:function(t){const e=Tn(t,"x","cos"),n={x:e};return Xe.runKernelFunc(((t,n)=>{const r=t.cos(e);return n([e]),r}),n,null,T)}}),Qo={kernelName:"Sin",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>br(Zo(_n(n,"float32")),t)}}},ta=Fn({cosh_:function(t){const e=Tn(t,"x","cosh"),n={x:e};return Xe.runKernelFunc(((t,n)=>{const r=t.cosh(e);return n([e]),r}),n,null,D)}}),ea={kernelName:kt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>br(ta(_n(n,"float32")),t)}}},na=Fn({pad_:function(t,e,n=0){const r=Tn(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:n},i={x:r};return Xe.runKernelFunc(((t,s)=>(s([r]),t.pad(r,e,n))),i,null,lt,s)}}),ra={kernelName:vt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:s,size:i}=n,o=r.shape,[a,l]=Yn(r,s,i),u=[];for(let e=0;e<t.rank;e++)u.push([a[e],o[e]-a[e]-l[e]]);return{x:()=>na(t,u)}}},sa={kernelName:Rt,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:s}=n,i=br(t,r);return{logits:()=>Fr(i,br($r(i,[s],!0),r))}}},ia=Fn({sigmoid_:function(t){const e=Tn(t,"x","sigmoid"),n={x:e};return Xe.runKernelFunc(((t,n)=>{const r=t.sigmoid(e);return n([r]),r}),n,null,It)}}),oa={kernelName:St,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>br(t,ia(n))}}},aa=Fn({batchToSpaceND_:function(t,e,n){const r=Tn(t,"x","batchToSpaceND"),s=e.reduce(((t,e)=>t*e));jt(r.rank>=1+e.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`)),jt(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),jt(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`));const i={x:r},o={blockShape:e,crops:n};return Xe.runKernelFunc((t=>t.batchToSpaceND(r,e,n)),i,null,$,o)}}),la={kernelName:Ct,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>aa(t,r,s)}}},ua={kernelName:Nt,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>Ar(t,r)}}},ca={kernelName:Et,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ur(t,br(ds(_n(n,"float32")),2))}}},ha={kernelName:Tt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>br(t,br(_n(n,"float32"),2))}}},da={kernelName:At,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=kr(2);return{a:()=>br(t,br(s,Fr(n,r))),b:()=>br(t,br(s,Fr(r,n)))}}},pa={kernelName:Lt,gradFunc:t=>({x:()=>Lr(t)})},fa={kernelName:"Sub",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=dr(n.shape,r.shape);return{a:()=>{let e=t;const r=hr(n.shape,s);return r.length>0&&(e=$r(e,r)),gr(e,n.shape)},b:()=>{let e=t;const n=hr(r.shape,s);return n.length>0&&(e=$r(e,n)),gr($s(e),r.shape)}}}},ga={kernelName:"Sum",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,s=r.shape.slice(),{axis:i}=n;re(i,r.shape).forEach((t=>{s[t]=1}));const o=gr(t,s),a=br(o,wr(r.shape,"float32"));return{x:()=>a}}},ma={kernelName:"Tan",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ur(t,ps(Zo(n)))}}},ya={kernelName:Dt,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>br(Fr(kr(1),ps(n)),t)}}},ba={kernelName:Ft,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:s}=n;return{x:()=>{let e=Lr(r);if(1===r.rank)for(let n=0;n<s[0];++n)e=Rs(e,Mr(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)e=Rs(e,Mr(t,[n*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let o=0;o<s[2];++o)e=Rs(e,Mr(t,[n*r.shape[0],i*r.shape[1],o*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let o=0;o<s[2];++o)for(let a=0;a<s[3];++a)e=Rs(e,Mr(t,[n*r.shape[0],i*r.shape[1],o*r.shape[2],a*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},xa={kernelName:_t,gradFunc:(t,e,n)=>{const r=n,{perm:s}=r,i=rr(s);return{x:()=>ir(t,i)}}},wa={kernelName:Ot,gradFunc:(t,e,n)=>{const r=n,{axis:s}=r;return{value:()=>Dr(t,s)}}},va=Fn({gather_:function(t,e,n=0){const r=Tn(t,"x","gather"),s=Tn(e,"indices","gather","int32"),i={x:r,indices:s},o={axis:n};return Xe.runKernelFunc(((t,e)=>{const i=re(n,r.shape)[0],o=function(t,e,n){const r=t.shape[n],s=[];let i=1,o=1;for(let e=0;e<n;e++)s.push(t.shape[e]),i*=t.shape[e];for(let t=0;t<e.rank;t++)s.push(e.shape[t]);for(let e=n+1;e<t.rank;e++)s.push(t.shape[e]),o*=t.shape[e];return{batchSize:i,sliceSize:o,dimSize:r,outputShape:s}}(r,s,i),a=t.gather(r,gr(s,[s.size]),i);return e([r,s]),gr(a,o.outputShape)}),i,null,G,o)}}),ka=Fn({maximum_:function(t,e){let n=Tn(t,"a","maximum"),r=Tn(e,"b","maximum");[n,r]=Ve(n,r),"bool"===n.dtype&&(n=_n(n,"int32"),r=_n(r,"int32")),dr(n.shape,r.shape);const s={a:n,b:r};return Xe.runKernelFunc(((t,e)=>{const s=t.maximum(n,r);return e([n,r]),s}),s,null,Q)}}),$a=[li,ui,ci,hi,{kernelName:"AddN",saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,r)=>{n[r]=()=>t.clone()})),n}},di,pi,fi,gi,mi,yi,bi,wi,ki,$i,Si,Ei,Ci,Ni,Ri,Ai,Oi,Fi,Li,Pi,Ui,Gi,qi,ji,Xi,Yi,Ji,Zi,Qi,eo,to,ro,io,lo,uo,co,ho,po,fo,go,mo,bo,wo,wo,ko,Io,Eo,Co,No,Ao,To,Do,Fo,_o,Oo,Oo,Mo,Bo,Lo,zo,Po,Wo,Uo,Vo,Go,Ho,Ko,jo,Xo,Yo,Jo,Qo,ea,ra,sa,oa,la,la,ua,ua,ca,da,ha,pa,fa,ga,ma,ya,ba,xa,wa,{kernelName:Mt,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=ka(e,Lr(e)),r=va(t,n);let s=ss(e,kr(0,"int32"));const i=r.rank-s.rank;for(let t=0;t<i;++t)s=Tr(s,t+1);s=os(s,wr(r.shape,"bool"));const o=Lr(r);return cs(s,r,o)}(t,n)}}},{kernelName:Bt,gradFunc:t=>({x:()=>Lr(t)})}];for(const t of $a)Ht(t);_e.prototype.abs=function(){return this.throwIfDisposed(),Jn(this)};const Ia=Fn({acos_:function(t){const e=Tn(t,"x","acos"),n={x:e};return Xe.runKernelFunc(((t,n)=>{const r=t.acos(e);return n([e]),r}),n,null,h)}});_e.prototype.acos=function(){return this.throwIfDisposed(),Ia(this)};const Sa=Fn({acosh_:function(t){const e=Tn(t,"x","acosh"),n={x:e};return Xe.runKernelFunc(((t,n)=>{const r=t.acosh(e);return n([e]),r}),n,null,d)}});_e.prototype.acosh=function(){return this.throwIfDisposed(),Sa(this)};const Ea=Fn({mod_:function(t,e){let n=Tn(t,"a","mod"),r=Tn(e,"b","mod");[n,r]=Ve(n,r);const s={a:n,b:r};return Xe.runKernelFunc(((t,e)=>{const s=t.mod(n,r);return e([n,r]),s}),s,null,"Mod")}}),Ca=Fn({addStrict_:function(t,e){ys("strict variants of ops have been deprecated and will be removed in future");const n=Tn(t,"a","addStrict"),r=Tn(e,"b","addStrict");return Xt(n.shape,r.shape,"Error in addStrict: "),Rs(n,r)}}),Na=Fn({divStrict_:function(t,e){ys("strict variants of ops have been deprecated and will be removed in future");const n=Tn(t,"a","div"),r=Tn(e,"b","div");return Xt(n.shape,r.shape,"Error in divideStrict: "),ur(n,r)}}),Ra=Fn({maximumStrict_:function(t,e){ys("strict variants of ops have been deprecated and will be removed in future");const n=Tn(t,"a","maximumStrict"),r=Tn(e,"b","maximumStrict");return Xt(n.shape,r.shape,"Error in maximumStrict: "),ka(n,r)}}),Aa=Fn({minimumStrict_:function(t,e){ys("strict variants of ops have been deprecated and will be removed in future");const n=Tn(t,"a","minimumStrict"),r=Tn(e,"b","minimumStrict");return Xt(n.shape,r.shape,"Error in minimumStrict: "),As(n,r)}}),Ta=Fn({modStrict_:function(t,e){ys("strict variants of ops have been deprecated and will be removed in future");const n=Tn(t,"a","modStrict"),r=Tn(e,"b","modStrict");return Xt(n.shape,r.shape,"Error in modStrict: "),Ea(n,r)}}),Da=Fn({mulStrict_:function(t,e){ys("strict variants of ops have been deprecated and will be removed in future");const n=Tn(t,"a","mul"),r=Tn(e,"b","mul");return Xt(n.shape,r.shape,"Error in multiplyStrict: "),br(n,r)}}),Fa=Fn({powStrict_:function(t,e){return ys("strict variants of ops have been deprecated and will be removed in future"),Xt(t.shape,e.shape,"Error in powStrict: "),hs(t,e)}}),_a=Fn({squaredDifferenceStrict_:function(t,e){ys("strict variants of ops have been deprecated and will be removed in future");const n=Tn(t,"a","squaredDifferenceStrict"),r=Tn(e,"b","squaredDifferenceStrict");return Xt(n.shape,r.shape,"Error in squaredDifferenceStrict: "),Ds(n,r)}}),Oa=Fn({subStrict_:function(t,e){ys("strict variants of ops have been deprecated and will be removed in future");const n=Tn(t,"a","subStrict"),r=Tn(e,"b","subStrict");return Xt(n.shape,r.shape,"Error in subStrict: "),Fr(n,r)}});_e.prototype.addStrict=function(t){return this.throwIfDisposed(),Ca(this,t)},_e.prototype.add=function(t){return this.throwIfDisposed(),Rs(this,t)};const Ma=Fn({all_:function(t,e=null,n=!1){let r=Tn(t,"x","all","bool");const s={x:r},i={axis:e,keepDims:n};return Xe.runKernelFunc((t=>{const s=re(e,r.shape);let i=s;const o=nr(i,r.rank);null!=o&&(r=ir(r,o),i=sr(i.length,r.rank));const a=t.all(r,i);if(n){const t=tr(a.shape,s);return gr(a,t)}return a}),s,null,"All",i)}});_e.prototype.all=function(t,e){return this.throwIfDisposed(),Ma(this,t,e)};const Ba=Fn({any_:function(t,e=null,n=!1){let r=Tn(t,"x","any","bool");const s={x:r},i={axis:e,keepDims:n};return Xe.runKernelFunc((t=>{const s=re(e,r.shape);let i=s;const o=nr(i,r.rank);null!=o&&(r=ir(r,o),i=sr(i.length,r.rank));const a=t.any(r,i);if(n){const t=tr(a.shape,s);return gr(a,t)}return a}),s,null,"Any",i)}});_e.prototype.any=function(t,e){return this.throwIfDisposed(),Ba(this,t,e)},_e.prototype.argMax=function(t){return this.throwIfDisposed(),or(this,t)};const La=Fn({argMin_:function(t,e=0){let n=Tn(t,"x","argMin");const r={x:n},s={axis:e};return Xe.runKernelFunc(((t,r)=>{r([n]),null==e&&(e=0);let s=re(e,n.shape);const i=nr(s,n.rank);return null!=i&&(n=ir(n,i),s=sr(s.length,n.rank)),t.argMin(n,s[0])}),r,null,g,s)}});_e.prototype.argMin=function(t){return this.throwIfDisposed(),La(this,t)},_e.prototype.asScalar=function(){return this.throwIfDisposed(),jt(1===this.size,(()=>"The array must have only 1 element.")),gr(this,[])},_e.prototype.asType=function(t){return this.throwIfDisposed(),_n(this,t)},_e.prototype.as1D=function(){return this.throwIfDisposed(),gr(this,[this.size])},_e.prototype.as2D=function(t,e){return this.throwIfDisposed(),gr(this,[t,e])},_e.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),gr(this,[t,e,n])},_e.prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),gr(this,[t,e,n,r])},_e.prototype.as5D=function(t,e,n,r,s){return this.throwIfDisposed(),gr(this,[t,e,n,r,s])};const za=Fn({asin_:function(t){const e=Tn(t,"x","asin"),n={x:e};return Xe.runKernelFunc(((t,n)=>{const r=t.asin(e);return n([e]),r}),n,null,m)}});_e.prototype.asin=function(){return this.throwIfDisposed(),za(this)};const Pa=Fn({asinh_:function(t){const e=Tn(t,"x","asinh"),n={x:e};return Xe.runKernelFunc(((t,n)=>{const r=t.asinh(e);return n([e]),r}),n,null,y)}});_e.prototype.asinh=function(){return this.throwIfDisposed(),Pa(this)};const Wa=Fn({atan_:function(t){const e=Tn(t,"x","atan"),n={x:e};return Xe.runKernelFunc(((t,n)=>{const r=t.atan(e);return n([e]),r}),n,null,b)}});_e.prototype.atan=function(){return this.throwIfDisposed(),Wa(this)};const Ua=Fn({atan2_:function(t,e){let n=Tn(t,"a","atan2"),r=Tn(e,"b","atan2");[n,r]=Ve(n,r);const s={a:n,b:r};return Xe.runKernelFunc(((t,e)=>{const s=t.atan2(n,r);return e([n,r]),s}),s,null,w)}});_e.prototype.atan2=function(t){return this.throwIfDisposed(),Ua(this,t)};const Va=Fn({atanh_:function(t){const e=Tn(t,"x","atanh"),n={x:e};return Xe.runKernelFunc(((t,n)=>{const r=t.atanh(e);return n([e]),r}),n,null,x)}});_e.prototype.atanh=function(){return this.throwIfDisposed(),Va(this)};const Ga=Fn({avgPool_:function(t,e,n,r,s){const i=Tn(t,"x","avgPool","float32");jt(qs(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let o=i,a=!1;3===i.rank&&(a=!0,o=gr(i,[1,i.shape[0],i.shape[1],i.shape[2]])),jt(4===o.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`)),null!=s&&jt(te(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:o},u={filterSize:e,strides:n,pad:r,dimRoundingMode:s};let c=Xe.runKernelFunc(((t,i)=>{const a=Bs(o.shape,e,n,1,r,s);return i([o]),1===a.filterWidth&&1===a.filterHeight&&Qt(a.inShape,a.outShape)?o.clone():t.avgPool(o,a)}),l,null,v,u);return c=_n(c,i.dtype),a?gr(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});function Ha(t){return null==t?null:0===t.rank?gr(t,[t.size]):1===t.rank?t:2===t.rank?gr(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?gr(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t}_e.prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),Ga(this,t,e,n,r)},_e.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),aa(this,t,e)};const Ka=Fn({batchNorm_:function(t,e,n,r,s,i){null==i&&(i=.001);const o=Tn(t,"x","batchNorm"),a=Tn(e,"mean","batchNorm"),l=Tn(n,"variance","batchNorm");let u,c;null!=s&&(u=Tn(s,"scale","batchNorm")),null!=r&&(c=Tn(r,"offset","batchNorm")),jt(a.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),jt(null==c||a.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),jt(null==u||a.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(t){let e;return e=0===t.rank||1===t.rank?gr(t,[1,1,1,t.size]):2===t.rank?gr(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?gr(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(o),d={x:h,scale:u,offset:c,mean:a,variance:l},p={varianceEpsilon:i},f=Xe.runKernelFunc(((t,e)=>(e([h,a,l,u]),t.batchNorm(h,Ha(a),Ha(l),Ha(c),Ha(u),i))),d,null,V,p);return gr(f,o.shape)}});_e.prototype.batchNorm=function(t,e,n,r,s){return this.throwIfDisposed(),Ka(this,t,e,n,r,s)},_e.prototype.broadcastTo=function(t){return this.throwIfDisposed(),us(this,t)},_e.prototype.cast=function(t){return this.throwIfDisposed(),_n(this,t)};const qa=Fn({ceil_:function(t){const e=Tn(t,"x","ceil"),n={x:e};return Xe.runKernelFunc((t=>t.ceil(e)),n,null,E)}});_e.prototype.ceil=function(){return this.throwIfDisposed(),qa(this)};const ja=Fn({clipByValue_:function(t,e,n){const r=Tn(t,"x","clipByValue");jt(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`));const s={x:r},i={clipValueMin:e,clipValueMax:n};return Xe.runKernelFunc(((t,s)=>{const i=t.clip(r,e,n);return s([r]),i}),s,null,C,i)}});_e.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),ja(this,t,e)},_e.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof _e&&(t=[t]),Ar([this,...t],e)};const Xa=Fn({conv1d_:function(t,e,n,r,s="NWC",i=1,o){const a=Tn(t,"x","conv1d"),l=Tn(e,"filter","conv1d");let u=a,c=!1;2===a.rank&&(c=!0,u=gr(a,[1,a.shape[0],a.shape[1]])),jt(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),jt(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=o&&jt(te(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`)),jt(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),jt(qs(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),jt("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=gr(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=gr(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=_i(d,h,[1,n],r,"NHWC",[1,i],o);return gr(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});_e.prototype.conv1d=function(t,e,n,r,s,i){return this.throwIfDisposed(),Xa(this,t,e,n,r,s,i)};const Ya=Fn({conv2dTranspose_:function(t,e,n,r,s,i){const o=Tn(t,"x","conv2dTranspose"),a=Tn(e,"filter","conv2dTranspose");return Di(n,o,a,r,s,"NHWC",i)}});_e.prototype.conv2dTranspose=function(t,e,n,r,s){return this.throwIfDisposed(),Ya(this,t,e,n,r,s)},_e.prototype.conv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),_i(this,t,e,n,r,s,i)},_e.prototype.cos=function(){return this.throwIfDisposed(),Zo(this)},_e.prototype.cosh=function(){return this.throwIfDisposed(),ta(this)},_e.prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),Vi(this,t,e,n)};const Ja=Fn({depthToSpace_:function(t,e,n="NHWC"){const r=Tn(t,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];jt(s*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${e}  for depthToSpace with input shape\n    ${r.shape}`)),jt(i*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${e} for depthToSpace with input shape\n        ${r.shape}`)),jt(o%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${o} for depthToSpace with input shape ${r.shape}`));const a={x:r},l={blockSize:e,dataFormat:n};return Xe.runKernelFunc((t=>t.depthToSpace(r,e,n)),a,null,"DepthToSpace",l)}});_e.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Ja(this,t,e)};const Za=Fn({depthwiseConv2d_:function(t,e,n,r,s="NHWC",i=[1,1],o){const a=Tn(t,"x","depthwiseConv2d"),l=Tn(e,"filter","depthwiseConv2d");let u=a,c=!1;3===a.rank&&(c=!0,u=gr(a,[1,a.shape[0],a.shape[1],a.shape[2]])),jt(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),jt(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),jt(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=o&&jt(te(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`));const h={x:u,filter:l},d={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:o},p=Xe.runKernelFunc(((t,e)=>{null==i&&(i=[1,1]),jt(qs(n,i),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const s=zs(u.shape,l.shape,n,i,r,o,!0),a=t.depthwiseConv2D(u,l,s);return e([u,l]),a}),h,null,_,d);return c?gr(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});_e.prototype.depthwiseConv2D=function(t,e,n,r,s,i){return ys("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),Za(this,t,e,n,r,s,i)},_e.prototype.depthwiseConv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),Za(this,t,e,n,r,s,i)};const Qa=Fn({dilation2d_:function(t,e,n,r,s=[1,1],i="NHWC"){const o=Tn(t,"x","dilation2d"),a=Tn(e,"filter","dilation2d");jt(3===o.rank||4===o.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`)),jt(3===a.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`)),jt("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let l=o,u=!1;3===o.rank&&(l=gr(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=!0);const c={x:l,filter:a},h={strides:n,pad:r,dilations:s},d=Xe.runKernel(O,c,h);return u?gr(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});_e.prototype.dilation2d=function(t,e,n,r,s){return this.throwIfDisposed(),Qa(this,t,e,n,r,s)};const tl=Fn({divNoNan_:function(t,e){let n=Tn(t,"a","div"),r=Tn(e,"b","div");[n,r]=Ve(n,r);const s=ur(n,r),i=Lr(s),o=pr(r,i);return cs(o,i,s)}});_e.prototype.divNoNan=function(t){return this.throwIfDisposed(),tl(this,t)},_e.prototype.divStrict=function(t){return this.throwIfDisposed(),Na(this,t)},_e.prototype.div=function(t){return this.throwIfDisposed(),ur(this,t)};const el=Fn({dot_:function(t,e){const n=Tn(t,"t1","dot"),r=Tn(e,"t2","dot");jt(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];if(jt(s===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${i}.`)),1===n.rank&&1===r.rank){const t=gr(n,[1,-1]),e=gr(r,[-1,1]),s=ks(t,e);return gr(s,[])}if(1===n.rank&&2===r.rank){const t=gr(n,[1,-1]),e=gr(r,[r.shape[0],r.shape[1]]),s=ks(t,e);return gr(s,[s.size])}if(2===n.rank&&1===r.rank){const t=gr(r,[-1,1]),e=ks(n,t);return gr(e,[e.size])}{const t=gr(r,[r.shape[0],r.shape[1]]);return ks(n,t)}}});_e.prototype.dot=function(t){return this.throwIfDisposed(),el(this,t)},_e.prototype.elu=function(){return this.throwIfDisposed(),Xs(this)};const nl=Fn({equalStrict_:function(t,e){ys("strict variants of ops have been deprecated and will be removed in future");const n=Tn(t,"a","equalStrict"),r=Tn(e,"b","equalStrict");return Xt(n.shape,r.shape,"Error in equalStrict: "),pr(n,r)}}),rl=Fn({greaterEqualStrict_:function(t,e){ys("strict variants of ops have been deprecated and will be removed in future");const n=Tn(t,"a","greaterEqualStrict"),r=Tn(e,"b","greaterEqualStrict");return Xt(n.shape,r.shape,"Error in greaterEqualStrict: "),ss(n,r)}}),sl=Fn({greaterStrict_:function(t,e){ys("strict variants of ops have been deprecated and will be removed in future");const n=Tn(t,"a","greaterStrict"),r=Tn(e,"b","greaterStrict");return Xt(n.shape,r.shape,"Error in greaterStrict: "),vs(n,r)}}),il=Fn({lessEqualStrict_:function(t,e){ys("strict variants of ops have been deprecated and will be removed in future");const n=Tn(t,"a","lessEqualStrict"),r=Tn(e,"b","lessEqualStrict");return Xt(n.shape,r.shape,"Error in lessEqualStrict: "),is(n,r)}}),ol=Fn({lessStrict_:function(t,e){ys("strict variants of ops have been deprecated and will be removed in future");const n=Tn(t,"a","lessStrict"),r=Tn(e,"b","lessStrict");return Xt(n.shape,r.shape,"Error in lessStrict: "),vo(n,r)}}),al=Fn({notEqualStrict_:function(t,e){ys("strict variants of ops have been deprecated and will be removed in future");const n=Tn(t,"a","notEqualStrict"),r=Tn(e,"b","notEqualStrict");return Xt(n.shape,r.shape,"Error in notEqualStrict: "),Es(n,r)}});_e.prototype.equalStrict=function(t){return this.throwIfDisposed(),nl(this,t)},_e.prototype.equal=function(t){return this.throwIfDisposed(),pr(this,t)};const ll=Fn({erf_:function(t){let e=Tn(t,"x","erf");jt("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=_n(e,"float32"));const n={x:e};return Xe.runKernelFunc(((t,n)=>{const r=t.erf(e);return n([e]),r}),n,null,"Erf")}});_e.prototype.erf=function(){return this.throwIfDisposed(),ll(this)},_e.prototype.exp=function(){return this.throwIfDisposed(),Fs(this)},_e.prototype.expandDims=function(t){return this.throwIfDisposed(),Tr(this,t)};const ul=Fn({expm1_:function(t){const e=Tn(t,"x","expm1"),n={x:e};return Xe.runKernelFunc(((t,n)=>{const r=t.expm1(e);return n([e]),r}),n,null,z)}});_e.prototype.expm1=function(){return this.throwIfDisposed(),ul(this)},_e.prototype.fft=function(){return this.throwIfDisposed(),zr(this)},_e.prototype.flatten=function(){return this.throwIfDisposed(),gr(this,[this.size])},_e.prototype.floor=function(){return this.throwIfDisposed(),Ro(this)},_e.prototype.floorDiv=function(t){return this.throwIfDisposed(),lr(this,t)},_e.prototype.gather=function(t,e){return this.throwIfDisposed(),va(this,t,e)},_e.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),rl(this,t)},_e.prototype.greaterEqual=function(t){return this.throwIfDisposed(),ss(this,t)},_e.prototype.greaterStrict=function(t){return this.throwIfDisposed(),sl(this,t)},_e.prototype.greater=function(t){return this.throwIfDisposed(),vs(this,t)},_e.prototype.ifft=function(){return this.throwIfDisposed(),Wr(this)},_e.prototype.irfft=function(){return this.throwIfDisposed(),Vr(this)};const cl=Fn({isFinite_:function(t){const e=Tn(t,"x","isFinite"),n={x:e};return Xe.runKernelFunc((t=>t.isFinite(e)),n,null,q)}});_e.prototype.isFinite=function(){return this.throwIfDisposed(),cl(this)};const hl=Fn({isInf_:function(t){const e=Tn(t,"x","isInf"),n={x:e};return Xe.runKernelFunc((t=>t.isInf(e)),n,null,j)}});_e.prototype.isInf=function(){return this.throwIfDisposed(),hl(this)};const dl=Fn({isNaN_:function(t){const e=Tn(t,"x","isNaN"),n={x:e};return Xe.runKernelFunc((t=>t.isNaN(e)),n,null,X)}});_e.prototype.isNaN=function(){return this.throwIfDisposed(),dl(this)};const pl=Fn({leakyRelu_:function(t,e=.2){const n=Tn(t,"x","leakyRelu");return ka(br(kr(e),n),n)}});_e.prototype.leakyRelu=function(t){return this.throwIfDisposed(),pl(this,t)},_e.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),il(this,t)},_e.prototype.lessEqual=function(t){return this.throwIfDisposed(),is(this,t)},_e.prototype.lessStrict=function(t){return this.throwIfDisposed(),ol(this,t)},_e.prototype.less=function(t){return this.throwIfDisposed(),vo(this,t)};const fl=Fn({localResponseNormalization_:function(t,e=5,n=1,r=1,s=.5){const i=Tn(t,"x","localResponseNormalization");jt(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),jt(te(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let o=i,a=!1;3===i.rank&&(a=!0,o=gr(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:o},u={depthRadius:e,bias:n,alpha:r,beta:s},c=Xe.runKernelFunc(((t,i)=>{const a=t.localResponseNormalization4D(o,e,n,r,s);return i([o,a]),a}),l,null,"LRN",u);return a?gr(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});_e.prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),fl(this,t,e,n,r)};const gl=Fn({softplus_:function(t){const e=Tn(t,"x","softplus"),n={x:e};return Xe.runKernelFunc(((t,n)=>{const r=t.softplus(e);return n([e]),r}),n,null,St)}}),ml=Fn({logSigmoid_:function(t){const e=Tn(t,"x","logSigmoid");return yr((t=>({value:$s(gl($s(t))),gradFunc:e=>br(e,ia($s(t)))})))(e)}});_e.prototype.logSigmoid=function(){return this.throwIfDisposed(),ml(this)};const yl=Fn({logSoftmax_:function(t,e=-1){const n=Tn(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const r={logits:n},s={axis:e};return Xe.runKernelFunc(((n,r)=>{const s=mr(t,e,!0),i=Fr(t,s),o=Fr(_n(i,"float32"),Ts($r(Fs(i),e,!0)));return r([o]),o}),r,null,J,s)}});_e.prototype.logSoftmax=function(t){return this.throwIfDisposed(),yl(this,t)},_e.prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Os(this,t,e)},_e.prototype.log=function(){return this.throwIfDisposed(),Ts(this)},_e.prototype.log1p=function(){return this.throwIfDisposed(),_s(this)},_e.prototype.logicalAnd=function(t){return this.throwIfDisposed(),os(this,t)},_e.prototype.logicalNot=function(){return this.throwIfDisposed(),qo(this)};const bl=Fn({logicalOr_:function(t,e){const n=Tn(t,"a","logicalOr","bool"),r=Tn(e,"b","logicalOr","bool");dr(n.shape,r.shape);const s={a:n,b:r};return Xe.runKernelFunc((t=>t.logicalOr(n,r)),s,null,"LogicalOr")}});_e.prototype.logicalOr=function(t){return this.throwIfDisposed(),bl(this,t)};const xl=Fn({logicalXor_:function(t,e){const n=Tn(t,"a","logicalXor","bool"),r=Tn(e,"b","logicalXor","bool");return dr(n.shape,r.shape),os(bl(t,e),qo(os(t,e)))}});_e.prototype.logicalXor=function(t){return this.throwIfDisposed(),xl(this,t)},_e.prototype.matMul=function(t,e,n){return this.throwIfDisposed(),ks(this,t,e,n)};const wl=Fn({maxPool_:function(t,e,n,r,s){const i=Tn(t,"x","maxPool");let o=i,a=!1;3===i.rank&&(a=!0,o=gr(i,[1,i.shape[0],i.shape[1],i.shape[2]])),jt(4===o.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`)),jt(qs(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=s&&jt(te(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:o},u={filterSize:e,strides:n,pad:r,dimRoundingMode:s},c=Xe.runKernelFunc(((t,i)=>{const a=Bs(o.shape,e,n,1,r,s);let l;return l=1===a.filterWidth&&1===a.filterHeight&&Qt(a.inShape,a.outShape)?o.clone():t.maxPool(o,a),i([o,l]),l}),l,null,tt,u);return a?gr(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});_e.prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),wl(this,t,e,n,r)},_e.prototype.max=function(t,e){return this.throwIfDisposed(),mr(this,t,e)},_e.prototype.maximumStrict=function(t){return this.throwIfDisposed(),Ra(this,t)},_e.prototype.maximum=function(t){return this.throwIfDisposed(),ka(this,t)},_e.prototype.mean=function(t,e){return this.throwIfDisposed(),Ir(this,t,e)},_e.prototype.min=function(t,e){return this.throwIfDisposed(),Sr(this,t,e)},_e.prototype.minimumStrict=function(t){return this.throwIfDisposed(),Aa(this,t)},_e.prototype.minimum=function(t){return this.throwIfDisposed(),As(this,t)},_e.prototype.modStrict=function(t){return this.throwIfDisposed(),Ta(this,t)},_e.prototype.mod=function(t){return this.throwIfDisposed(),Ea(this,t)},_e.prototype.mulStrict=function(t){return this.throwIfDisposed(),Da(this,t)},_e.prototype.mul=function(t){return this.throwIfDisposed(),br(this,t)},_e.prototype.neg=function(){return this.throwIfDisposed(),$s(this)},_e.prototype.norm=function(t,e,n){return this.throwIfDisposed(),gs(this,t,e,n)},_e.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),al(this,t)},_e.prototype.notEqual=function(t){return this.throwIfDisposed(),Es(this,t)};const vl=Fn({oneHot_:function(t,e,n=1,r=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const s=Tn(t,"indices","oneHot","int32"),i=[...s.shape,e],o={indices:s},a={depth:e,onValue:n,offValue:r};return Xe.runKernelFunc(((t,o)=>(o([s]),gr(t.oneHot(gr(s,[s.size]),e,n,r),i))),o,null,at,a)}});_e.prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),vl(this,t,e,n)};const kl=Fn({onesLike_:function(t){const e=Tn(t,"x","onesLike"),n={x:e};return Xe.runKernelFunc(((t,n)=>{if("complex64"===e.dtype){const t=kl(Er(e)),n=Lr(fr(e));return ar(t,n)}return t.onesLike(e)}),n,null,ot)}});_e.prototype.onesLike=function(){return this.throwIfDisposed(),kl(this)},_e.prototype.pad=function(t,e){return this.throwIfDisposed(),na(this,t,e)};const $l=Fn({pool_:function(t,e,n,r,s,i){null==s&&(s=[1,1]),null==i&&(i=1),0===r&&(r="valid");const o=Tn(t,"x","maxPool");let a=o,l=!1;3===o.rank&&(l=!0,a=gr(o,[1,o.shape[0],o.shape[1],o.shape[2]])),jt(qs(i,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${s}'`));const u=Bs(a.shape,e,i,s,r),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===r?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),r=n.map((t=>Math.floor(t/2))),s=n.map(((t,e)=>t-r[e]));return n.map(((t,e)=>[r[e],s[e]]))}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[p,f]=function(t,e,n){const r=n.map((t=>t[0])),s=n.map((t=>t[1])),i=t.concat(r,s),o=e.map(((t,e)=>(t-i[e]%t)%t)),a=s.map(((t,e)=>t+o[e]));return[e.map(((t,e)=>[r[e],a[e]])),e.map(((t,e)=>[0,o[e]]))]}([u.inHeight,u.inWidth],c,h),g=d?r:"valid",m=d?a:Ii(a,c,p),y=("avg"===n?()=>Ga(m,e,i,g):()=>wl(m,e,i,g))(),b=d?y:aa(y,c,f);return l?gr(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});_e.prototype.pool=function(t,e,n,r,s){return this.throwIfDisposed(),$l(this,t,e,n,r,s)},_e.prototype.powStrict=function(t){return this.throwIfDisposed(),Fa(this,t)},_e.prototype.pow=function(t){return this.throwIfDisposed(),hs(this,t)},_e.prototype.prelu=function(t){return this.throwIfDisposed(),Ys(this,t)};const Il=Fn({prod_:function(t,e=null,n=!1){let r=Tn(t,"x","prod");const s={x:r},i={axis:e,keepDims:n};return Xe.runKernelFunc((t=>{"bool"===r.dtype&&(r=_n(r,"int32"));const s=re(e,r.shape),i=nr(s,r.rank);let o=s,a=r;null!=i&&(a=ir(r,i),o=sr(o.length,r.rank));let l=t.prod(a,o);if(n){const t=tr(l.shape,s);l=gr(l,t)}return l}),s,null,"Prod",i)}});_e.prototype.prod=function(t,e){return this.throwIfDisposed(),Il(this,t,e)};const Sl=Fn({reciprocal_:function(t){const e=Tn(t,"x","reciprocal"),n={x:e};return Xe.runKernelFunc(((t,n)=>{const r=t.reciprocal(e);return n([e]),r}),n,null,ct)}});_e.prototype.reciprocal=function(){return this.throwIfDisposed(),Sl(this)},_e.prototype.relu=function(){return this.throwIfDisposed(),Ns(this)},_e.prototype.relu6=function(){return this.throwIfDisposed(),Js(this)},_e.prototype.reshapeAs=function(t){return this.throwIfDisposed(),gr(this,t.shape)},_e.prototype.reshape=function(t){return this.throwIfDisposed(),gr(this,t)},_e.prototype.resizeBilinear=function(t,e){return this.throwIfDisposed(),ns(this,t,e)},_e.prototype.resizeNearestNeighbor=function(t,e){return this.throwIfDisposed(),rs(this,t,e)},_e.prototype.reverse=function(t){return this.throwIfDisposed(),Ur(this,t)},_e.prototype.rfft=function(){return this.throwIfDisposed(),Pr(this)};const El=Fn({round_:function(t){const e=Tn(t,"x","round"),n={x:e};return Xe.runKernelFunc((t=>t.round(e)),n,null,yt)}});_e.prototype.round=function(){return this.throwIfDisposed(),El(this)},_e.prototype.rsqrt=function(){return this.throwIfDisposed(),no(this)};const Cl=Fn({selu_:function(t){const e=Tn(t,"x","selu"),n={x:e};return Xe.runKernelFunc(((t,n)=>{const r=t.selu(e);return n([e]),r}),n,null,wt)}});_e.prototype.selu=function(){return this.throwIfDisposed(),Cl(this)};const Nl=Fn({separableConv2d_:function(t,e,n,r,s,i=[1,1],o="NHWC"){const a=Tn(t,"x","separableConv2d"),l=Tn(e,"depthwiseFilter","separableConv2d"),u=Tn(n,"pointwiseFilter","separableConv2d");let c=a,h=!1;if(3===a.rank&&(h=!0,c=gr(a,[1,a.shape[0],a.shape[1],a.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");jt(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),jt(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),jt(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),jt(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),jt(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];jt(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=Za(c,l,r,s,o,i),g=_i(f,u,1,"valid",o);return h?gr(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});_e.prototype.separableConv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),Nl(this,t,e,n,r,s,i)},_e.prototype.sigmoid=function(){return this.throwIfDisposed(),ia(this)};const Rl=Fn({sign_:function(t){const e=Tn(t,"x","sign"),n={x:e};return Xe.runKernelFunc((t=>t.sign(e)),n,null,$t)}});_e.prototype.sign=function(){return this.throwIfDisposed(),Rl(this)},_e.prototype.sin=function(){return this.throwIfDisposed(),zi(this)},_e.prototype.sinh=function(){return this.throwIfDisposed(),Wi(this)},_e.prototype.slice=function(t,e){return this.throwIfDisposed(),Mr(this,t,e)},_e.prototype.softmax=function(t){return this.throwIfDisposed(),Cr(this,t)},_e.prototype.softplus=function(){return this.throwIfDisposed(),gl(this)},_e.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Ii(this,t,e)},_e.prototype.split=function(t,e){return this.throwIfDisposed(),Br(this,t,e)},_e.prototype.sqrt=function(){return this.throwIfDisposed(),ds(this)},_e.prototype.square=function(){return this.throwIfDisposed(),ps(this)},_e.prototype.squaredDifference=function(t){return this.throwIfDisposed(),Ds(this,t)},_e.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),_a(this,t)},_e.prototype.squeeze=function(t){return this.throwIfDisposed(),ms(this,t)},_e.prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof _e?[this,t]:[this,...t];return Dr(n,e)},_e.prototype.step=function(t){return this.throwIfDisposed(),Zs(this,t)};const Al=Fn({stridedSlice_:function(t,e,n,r,s=0,i=0,o=0,a=0,l=0){let u=Tn(t,"x","stridedSlice");const c={x:u},h={begin:e,end:n,strides:r,beginMask:s,endMask:i,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:l};return Xe.runKernelFunc((t=>{null==r&&(r=new Array(e.length));const c=Vn(o);if(c.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==o&&0!==a)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==o&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const h=u.rank-e.length,d=Vn(a),p=u.shape.slice();d.forEach((t=>{e[t]=0,n[t]=1,p.splice(t,0,1)})),u=gr(u,p);const{begin:f,end:g,strides:m}=function(t,e,n,r,s,i,o,a,l){const u=t.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(e.length&&n>0){const l=e[0],u=n+1;c=function(t,e,n,r,s){const i=[...s],o=Kn(n,e);for(let s=0;s<i.length;s++)if(o.indexOf(s)>-1)i[s]=0;else{const o=Hn(e,n,s);let a=r[o];t&1<<o&&(a=0),i[s]=a}return i}(o,l,u,r,t),h=function(t,e,n,r,s){const i=[...s],o=Kn(n,e);for(let s=0;s<i.length;s++)if(o.indexOf(s)>-1)i[s]=Number.MAX_SAFE_INTEGER;else{const o=Hn(e,n,s);let a=r[o];t&1<<o&&(a=Number.MAX_SAFE_INTEGER),i[s]=a}for(let t=0;t<i.length;t++){const e=s[t];i[t]<0&&(i[t]+=e),i[t]=qt(0,i[t],s[t])}return i}(a,l,u,s,t),d=function(t,e,n,r){const s=[...t];for(let t=s.length;t<r.length;t++)s.push(1);for(let t=0;t<n;t++)0===t?s[e]=1:(s.splice(e,0,1),s.pop());return s}(i,l,u,t)}else for(let e=0;e<u;e++)c[e]=jn(o,r,i,t,e,l),h[e]=Xn(a,s,i,t,e,l),d[e]=qn(i,e,l);return{begin:c,end:h,strides:d}}(u.shape,c,h,e,n,r,s,i,o);e=f,n=g,r=m;const y=Vn(l);y.forEach((t=>{n[t]=e[t]+1,r[t]=1}));const b=Gn(e,n,r),x=b.filter(((t,e)=>-1===y.indexOf(e)));if(r.every((t=>1===t)))return gr(Mr(u,e,b),x);const w=t.stridedSlice(u,e,n,r);return gr(w,x)}),c,null,"StridedSlice",h)}});_e.prototype.stridedSlice=function(t,e,n,r,s,i,o,a){return this.throwIfDisposed(),Al(this,t,e,n,r,s,i,o,a)},_e.prototype.subStrict=function(t){return this.throwIfDisposed(),Oa(this,t)},_e.prototype.sub=function(t){return this.throwIfDisposed(),Fr(this,t)},_e.prototype.sum=function(t,e){return this.throwIfDisposed(),$r(this,t,e)};const Tl=Fn({tan_:function(t){const e=Tn(t,"x","tan"),n={x:e};return Xe.runKernelFunc(((t,n)=>{const r=t.tan(e);return n([e]),r}),n,null,"Tan")}});_e.prototype.tan=function(){return this.throwIfDisposed(),Tl(this)};const Dl=Fn({tanh_:function(t){const e=Tn(t,"x","tanh"),n={x:e};return Xe.runKernelFunc(((t,n)=>{const r=t.tanh(e);return n([r]),r}),n,null,Dt)}});_e.prototype.tanh=function(){return this.throwIfDisposed(),Dl(this)},_e.prototype.tile=function(t){return this.throwIfDisposed(),xs(this,t)},_e.prototype.toBool=function(){return this.throwIfDisposed(),_n(this,"bool")},_e.prototype.toFloat=function(){return this.throwIfDisposed(),_n(this,"float32")},_e.prototype.toInt=function(){return this.throwIfDisposed(),_n(this,"int32")};const Fl=Fn({topk_:function(t,e=1,n=!0){const r=Tn(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const i={x:r},o={k:e,sorted:n},[a,l]=Xe.runKernelFunc((t=>t.topk(r,e,n)),i,null,"TopK",o);return{values:a,indices:l}}});_e.prototype.topk=function(t,e){return this.throwIfDisposed(),Fl(this,t,e)},_e.prototype.transpose=function(t){return this.throwIfDisposed(),ir(this,t)},_e.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),so(this,t,e)},_e.prototype.unstack=function(t){return this.throwIfDisposed(),ls(this,t)},_e.prototype.where=function(t,e){return this.throwIfDisposed(),cs(t,this,e)},_e.prototype.zerosLike=function(){return this.throwIfDisposed(),Lr(this)};class _l{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(e instanceof Promise)throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}(this.global.location.search);"tfjsflags"in t&&t.tfjsflags.split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}function Ol(){return Bl}let Ml,Bl=null;function Ll(){if(null==Ml){let t;if("undefined"!=typeof window)t=window;else if(void 0!==n.g)t=n.g;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}Ml=t}return Ml}function zl(t,e){const n=function(){const t=Ll();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}const Pl="Acos",Wl="Acosh",Ul="Add",Vl="ArgMax",Gl="ArgMin",Hl="Asin",Kl="Asinh",ql="Atan",jl="Atanh",Xl="Atan2",Yl="AvgPool",Jl="AvgPool3D",Zl="BatchMatMul",Ql="BatchToSpaceND",tu="BroadcastTo",eu="Cast",nu="Ceil",ru="ClipByValue",su="Concat",iu="Conv2D",ou="Conv2DBackpropInput",au="Conv3D",lu="Cosh",uu="Cumsum",cu="DepthwiseConv2dNative",hu="Dilation2D",du="Div",pu="Expm1",fu="FlipLeftRight",gu="Floor",mu="FloorDiv",yu="FusedBatchNorm",bu="GatherV2",xu="GreaterEqual",wu="Identity",vu="IsFinite",ku="IsInf",$u="IsNan",Iu="Log1p",Su="LogSoftmax",Eu="Max",Cu="Maximum",Nu="MaxPool",Ru="MaxPool3D",Au="Minimum",Tu="Multiply",Du="Negate",Fu="NonMaxSuppressionV3",_u="NonMaxSuppressionV4",Ou="NonMaxSuppressionV5",Mu="OnesLike",Bu="OneHot",Lu="PadV2",zu="Prelu",Pu="Reciprocal",Wu="Relu",Uu="Reshape",Vu="ResizeNearestNeighbor",Gu="ResizeBilinear",Hu="Relu6",Ku="Reverse",qu="Round",ju="Rsqrt",Xu="SelectV2",Yu="Selu",Ju="Slice",Zu="Sinh",Qu="Sign",tc="Sigmoid",ec="Softplus",nc="Sqrt",rc="SpaceToBatchND",sc="SplitV",ic="Softmax",oc="SquaredDifference",ac="Square",lc="Tanh",uc="Tile",cc="Transpose",hc="Unpack",dc="UnsortedSegmentSum",pc="ZerosLike",fc="Step",gc="RotateWithOffset",mc="_FusedMatMul",yc="FusedConv2D",bc="FusedDepthwiseConv2D",xc=zl("kernelRegistry",(()=>new Map)),wc=zl("gradRegistry",(()=>new Map));function vc(t){return wc.get(t)}function kc(t){const e=xc.entries(),n=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[i,o]=s,[a]=i.split("_");a===t&&n.push(o)}return n}function $c(t){const{kernelName:e,backendName:n}=t,r=Sc(e,n);xc.has(r)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),xc.set(r,t)}function Ic(t){const{kernelName:e}=t;wc.has(e)&&Ol().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),wc.set(e,t)}function Sc(t,e){return`${e}_${t}`}function Ec(t){let e=t.length,n=0,r=0;for(;e>0;)r=Math.random()*e|0,e--,n=t[e],t[e]=t[r],t[r]=n}function Cc(t,e,n){return Math.max(t,Math.min(e,n))}function Nc(t){return t%2==0?t:t+1}function Rc(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function Ac(t,e,n=""){Rc(_c(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function Tc(t){Rc(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function Dc(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||Vc(t)&&!n)for(let r=0;r<t.length;++r)Dc(t[r],e,n);else e.push(t);return e}function Fc(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function _c(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function Oc(t){return t%1==0}function Mc(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function Bc(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function Lc(t,e=(t=>0),n){return new Promise(((r,s)=>{let i=0;const o=()=>{if(t())return void r();i++;const a=e(i);null!=n&&i>=n?s():setTimeout(o,a)};o()}))}function zc(t,e){const n=e.length;return Rc((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`)),Rc(t.every((t=>Oc(t))),(()=>`All values in axis param must be integers but got axis ${t}`)),t.map((t=>t<0?n+t:t))}function Pc(t,e){const n=[],r=[],s=null!=e&&Array.isArray(e)&&0===e.length,i=null==e||s?null:zc(e,t).sort();let o=0;for(let e=0;e<t.length;++e){if(null!=i){if(i[o]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==i[o]||i[o]>e)&&1===t[e]&&(n.push(t[e]),r.push(e)),i[o]<=e&&o++}1!==t[e]&&(n.push(t[e]),r.push(e))}return{newShape:n,keptDims:r}}function Wc(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function Uc(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function Vc(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function Gc(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function Hc(t){return"string"==typeof t||t instanceof String}function Kc(t){return"number"==typeof t}function qc(t){return Array.isArray(t)?qc(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":Kc(t)?"float32":Hc(t)?"string":"boolean"==typeof t?"bool":"float32"}function jc(t){return!!(t&&t.constructor&&t.call&&t.apply)}function Xc(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function Yc(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function Jc(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=Dc(t)),Ol().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function Zc(t,e,n){const r=new Array;if(1===e.length){const s=e[0];for(let e=0;e<s;e++)r[e]=n[t+e]}else{const s=e[0],i=e.slice(1),o=i.reduce(((t,e)=>t*e));for(let e=0;e<s;e++)r[e]=Zc(t+e*o,i,n)}return r}function Qc(t,e){if(0===t.length)return e[0];const n=t.reduce(((t,e)=>t*e));if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}.`);return Zc(0,t,e)}function th(t,e){const n=eh(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function eh(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function nh(){return Ol().platform.now()}function rh(t){t.forEach((e=>{Rc(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function sh(t,e="utf-8"){return e=e||"utf-8",Ol().platform.decode(t,e)}function ih(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let e=0;e<t.length-1;++e)r+=n[e]*t[e];return r}function oh(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let e=0;e<r.length-1;++e)r[e]=Math.floor(t/n[e]),t-=r[e]*n[e];return r[r.length-1]=t,r}class ah{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new uh)}profileKernel(t,e,n){let r;const s=this.backendTimer.time((()=>{r=n()}));for(let e=0;e<r.length;e++){const n=r[e];n.data().then((e=>{lh(e,n.dtype,t)}))}return{kernelName:t,outputs:r,inputs:e,timeMs:s.then((t=>t.kernelMs)),extraInfo:s.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:s,extraInfo:i}=t;n.forEach((t=>{Promise.all([t.data(),r,i]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],s,n[2])}))}))}}function lh(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const r=t[e];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class uh{logKernelProfile(t,e,n,r,s,i){const o="number"==typeof r?Bc(`${r}ms`,9):r.error,a=Bc(t,25),l=e.rank,u=e.size,c=Bc(e.shape.toString(),14);let h="";for(const t in s){const n=s[t];if(null!=n){const r=n.shape||e.shape,s=r.length;h+=`${t}: ${s}D ${s>0?r:""} `}}console.log(`%c${a}\t%c${o}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function ch(t,e,n,r){const s=Yc(e),i=function(t,e,n,r){const s=Fc(e),i=r[r.length-1],o=new Array(i).fill(0),a=e.length,l="complex64"===n?fh(t):t;if(a>1)for(let t=0;t<s/i;t++){const e=t*i;for(let t=0;t<i;t++)o[t]=Math.max(o[t],hh(l[e+t],0,n).length)}return o}(t,e,n,s),o=e.length,a=ph(t,e,n,s,i),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${o}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(a.map((t=>"    "+t)).join("\n")),l.join("\n")}function hh(t,e,n){let r;return r=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:Hc(t)?`'${t}'`:"bool"===n?dh(t):parseFloat(t.toFixed(7)).toString(),Bc(r,e)}function dh(t){return 0===t?"false":"true"}function ph(t,e,n,r,s,i=!0){const o="complex64"===n?2:1,a=e[0],l=e.length;if(0===l)return"complex64"===n?[hh(fh(t)[0],0,n)]:"bool"===n?[dh(t[0])]:[t[0].toString()];if(1===l){if(a>20){const e=3*o;let r=Array.from(t.slice(0,e)),i=Array.from(t.slice((a-3)*o,a*o));return"complex64"===n&&(r=fh(r),i=fh(i)),["["+r.map(((t,e)=>hh(t,s[e],n))).join(", ")+", ..., "+i.map(((t,e)=>hh(t,s[a-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?fh(t):Array.from(t)).map(((t,e)=>hh(t,s[e],n))).join(", ")+"]"]}const u=e.slice(1),c=r.slice(1),h=r[0]*o,d=[];if(a>20){for(let e=0;e<3;e++){const r=e*h,i=r+h;d.push(...ph(t.slice(r,i),u,n,c,s,!1))}d.push("...");for(let e=a-3;e<a;e++){const r=e*h,i=r+h;d.push(...ph(t.slice(r,i),u,n,c,s,e===a-1))}}else for(let e=0;e<a;e++){const r=e*h,i=r+h;d.push(...ph(t.slice(r,i),u,n,c,s,e===a-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let t=1;t<d.length-1;t++)d[t]=" "+d[t]+p;let f=",\n";for(let t=2;t<l;t++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function fh(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class gh{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=Fc(t),null!=n){const t=n.length;Rc(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Uc(e,this.size),this.strides=Yc(t)}set(t,...e){0===e.length&&(e=[0]),Rc(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return mh().makeTensor(this.values,this.shape,this.dtype)}}let mh=null,yh=null,bh=null;class xh{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=Fc(t),this.strides=Yc(t),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return yh.buffer(this.shape,this.dtype,t)}bufferSync(){return yh.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Qc(this.shape,t)}arraySync(){return Qc(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=mh().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>sh(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=mh().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>sh(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await mh().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(mh().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return yh.print(this,t)}clone(){return this.throwIfDisposed(),yh.clone(this)}toString(t=!1){return ch(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),yh.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),mh().makeVariable(this,t,e,n)}}Object.defineProperty(xh,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed});class wh extends xh{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!_c(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);mh().disposeTensor(this),this.dataId=t.dataId,mh().incRef(this,null)}dispose(){mh().disposeVariable(this),this.isDisposedInternal=!0}}var vh,kh,$h,Ih,Sh;Object.defineProperty(wh,Symbol.hasInstance,{value:t=>t instanceof xh&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(vh||(vh={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(kh||(kh={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}($h||($h={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(Ih||(Ih={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(Sh||(Sh={}));const Eh={float32:Ih,int32:kh,bool:$h,complex64:Sh};function Ch(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return Eh[t][e]}function Nh(t){return Ch(t,"int32")}function Rh(t,e){if(t.dtype===e.dtype)return[t,e];const n=Ch(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function Ah(t,e){return e.some((e=>e.id===t.id))}function Th(t){const e=[];return Dh(t,e,new Set),e}function Dh(t,e,n){if(null==t)return;if(t instanceof xh)return void e.push(t);if(r=t,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=t;for(const t in s){const r=s[t];n.has(r)||(n.add(r),Dh(r,e,n))}}class Fh{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class _h{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Fh}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new ah(this.backendInstance),!0}setupRegisteredKernels(){kc(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){kc(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(Promise.resolve(n)===n){const e=++this.pendingBackendInitId,r=n.then((n=>!(e<this.pendingBackendInitId||(this.registry[t]=n,this.pendingBackendInit=null,0)))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}return this.registry[t]=n,{success:!0,asyncInit:!1}}catch(e){return console.warn(`Initialization of backend ${t} failed`),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,s=this.readSync(e);r.disposeData(e),n.backend=t,t.move(e,s,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return _h.nextTensorId++}nextVariableId(){return _h.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e="float32",n={x:t},r={dtype:e};return Mh.runKernelFunc((n=>n.cast(t,e)),n,null,eu,r)}})),[],{}),e}runKernel(t,e,n,r,s){return this.runKernelFunc(null,e,null,t,n,r,s)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let s=0;n.forEach((t=>{s+="complex64"===t.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-e-s-i;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${t}'`)}runKernelFunc(t,e,n,r,s,i,o){let a,l=[];const u=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const c=this.state.numBytes,h=this.state.numTensors;let d;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const p=function(t,e){const n=Sc(t,e);return xc.get(n)}(r,this.backendName);let f,g;if(null!=p)d=()=>{const t=this.backend.numDataIds();f=p.kernelFunc({inputs:e,attrs:s,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,t,n);const a=n.map((({dataId:t,shape:e,dtype:n})=>this.makeTensorFromDataId(t,e,n)));if(u){let t=this.getTensorsForGradient(r,e,a);if(null==t){null==o&&(o=[]);const e=a.filter(((t,e)=>o[e]));t=(i||[]).slice().concat(e)}l=this.saveTensorsForBackwardMode(t)}return a};else{const e=t=>{u&&(l=t.map((t=>this.keep(this.clone(t)))))};d=()=>{const n=this.backend.numDataIds();f=this.tidy((()=>t(this.backend,e)));const s=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,s),s}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(g=this.profiler.profileKernel(r,e,(()=>d())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(g),a=g.outputs):a=d()})),u&&this.addTapeNode(r,e,a,n,l,s),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-c,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map((t=>null!=e[t]?e[t].shape:null)),outputShapes:a.map((t=>t.shape)),kernelTimeMs:g.timeMs,extraInfo:g.extraInfo}),Array.isArray(f)?a:a[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const r=vc(t);if(null!=r){const t=r.inputsToSave||[],s=r.outputsToSave||[];let i;r.saveAllInputs?(Rc(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(e).map((t=>e[t]))):i=t.map((t=>e[t]));const o=n.filter(((t,e)=>s[e]));return i.concat(o)}return null}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=t;"string"===n&&Hc(t[0])&&(s=t.map((t=>function(t,e="utf-8"){return e=e||"utf-8",Ol().platform.encode(t,e)}(t))));const i=r.write(s,e,n),o=new xh(e,n,i,this.nextTensorId());if(this.incRef(o,r),"string"===n){const t=this.state.tensorInfo.get(i),e=function(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}(s);this.state.numBytes+=e-t.bytes,t.bytes=e}return o}makeTensorFromDataId(t,e,n,r){const s=new xh(e,n=n||"float32",t,this.nextTensorId());return this.incRef(s,r),s}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const s=new wh(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*Gc(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof wh||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):this.state.tensorInfo.get(t.dataId).refCount--}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,s,i){const o={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},a=vc(t);null!=a&&(r=a.gradFunc),null!=r&&(o.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],r=eh(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t})),r(t.length>1?t:t[0],s,i))),this.state.activeTape.push(o)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Th(t),n=new Set(e.map((t=>t.id)));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==r.id||this.track(t)}))}gradients(t,e,n,r=!1){if(Rc(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));Rc(s instanceof xh,(()=>"The result y returned by f() must be a tensor."));const i=function(t,e,n){const r={},s={};for(let t=0;t<e.length;t++)r[e[t].id]=!0;for(let n=0;n<t.length;n++){const i=t[n],o=i.inputs;for(const t in o){const n=o[t];let a=!1;for(let t=0;t<e.length;t++)if(r[n.id]){i.outputs.forEach((t=>r[t.id]=!0)),a=!0,s[i.id]=!0;break}if(a)break}}const i={};i[n.id]=!0;const o={};for(let e=t.length-1;e>=0;e--){const n=t[e],r=n.inputs;for(let t=0;t<n.outputs.length;t++)if(i[n.outputs[t].id]){for(const t in r)i[r[t].id]=!0,o[n.id]=!0;break}}const a=[];for(let e=0;e<t.length;e++){const n=t[e];if(s[n.id]&&o[n.id]){const t={};for(const e in n.inputs){const s=n.inputs[e];r[s.id]&&(t[e]=s)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,a.push(e)}}return a}(this.state.activeTape,e,s);if(!r&&0===i.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[s.id]=null==n?function(t){const e=th(Fc(t),"float32");return Mh.makeTensor(e,t,"float32")}(s.shape):n,function(t,e,n,r){for(let s=e.length-1;s>=0;s--){const i=e[s],o=[];if(i.outputs.forEach((e=>{const n=t[e.id];null!=n?o.push(n):o.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const a=i.gradient(o);for(const e in i.inputs){if(!(e in a))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(a)}.`);const s=n((()=>a[e]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${s.dtype}'`);const o=i.inputs[e];if(!_c(s.shape,o.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${e}' has shape '${s.shape}', which does not match the shape of the input '${o.shape}'`);if(null==t[o.id])t[o.id]=s;else{const e=t[o.id];t[o.id]=r(e,s),e.dispose()}}}}(t,i,(t=>this.tidy(t)),Bh);const r=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(t){return Rc(jc(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;Rc(e.every((t=>t instanceof xh)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return e.forEach(((t,e)=>{r[e]=t})),this.runKernelFunc(((r,s)=>(n=t(...e,s),Rc(n.value instanceof xh,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),Rc(jc(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value)),r,((t,r)=>{const s=n.gradFunc(t,r),i=Array.isArray(s)?s:[s];Rc(i.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),Rc(i.every((t=>t instanceof xh)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return i.forEach(((t,e)=>{o[e]=()=>t})),o}))}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=nh(),n=await this.backend.time(t);return n.wallMs=nh()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Fh;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Oh(){const t=Ll();if(null==t._tfengine){const e=new _l(t);t._tfengine=new _h(e)}var e;return e=t._tfengine.ENV,Bl=e,mh=()=>t._tfengine,t._tfengine}_h.nextTensorId=0,_h.nextVariableId=0;const Mh=Oh();function Bh(t,e){const n={a:t,b:e};return Mh.runKernelFunc(((n,r)=>{const s=n.add(t,e);return r([t,e]),s}),n,null,Ul)}function Lh(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const zh=Ol();function Ph(t,e){let n=t;if(Vc(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||Vc(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&Ol().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Wh(t,r,[]),r}function Wh(t,e,n){if(n=n||[],!Array.isArray(t)&&!Vc(t))return void Rc(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));Rc(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),Rc(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const r=e.slice(1);for(let e=0;e<t.length;++e)Wh(t[e],r,n.concat(e))}function Uh(t,e,n,r){if(null!=t&&("numeric"!==t&&t!==e||"numeric"===t&&"string"===e))throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}function Vh(t,e,n,r="numeric"){if(t instanceof xh)return Uh(r,t.dtype,e,n),t;let s=qc(t);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Uh(r,s,e,n),null==t||!Vc(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const i=Ph(t,s);Vc(t)||Array.isArray(t)||(t=[t]);const o="string"!==s?Jc(t,s):Dc(t,[],!0);return Mh.makeTensor(o,i,s)}function Gh(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,r)=>Vh(t,`${e}[${r}]`,n)),r)}function Hh(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...t)=>{Mh.startScope(n);try{const e=r(...t);return e instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),Mh.endScope(e),e}catch(t){throw Mh.endScope(null),t}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}zh.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),zh.registerFlag("IS_BROWSER",(()=>Lh())),zh.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),zh.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),zh.registerFlag("PROD",(()=>!1)),zh.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>zh.getBool("DEBUG"))),zh.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),zh.registerFlag("IS_TEST",(()=>!1));const Kh=Hh({complex_:function(t,e){const n=Vh(t,"real","complex"),r=Vh(e,"imag","complex");Ac(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return Mh.runKernelFunc((t=>t.complex(n,r)),s,null,"Complex")}});function qh(t,e,n,r){if(null==r&&(r=qc(t)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Vc(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){rh(e);const t=Fc(e),r=Fc(n);Rc(t===r,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`));for(let t=0;t<n.length;++t){const r=n[t],s=t!==n.length-1||r!==Fc(e.slice(t));Rc(n[t]===e[t]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return Vc(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==r?Jc(t,r):Dc(t,[],!0),Mh.makeTensor(t,e,r)}function jh(t,e,n){return qh(t,e,Ph(t,n),n)}const Xh={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Yh(t,e){const n=[],r=[],s=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let i=0;i<s.length;++i){const o=s[i],a=Array.isArray(t)?t[i].tensor:t[o];if("float32"!==a.dtype&&"int32"!==a.dtype&&"bool"!==a.dtype&&"string"!==a.dtype&&"complex64"!==a.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${a.dtype}`);const l={name:o,shape:a.shape,dtype:a.dtype};if("string"===a.dtype){const t=new Promise((async t=>{const e=await a.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+4*e.length,r=new Uint8Array(n);let s=0;for(let t=0;t<e.length;t++){const n=e[t],i=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(i,s),s+=4,r.set(n,s),s+=n.length}t(r)}));r.push(t)}else r.push(a.data());null!=e&&(l.group=e),n.push(l)}return{data:Jh(await Promise.all(r)),specs:n}}function Jh(t){if(null===t)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${t.constructor.name}`)}));const r=new Uint8Array(e);let s=0;return n.forEach((t=>{r.set(new Uint8Array(t.buffer),s),s+=t.byteLength})),r.buffer}const Zh="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Qh(t){return Zh?Buffer.byteLength(t):new Blob([t]).size}function td(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let r=0;return t.forEach((t=>{n.set(new Uint8Array(t),r),r+=t.byteLength})),n.buffer}function ed(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:Qh(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:Qh(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function nd(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0==(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return r=>{const s=new ArrayBuffer(4*r.length),i=new Uint32Array(s);for(let s=0;s<r.length;s++){const o=r[s],a=t[n[o>>10]+(1023&o)]+e[o>>10];i[s]=a}return new Float32Array(s)}}class rd{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==rd.instance&&(rd.instance=new rd),rd.instance}static registerSaveRouter(t){rd.getInstance().saveRouters.push(t)}static registerLoadRouter(t){rd.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return rd.getHandlers(t,"save")}static getLoadHandlers(t,e){return rd.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?rd.getInstance().loadRouters:rd.getInstance().saveRouters).forEach((e=>{const s=e(t,n);null!==s&&r.push(s)})),r}}const sd="tensorflowjs",id="models_store",od="model_info_store";function ad(){if(!Ol().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function ld(t){const e=t.result;e.createObjectStore(id,{keyPath:"modelPath"}),e.createObjectStore(od,{keyPath:"modelPath"})}class ud{constructor(t){if(this.indexedDB=ad(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const r=this.indexedDB.open(sd,1);r.onupgradeneeded=()=>ld(r),r.onsuccess=()=>{const s=r.result;if(null==e){const e=s.transaction(id,"readonly"),r=e.objectStore(id).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(s.close(),n(r.error)),e.oncomplete=()=>s.close()}else{const r=ed(e),i=s.transaction(od,"readwrite");let o=i.objectStore(od);const a=o.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;a.onsuccess=()=>{l=s.transaction(id,"readwrite");const a=l.objectStore(id).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});a.onsuccess=()=>t({modelArtifactsInfo:r}),a.onerror=t=>{o=i.objectStore(od);const e=o.delete(this.modelPath);e.onsuccess=()=>(s.close(),n(a.error)),e.onerror=t=>(s.close(),n(a.error))}},a.onerror=t=>(s.close(),n(a.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=t=>n(r.error)}))}}ud.URL_SCHEME="indexeddb://";const cd=t=>{return Ol().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(ud.URL_SCHEME)?(e=t.slice(ud.URL_SCHEME.length),new ud(e)):null;var e};rd.registerSaveRouter(cd),rd.registerLoadRouter(cd);class hd{constructor(){this.indexedDB=ad()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(sd,1);n.onupgradeneeded=()=>ld(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(od,"readonly"),i=s.objectStore(od).getAll();i.onsuccess=()=>{const e={};for(const t of i.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},i.onerror=t=>(r.close(),e(i.error)),s.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(ud.URL_SCHEME)?e.slice(ud.URL_SCHEME.length):e,new Promise(((e,n)=>{const r=this.indexedDB.open(sd,1);r.onupgradeneeded=()=>ld(r),r.onsuccess=()=>{const s=r.result,i=s.transaction(od,"readwrite"),o=i.objectStore(od),a=o.get(t);let l;a.onsuccess=()=>{if(null==a.result)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=o.delete(t),i=()=>{l=s.transaction(id,"readwrite");const r=l.objectStore(id).delete(t);r.onsuccess=()=>e(a.result.modelArtifactsInfo),r.onerror=t=>n(a.error)};r.onsuccess=i,r.onerror=t=>(i(),s.close(),n(a.error))}},a.onerror=t=>(s.close(),n(a.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=t=>n(r.error)}))}}const dd="/",pd="tensorflowjs_models",fd="info",gd="model_topology",md="weight_specs",yd="weight_data",bd="model_metadata";function xd(t){return{info:[pd,t,fd].join(dd),topology:[pd,t,gd].join(dd),weightSpecs:[pd,t,md].join(dd),weightData:[pd,t,yd].join(dd),modelMetadata:[pd,t,bd].join(dd)}}function wd(t){const e=t.split(dd);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(dd)}class vd{constructor(t){if(!Ol().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=xd(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),r=ed(t);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(Zh)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,r=e.length;t<r;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(t.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata})),{modelArtifactsInfo:r}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const t=JSON.parse(s);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,e.userDefinedMetadata=t.userDefinedMetadata}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(Zh){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(i),e}}vd.URL_SCHEME="localstorage://";const kd=t=>{return Ol().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(vd.URL_SCHEME)?(e=t.slice(vd.URL_SCHEME.length),new vd(e)):null;var e};rd.registerSaveRouter(kd),rd.registerLoadRouter(kd);class $d{constructor(){Rc(Ol().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Rc("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=pd+dd,n=dd+fd;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(e)&&s.endsWith(n)&&(t[wd(s)]=JSON.parse(this.LS.getItem(s)))}return t}async removeModel(t){var e;const n=xd(t=(e=t).startsWith(vd.URL_SCHEME)?e.slice(vd.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class Id{constructor(){this.managers={}}static getInstance(){return null==Id.instance&&(Id.instance=new Id),Id.instance}static registerManager(t,e){Rc(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),Rc(t.length>0,(()=>"scheme must not be an empty string."));const n=Id.getInstance();Rc(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Sd{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(Ol().get("IS_BROWSER")){Ol().setPlatform("browser",new Sd);try{Id.registerManager(vd.URL_SCHEME,new $d)}catch(t){}try{Id.registerManager(ud.URL_SCHEME,new hd)}catch(t){}}let Ed;function Cd(t,e="float32",n){return e=e||"float32",rh(t),new gh(t,e,n)}Ol().get("IS_NODE")&&Ol().setPlatform("node",new class{constructor(){this.util=n(758),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=Ol().global.fetch?Ol().global.fetch(t,e):(null==Ed&&(Ed=n(352)),Ed(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const Nd=Hh({cast_:function(t,e){const n=Vh(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:e};return Mh.runKernelFunc((t=>t.cast(n,e)),r,null,eu,s)}}),Rd=Hh({clone_:function(t){const e=Vh(t,"x","clone",null),n={x:e};return Mh.runKernelFunc((()=>Mh.makeTensorFromDataId(e.dataId,e.shape,e.dtype)),n,null,wu)}});function Ad(t){return new Promise((t=>setTimeout(t))).then(t)}Oh(),yh={buffer:Cd,cast:Nd,clone:Rd,print:function(t,e=!1){console.log(t.toString(e))}};class Td{constructor(t){if(!Ol().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Td.URL_SCHEME)&&(t=t.slice(Td.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n},s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),i=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(i.download=this.modelTopologyFileName,i.href=s,await Ad((()=>i.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await Ad((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:ed(t)}}}}function Dd(t,e,n,r){!function(t){Rc(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){Rc(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${t}`)),Rc(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${e}`)),Rc(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(t.map((i=>(i.then((i=>{const o=n+ ++s/t.length*(r-n);return e(o),i})),i))))}async function Fd(t,e){null==e&&(e={});const n=null==e.fetchFunc?Ol().platform.fetch:e.fetchFunc,r=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),s=(null==e.onProgress?await Promise.all(r):await Dd(r,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(s):await Dd(s,e.onProgress,.5,1)}Td.URL_SCHEME="downloads://",rd.registerSaveRouter((t=>Ol().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Td.URL_SCHEME)?function(t="model"){return new Td(t)}(t.slice(Td.URL_SCHEME.length)):null));class _d{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(Rc("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=Ol().platform.fetch,Rc(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&Rc(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata,weightsManifest:n};e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:ed(t),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest,s=e.generatedBy,i=e.convertedBy,o=e.format,a=e.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let l,u;if(null!=r){const t=await this.loadWeights(r);[l,u]=t}return{modelTopology:n,weightSpecs:l,weightData:u,userDefinedMetadata:a,generatedBy:s,convertedBy:i,format:o}}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(e),s=this.weightPathPrefix||n,i=[];for(const e of t)i.push(...e.weights);const o=[],a=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?a.push(this.weightUrlConverter(t)):o.push(s+t+r);return this.weightUrlConverter&&o.push(...await Promise.all(a)),[i,td(await Fd(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Od(t){return null!=t.match(_d.URL_SCHEME_REGEX)}_d.URL_SCHEME_REGEX=/^https?:\/\//;const Md=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>Od(t))):Od(t),n)return Bd(t,e)}return null};function Bd(t,e){return new _d(t,e)}function Ld(t,e,n){Rc(t.rank===e.length,(()=>`Error in slice${t.rank}D: Length of begin ${e} must match the rank of the array (${t.rank}).`)),Rc(t.rank===n.length,(()=>`Error in slice${t.rank}D: Length of size ${n} must match the rank of the array (${t.rank}).`));for(let r=0;r<t.rank;++r)Rc(e[r]+n[r]<=t.shape[r],(()=>`Error in slice${t.rank}D: begin[${r}] + size[${r}] (${e[r]+n[r]}) would overflow input.shape[${r}] (${t.shape[r]})`))}function zd(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function Pd(t,e,n){const r=[];for(let s=0;s<t.length;s++)r[s]=Math.ceil((e[s]-t[s])/n[s]);return r}function Wd(t,e,n,r){const s=[...t];for(let t=s.length;t<r.length;t++)s.push(1);for(let t=0;t<n;t++)0===t?s[e]=1:(s.splice(e,0,1),s.pop());return s}function Ud(t,e,n){return n<=t?n:n-(e-1)}function Vd(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function Gd(t,e,n,r,s,i,o,a,l){const u=t.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(e.length&&n>0){const l=e[0],u=n+1;c=Hd(o,l,u,r,t),h=Kd(a,l,u,s,t),d=Wd(i,l,u,t)}else for(let e=0;e<u;e++)c[e]=jd(o,r,i,t,e,l),h[e]=Xd(a,s,i,t,e,l),d[e]=qd(i,e,l);return{begin:c,end:h,strides:d}}function Hd(t,e,n,r,s){const i=[...s],o=Vd(n,e);for(let s=0;s<i.length;s++)if(o.indexOf(s)>-1)i[s]=0;else{const o=Ud(e,n,s);let a=r[o];t&1<<o&&(a=0),i[s]=a}return i}function Kd(t,e,n,r,s){const i=[...s],o=Vd(n,e);for(let s=0;s<i.length;s++)if(o.indexOf(s)>-1)i[s]=Number.MAX_SAFE_INTEGER;else{const o=Ud(e,n,s);let a=r[o];t&1<<o&&(a=Number.MAX_SAFE_INTEGER),i[s]=a}for(let t=0;t<i.length;t++){const e=s[t];i[t]<0&&(i[t]+=e),i[t]=Cc(0,i[t],s[t])}return i}function qd(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function jd(t,e,n,r,s,i){let o=e[s];const a=n[s]||1;(t&1<<s||i&1<<s||null==o)&&(o=a>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return o<0&&(o+=l),o=Cc(0,o,l-1),o}function Xd(t,e,n,r,s,i){let o=e[s];const a=n[s]||1;(t&1<<s||i&1<<s||null==o)&&(o=a>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return o<0&&(o+=l),o=a>0?Cc(0,o,l):Cc(-1,o,l-1),o}function Yd(t,e,n){let r=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){r=t;break}for(let s=r+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function Jd(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function Zd(t,e,n){let r,s;return r="number"==typeof e?[e,...new Array(t.rank-1).fill(0)]:e.length<t.rank?e.concat(new Array(t.rank-e.length).fill(0)):e.slice(),r.forEach((t=>{Rc(-1!==t,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(t.rank).fill(-1):"number"==typeof n?[n,...new Array(t.rank-1).fill(-1)]:n.length<t.rank?n.concat(new Array(t.rank-n.length).fill(-1)):n,s=s.map(((e,n)=>e>=0?e:(Rc(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-r[n]))),[r,s]}rd.registerSaveRouter(Md),rd.registerLoadRouter(Md);class Qd{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class tp{constructor(){this.classNameMap={}}static getMap(){return null==tp.instance&&(tp.instance=new tp),tp.instance}static register(t){tp.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function ep(t){Rc(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),Rc("string"==typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),Rc(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),tp.register(t)}function np(t){Ol().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function rp(){return Mh}function sp(){return Mh.memory()}function ip(t,e){return Mh.tidy(t,e)}function op(t){Th(t).forEach((t=>t.dispose()))}function ap(t){return Mh.keep(t)}function lp(t){return Mh.customGrad(t)}function up(t,e){if((Vc(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&Vc(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return qh(t,[],[],e)}bh=np;class cp extends Qd{minimize(t,e=!1,n){const{value:r,grads:s}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:s[t.name]})));this.applyGradients(t)}else this.applyGradients(s);return op(s),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(t,e){Rc(jc(t),(()=>"The f passed in variableGrads(f) must be a function")),Rc(null==e||Array.isArray(e)&&e.every((t=>t instanceof wh)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in Mh.registeredVariables)e.push(Mh.registeredVariables[t])}const r=n?e.filter((t=>!t.trainable)):null,s=e.length;Rc((e=e.filter((t=>t.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:i,grads:o}=Mh.gradients(t,e,null,!0);Rc(o.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),Rc(0===i.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`));const a={};return e.forEach(((t,e)=>{null!=o[e]&&(a[t.name]=o[e])})),null!=r&&r.forEach((t=>a[t.name]=null)),{value:i,grads:a}}(t,e)}dispose(){null!=this.iterations_&&op(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:up(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(cp,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});const hp=Hh({abs_:function(t){const e=Vh(t,"x","abs"),n={x:e};return Mh.runKernelFunc(((t,n)=>(n([e]),"complex64"===e.dtype?t.complexAbs(e):t.abs(e))),n,null,"Abs")}}),dp=Hh({add_:function(t,e){let n=Vh(t,"a","add"),r=Vh(e,"b","add");[n,r]=Rh(n,r);const s={a:n,b:r};return Mh.runKernelFunc(((t,e)=>{const s=t.add(n,r);return e([n,r]),s}),s,null,Ul)}});function pp(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function fp(t,e,n){const r=t.length+e.length,s=[];let i=0,o=0;for(let a=0;a<r;a++)-1===n.indexOf(a)?s.push(t[i++]):s.push(e[o++]);return s}function gp(t,e){const n=[],r=t.length;for(let s=0;s<r;s++)-1===e.indexOf(s)&&n.push(t[s]);return[n,e.map((e=>t[e]))]}function mp(t,e){return fp(t,e.map((t=>1)),e)}function yp(t,e,n){Rc(pp(e,n),(()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`))}function bp(t,e){if(pp(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach((t=>n.push(t))),n}function xp(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function wp(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}const vp=Hh({reshape_:function(t,e){const n=Vh(t,"x","reshape",null);e=function(t,e){let n=1,r=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${e}`);r=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const s=t.slice();return s[r]=e/n,s}(e,n.size),Rc(n.size===Fc(e),(()=>"new shape and old shape must have the same number of elements."));const r={x:n},s={shape:e};return Mh.runKernelFunc(((t,r)=>(r([n]),t.reshape(n,e))),r,null,Uu,s)}}),kp=Hh({transpose_:function(t,e){const n=Vh(t,"x","transpose");if(null==e&&(e=n.shape.map(((t,e)=>e)).reverse()),Rc(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`)),e.forEach((t=>{Rc(t>=0&&t<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${e}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:e};return Mh.runKernelFunc((t=>t.transpose(n,e)),r,null,cc,s)}}),$p=Hh({all_:function(t,e=null,n=!1){let r=Vh(t,"x","all","bool");const s={x:r},i={axis:e,keepDims:n};return Mh.runKernelFunc((t=>{const s=zc(e,r.shape);let i=s;const o=bp(i,r.rank);null!=o&&(r=kp(r,o),i=wp(i.length,r.rank));const a=t.all(r,i);if(n){const t=mp(a.shape,s);return vp(a,t)}return a}),s,null,"All",i)}}),Ip=Hh({any_:function(t,e=null,n=!1){let r=Vh(t,"x","any","bool");const s={x:r},i={axis:e,keepDims:n};return Mh.runKernelFunc((t=>{const s=zc(e,r.shape);let i=s;const o=bp(i,r.rank);null!=o&&(r=kp(r,o),i=wp(i.length,r.rank));const a=t.any(r,i);if(n){const t=mp(a.shape,s);return vp(a,t)}return a}),s,null,"Any",i)}}),Sp=Hh({argMax_:function(t,e=0){let n=Vh(t,"x","argMax");const r={x:n},s={axis:e};return Mh.runKernelFunc(((t,r)=>{r([n]);let s=zc(e,n.shape);const i=bp(s,n.rank);return null!=i&&(n=kp(n,i),s=wp(s.length,n.rank)),t.argMax(n,s[0])}),r,null,Vl,s)}});function Ep(t,e,n,r,s="NHWC",i){return Rp(t,[...e,t[3]],n,i,r,null,null,Lp(s))}function Cp(t,e,n,r,s,i,o="channelsLast"){const[a,l]=Dp(e);let u;if("channelsLast"===o)u=[a,l,t[3],t[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);u=[a,l,t[1],t[1]]}return Rp(t,u,n,r,s,i,!1,o)}function Np(t,e,n,r,s,i,o="NDHWC"){const[a,l,u]=Fp(e);let c,h;if("NDHWC"===o)h="channelsLast",c=[a,l,u,t[4],t[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);h="channelsFirst",c=[a,l,u,t[1],t[1]]}return Ap(t,c,n,r,s,!1,h,i)}function Rp(t,e,n,r,s,i,o=!1,a="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,h]=t;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,h,u,c]=t}const[d,p,,f]=e,[g,m]=Dp(n),[y,b]=Dp(r),x=_p(d,y),w=_p(p,b),{padInfo:v,outHeight:k,outWidth:$}=function(t,e,n,r,s,i,o,a,l){let u,c,h;if("number"==typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,r,s){null==r&&(r=Tp(t,e,n));const i=t[1],o=Op((t[0]-e+2*r)/n+1,s);Rc(Oc(o),(()=>`The output # of rows (${o}) must be an integer. Change the stride and/or zero pad parameters`));const a=Op((i-e+2*r)/n+1,s);return Rc(Oc(a),(()=>`The output # of columns (${a}) must be an integer. Change the stride and/or zero pad parameters`)),[o,a]}([e,n],i,r,t,a);c=s[0],h=s[1]}else if("same"===t){c=Math.ceil(e/r),h=Math.ceil(n/s);const t=Math.max(0,(c-1)*r+i-e),a=Math.max(0,(h-1)*s+o-n),l=Math.floor(t/2),d=t-l,p=Math.floor(a/2);u={top:l,bottom:d,left:p,right:a-p,type:"SAME"}}else if("valid"===t)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-i+1)/r),h=Math.ceil((n-o+1)/s);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const d="channelsLast"===l?t[1][0]:t[2][0],p="channelsLast"===l?t[1][1]:t[2][1],f="channelsLast"===l?t[2][0]:t[3][0],g="channelsLast"===l?t[2][1]:t[3][1];u={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},c=Op((e-i+d+p)/r+1,a),h=Op((n-o+f+g)/s+1,a)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,g,m,x,w,i,a),I=o?f*h:f;let S;return"channelsFirst"===a?S=[l,I,k,$]:"channelsLast"===a&&(S=[l,k,$,I]),{batchSize:l,dataFormat:a,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:$,outChannels:I,padInfo:v,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:t,outShape:S,filterShape:e}}function Ap(t,e,n,r,s,i=!1,o="channelsLast",a){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h,d]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,d,u,c,h]=t}const[p,f,g,,m]=e,[y,b,x]=Fp(n),[w,v,k]=Fp(r),$=_p(p,w),I=_p(f,v),S=_p(g,k),{padInfo:E,outDepth:C,outHeight:N,outWidth:R}=function(t,e,n,r,s,i,o,a,l,u,c){let h,d,p,f;if("number"==typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const i=function(t,e,n,r,s,i){null==s&&(s=Tp(t,e,r));const o=t[1],a=t[2],l=Op((t[0]-e+2*s)/r+1,i);Rc(Oc(l),(()=>`The output # of depths (${l}) must be an integer. Change the stride and/or zero pad parameters`));const u=Op((o-e+2*s)/r+1,i);Rc(Oc(u),(()=>`The output # of rows (${u}) must be an integer. Change the stride and/or zero pad parameters`));const c=Op((a-e+2*s)/r+1,i);return Rc(Oc(c),(()=>`The output # of columns (${c}) must be an integer. Change the stride and/or zero pad parameters`)),[l,u,c,1]}([e,n,r,1],a,0,s,t,c);d=i[0],p=i[1],f=i[2]}else if("same"===t){d=Math.ceil(e/s),p=Math.ceil(n/i),f=Math.ceil(r/o);const t=(d-1)*s+a-e,c=(p-1)*i+l-n,g=(f-1)*o+u-r,m=Math.floor(t/2),y=t-m,b=Math.floor(c/2),x=c-b,w=Math.floor(g/2);h={top:b,bottom:x,left:w,right:g-w,front:m,back:y,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((e-a+1)/s),p=Math.ceil((n-l+1)/i),f=Math.ceil((r-u+1)/o)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,y,b,x,$,I,S,a),A=i?m*d:m;let T;return"channelsFirst"===o?T=[l,A,C,N,R]:"channelsLast"===o&&(T=[l,C,N,R,A]),{batchSize:l,dataFormat:o,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:C,outHeight:N,outWidth:R,outChannels:A,padInfo:E,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:$,effectiveFilterHeight:I,effectiveFilterWidth:S,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:t,outShape:T,filterShape:e}}function Tp(t,e,n,r=1){const s=_p(e,r);return Math.floor((t[0]*(n-1)-n+s)/2)}function Dp(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function Fp(t){return"number"==typeof t?[t,t,t]:t}function _p(t,e){return e<=1?t:t+(t-1)*(e-1)}function Op(t,e){if(!e)return t;switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function Mp(t){const[e,n,r]=Dp(t);return 1===e&&1===n&&1===r}function Bp(t,e){return Mp(t)||Mp(e)}function Lp(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}const zp=Hh({avgPool_:function(t,e,n,r,s){const i=Vh(t,"x","avgPool","float32");Rc(Bp(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let o=i,a=!1;3===i.rank&&(a=!0,o=vp(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Rc(4===o.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`)),null!=s&&Rc(Oc(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:o},u={filterSize:e,strides:n,pad:r,dimRoundingMode:s};let c=Mh.runKernelFunc(((t,i)=>{const a=Cp(o.shape,e,n,1,r,s);return i([o]),1===a.filterWidth&&1===a.filterHeight&&_c(a.inShape,a.outShape)?o.clone():t.avgPool(o,a)}),l,null,Yl,u);return c=Nd(c,i.dtype),a?vp(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Pp=Hh({avgPool3d_:function(t,e,n,r,s,i="NDHWC",o){null==o?o=[1,1,1]:np("dilations is deprecated, this field will be gone in v3.0.0.");const a=Vh(t,"x","avgPool3d","float32");let l=a,u=!1;4===a.rank&&(u=!0,l=vp(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),Rc(5===l.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`)),Rc("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),Rc(Bp(n,o),(()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`)),null!=s&&Rc(Oc(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const c={x:l},h={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:i,dilations:o};let d=Mh.runKernelFunc(((t,a)=>{null==o&&(o=[1,1,1]);const u=Np(l.shape,e,n,o,r,s,i);return a([l]),t.avgPool3d(l,u)}),c,null,Jl,h);return d=Nd(d,l.dtype),u?vp(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});function Wp(t){return null==t?null:0===t.rank?vp(t,[t.size]):1===t.rank?t:2===t.rank?vp(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?vp(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t}const Up=Hh({batchNorm_:function(t,e,n,r,s,i){null==i&&(i=.001);const o=Vh(t,"x","batchNorm"),a=Vh(e,"mean","batchNorm"),l=Vh(n,"variance","batchNorm");let u,c;null!=s&&(u=Vh(s,"scale","batchNorm")),null!=r&&(c=Vh(r,"offset","batchNorm")),Rc(a.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Rc(null==c||a.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Rc(null==u||a.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(t){let e;return e=0===t.rank||1===t.rank?vp(t,[1,1,1,t.size]):2===t.rank?vp(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?vp(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(o),d={x:h,scale:u,offset:c,mean:a,variance:l},p={varianceEpsilon:i},f=Mh.runKernelFunc(((t,e)=>(e([h,a,l,u]),t.batchNorm(h,Wp(a),Wp(l),Wp(c),Wp(u),i))),d,null,yu,p);return vp(f,o.shape)}}),Vp=Hh({batchNorm2d_:function(t,e,n,r,s,i){const o=Vh(t,"x","batchNorm"),a=Vh(e,"mean","batchNorm"),l=Vh(n,"variance","batchNorm");let u,c;return null!=s&&(u=Vh(s,"scale","batchNorm")),null!=r&&(c=Vh(r,"offset","batchNorm")),Rc(2===o.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`)),Rc(2===a.rank||1===a.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`)),Rc(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&Rc(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&Rc(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Up(o,a,l,c,u,i)}}),Gp=Hh({batchNorm3d_:function(t,e,n,r,s,i){const o=Vh(t,"x","batchNorm"),a=Vh(e,"mean","batchNorm"),l=Vh(n,"variance","batchNorm");let u,c;return null!=s&&(u=Vh(s,"scale","batchNorm")),null!=r&&(c=Vh(r,"offset","batchNorm")),Rc(3===o.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`)),Rc(3===a.rank||1===a.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`)),Rc(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&Rc(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&Rc(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Up(o,a,l,c,u,i)}}),Hp=Hh({batchNorm4d_:function(t,e,n,r,s,i){const o=Vh(t,"x","batchNorm"),a=Vh(e,"mean","batchNorm"),l=Vh(n,"variance","batchNorm");let u,c;return null!=s&&(u=Vh(s,"scale","batchNorm")),null!=r&&(c=Vh(r,"offset","batchNorm")),Rc(4===o.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`)),Rc(4===a.rank||1===a.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`)),Rc(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&Rc(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&Rc(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Up(o,a,l,c,u,i)}}),Kp=Hh({clipByValue_:function(t,e,n){const r=Vh(t,"x","clipByValue");Rc(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`));const s={x:r},i={clipValueMin:e,clipValueMax:n};return Mh.runKernelFunc(((t,s)=>{const i=t.clip(r,e,n);return s([r]),i}),s,null,ru,i)}});function qp(t,e){const n=t[0].length;t.forEach(((t,e)=>{Rc(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),Rc(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=t[0];t.forEach(((t,s)=>{for(let i=0;i<n;i++)Rc(i===e||t[i]===r[i],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function jp(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}const Xp=Hh({concat_:function(t,e=0){Rc(t.length>=1,(()=>"Pass at least one tensor to concat"));let n=Gh(t,"tensors","concat");"complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)}));const r=zc(e,n[0].shape)[0],s=jp(n.map((t=>t.shape)),r);if(0===Fc(s))return jh([],s);if(n=n.filter((t=>t.size>0)),1===n.length)return n[0];qp(n.map((t=>t.shape)),r);const i=n,o={axis:e};return Mh.runKernelFunc(((t,e)=>{const s=t.concat(n,r);return e(n),s}),i,null,su,o)}}),Yp=Hh({concat1d_:function(t){return Xp(t,0)}}),Jp=Hh({concat2d_:function(t,e){return Xp(t,e)}}),Zp=Hh({concat3d_:function(t,e){return Xp(t,e)}}),Qp=Hh({concat4d_:function(t,e){return Xp(t,e)}}),tf=Hh({conv2d_:function(t,e,n,r,s="NHWC",i=[1,1],o){const a=Vh(t,"x","conv2d"),l=Vh(e,"filter","conv2d");let u=a,c=!1;3===a.rank&&(c=!0,u=vp(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Rc(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),Rc(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=o&&Rc(Oc(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`));const h="NHWC"===s?u.shape[3]:u.shape[1];Rc(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),Rc(Bp(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:o},f=Mh.runKernelFunc(((t,e)=>{const a=Lp(s),c=Rp(u.shape,l.shape,n,i,r,o,!1,a),h=t.conv2d(u,l,c);return e([u,l]),h}),d,null,iu,p);return c?vp(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),ef=Hh({conv1d_:function(t,e,n,r,s="NWC",i=1,o){const a=Vh(t,"x","conv1d"),l=Vh(e,"filter","conv1d");let u=a,c=!1;2===a.rank&&(c=!0,u=vp(a,[1,a.shape[0],a.shape[1]])),Rc(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),Rc(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=o&&Rc(Oc(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`)),Rc(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),Rc(Bp(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),Rc("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=vp(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=vp(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=tf(d,h,[1,n],r,"NHWC",[1,i],o);return vp(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),nf=Hh({conv2DBackpropInput_:function(t,e,n,r,s,i="NHWC",o){Rc(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let a=t,l=e,u=!1;3===e.rank&&(u=!0,l=vp(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,t[0],t[1],t[2]]),Rc(4===a.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`)),Rc(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),Rc(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===i?a[3]:a[1],h="NHWC"===i?l.shape[3]:l.shape[1];Rc(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),Rc(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=o&&Rc(Oc(s),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`));const d={dy:l,filter:n},p={strides:r,pad:s,dataFormat:i,dimRoundingMode:o,inputShape:a},f=Mh.runKernelFunc(((t,e)=>{const u=Lp(i),c=Rp(a,n.shape,r,1,s,o,!1,u),h=t.conv2dDerInput(l,n,c);return e([l,n]),h}),d,null,ou,p);return u?vp(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),rf=Hh({conv2dTranspose_:function(t,e,n,r,s,i){const o=Vh(t,"x","conv2dTranspose"),a=Vh(e,"filter","conv2dTranspose");return nf(n,o,a,r,s,"NHWC",i)}}),sf=Hh({conv3d_:function(t,e,n,r,s="NDHWC",i=[1,1,1]){const o=Vh(t,"x","conv3d"),a=Vh(e,"filter","conv3d");let l=o,u=!1;4===o.rank&&(u=!0,l=vp(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Rc(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),Rc(5===a.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`)),Rc(l.shape[4]===a.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`)),Rc(Bp(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),Rc("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const c={x:l,filter:a},h={strides:n,pad:r,dataFormat:s,dilations:i},d=Mh.runKernelFunc(((t,e)=>{const s=Ap(l.shape,a.shape,n,i,r),o=t.conv3d(l,a,s);return e([l,a]),o}),c,null,au,h);return u?vp(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),of=Hh({depthwiseConv2d_:function(t,e,n,r,s="NHWC",i=[1,1],o){const a=Vh(t,"x","depthwiseConv2d"),l=Vh(e,"filter","depthwiseConv2d");let u=a,c=!1;3===a.rank&&(c=!0,u=vp(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Rc(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),Rc(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),Rc(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=o&&Rc(Oc(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`));const h={x:u,filter:l},d={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:o},p=Mh.runKernelFunc(((t,e)=>{null==i&&(i=[1,1]),Rc(Bp(n,i),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const s=Rp(u.shape,l.shape,n,i,r,o,!0),a=t.depthwiseConv2D(u,l,s);return e([u,l]),a}),h,null,cu,d);return c?vp(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),af=Hh({floorDiv_:function(t,e){let n=Vh(t,"a","floorDiv"),r=Vh(e,"b","floorDiv");[n,r]=Rh(n,r);const s={a:n,b:r};return Mh.runKernelFunc(((t,e)=>{const s=t.floorDiv(n,r);return e([n,r]),s}),s,null,mu)}}),lf=Hh({div_:function(t,e){let n=Vh(t,"a","div"),r=Vh(e,"b","div");if([n,r]=Rh(n,r),"int32"===n.dtype&&"int32"===r.dtype)return af(n,r);const s={a:n,b:r};return Mh.runKernelFunc(((t,e)=>{const s=t.realDivide(n,r);return e([n,r]),s}),s,null,du,{})}}),uf=Hh({elu_:function(t){const e=Vh(t,"x","elu"),n={x:e};return Mh.runKernelFunc(((t,n)=>{const r=t.elu(e);return n([r]),r}),n,null,"Elu")}});function cf(t,e){const n=t.length,r=[];for(let s=0;s<n;s++){const i=n-1-s,o=t[i]||1;(e[e.length-1-s]||1)>1&&1===o&&r.unshift(i)}return r}function hf(t,e){const n=[];for(let r=0;r<e.length;r++){const s=t[t.length-r-1],i=e.length-r-1,o=e[i];(null==s||1===s&&o>1)&&n.unshift(i)}return n}function df(t,e){const n=[],r=Math.max(t.length,e.length);for(let s=0;s<r;s++){let r=t[t.length-s-1];null==r&&(r=1);let i=e[e.length-s-1];if(null==i&&(i=1),1===r)n.unshift(i);else if(1===i)n.unshift(r);else{if(r!==i)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(r)}}return n}const pf=Hh({equal_:function(t,e){let n=Vh(t,"a","equal"),r=Vh(e,"b","equal");[n,r]=Rh(n,r),df(n.shape,r.shape);const s={a:n,b:r};return Mh.runKernelFunc((t=>t.equal(n,r)),s,null,"Equal")}}),ff=Hh({expandDims_:function(t,e=0){const n=Vh(t,"x","expandDims",null);Rc(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r=n.shape.slice();return e<0&&(Rc(-(n.rank+1)<=e,(()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`)),e=n.rank+e+1),r.splice(e,0,1),vp(n,r)}}),gf=Hh({tile_:function(t,e){const n=Vh(t,"x","tile",null);Rc(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const r=[n],s={x:n},i={reps:e};return Mh.runKernelFunc(((t,r)=>{const s=t.tile(n,e);return r([n]),s}),s,null,uc,i,r)}}),mf=Hh({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const s=Cd([t,e],r),i=t<=e?t:e;for(let t=0;t<i;++t)s.set(1,t,t);const o=vp(s.toTensor(),[t,e]);if(null==n)return o;if(1===n.length)return gf(ff(o,0),[n[0],1,1]);if(2===n.length)return gf(ff(ff(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return gf(ff(ff(ff(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function yf(t,e,n){const r={shape:t,value:e,dtype:n};return Mh.runKernelFunc((r=>r.fill(t,e,n)),{},null,"Fill",r)}const bf=Hh({floor_:function(t){const e=Vh(t,"x","floor"),n={x:e};return Mh.runKernelFunc((t=>t.floor(e)),n,null,gu)}}),xf=30;function wf(t){return t<=xf?t:Xc(t,Math.floor(Math.sqrt(t)))}function vf(t,e){let n,r=!1;for(t<=xf?(n=t,r=!0):n=Xc(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=Xc(t,n+1);return n}function kf(t,e,n){const r=[],s=t.length;for(let i=0;i<s;i++)i!==e?r.push(t[i]):r.push(n);return r}function $f(t,e,n){const r=t.shape[n],s=[];let i=1,o=1;for(let e=0;e<n;e++)s.push(t.shape[e]),i*=t.shape[e];for(let t=0;t<e.rank;t++)s.push(e.shape[t]);for(let e=n+1;e<t.rank;e++)s.push(t.shape[e]),o*=t.shape[e];return{batchSize:i,sliceSize:o,dimSize:r,outputShape:s}}const If=Hh({gather_:function(t,e,n=0){const r=Vh(t,"x","gather"),s=Vh(e,"indices","gather","int32"),i={x:r,indices:s},o={axis:n};return Mh.runKernelFunc(((t,e)=>{const i=zc(n,r.shape)[0],o=$f(r,s,i),a=t.gather(r,vp(s,[s.size]),i);return e([r,s]),vp(a,o.outputShape)}),i,null,bu,o)}}),Sf=Hh({greater_:function(t,e){let n=Vh(t,"a","greater"),r=Vh(e,"b","greater");[n,r]=Rh(n,r),df(n.shape,r.shape);const s={a:n,b:r};return Mh.runKernelFunc((t=>t.greater(n,r)),s,null,"Greater")}}),Ef=Hh({greaterEqual_:function(t,e){let n=Vh(t,"a","greaterEqual"),r=Vh(e,"b","greaterEqual");[n,r]=Rh(n,r),df(n.shape,r.shape);const s={a:n,b:r};return Mh.runKernelFunc(((t,e)=>{const s=t.greaterEqual(n,r);return e([n,r]),s}),s,null,xu)}}),Cf=Hh({imag_:function(t){const e=Vh(t,"input","imag"),n={input:e};return Mh.runKernelFunc((t=>t.imag(e)),n,null,"Imag")}}),Nf=Hh({maximum_:function(t,e){let n=Vh(t,"a","maximum"),r=Vh(e,"b","maximum");[n,r]=Rh(n,r),"bool"===n.dtype&&(n=Nd(n,"int32"),r=Nd(r,"int32")),df(n.shape,r.shape);const s={a:n,b:r};return Mh.runKernelFunc(((t,e)=>{const s=t.maximum(n,r);return e([n,r]),s}),s,null,Cu)}}),Rf=Hh({mul_:function(t,e){let n=Vh(t,"a","mul"),r=Vh(e,"b","mul");[n,r]=Rh(n,r);const s={a:n,b:r};return Mh.runKernelFunc(((t,e)=>{const s=t.multiply(n,r);return e([n,r]),s}),s,null,Tu)}}),Af=Hh({leakyRelu_:function(t,e=.2){const n=Vh(t,"x","leakyRelu");return Nf(Rf(up(e),n),n)}}),Tf=Hh({log_:function(t){const e=Vh(t,"x","log"),n={x:e};return Mh.runKernelFunc(((t,n)=>{const r=t.log(e);return n([e]),r}),n,null,"Log")}}),Df=Hh({exp_:function(t){const e=Vh(t,"x","exp"),n={x:e};return Mh.runKernelFunc(((t,n)=>{const r=t.exp(e);return n([r]),r}),n,null,"Exp")}}),Ff=Hh({max_:function(t,e=null,n=!1){const r=Vh(t,"x","max"),s={x:r},i={reductionIndices:e,keepDims:n};return Mh.runKernelFunc(((t,s)=>{let i=zc(e,r.shape);const o=bp(i,r.rank);let a=r;null!=o&&(a=kp(r,o),i=wp(i.length,a.rank));const l=t.max(a,i);null!=o&&a.dispose();let u=l;if(n){const t=mp(u.shape,zc(e,r.shape));u=vp(u,t),l.dispose()}return s([r,u]),u}),s,null,Eu,i)}}),_f=Hh({sub_:function(t,e){let n=Vh(t,"a","sub"),r=Vh(e,"b","sub");[n,r]=Rh(n,r);const s={a:n,b:r};return Mh.runKernelFunc(((t,e)=>{const s=t.subtract(n,r);return e([n,r]),s}),s,null,"Sub")}}),Of=Hh({sum_:function(t,e=null,n=!1){let r=Vh(t,"x","sum");"bool"===r.dtype&&(r=Nd(r,"int32"));const s={x:r},i={axis:e,keepDims:n};return Mh.runKernelFunc(((t,s)=>{s([r]);const i=zc(e,r.shape),o=bp(i,r.rank);let a=i,l=r;null!=o&&(l=kp(r,o),a=wp(a.length,r.rank));let u=t.sum(l,a);if(n){const t=mp(u.shape,i);u=vp(u,t)}return u}),s,null,"Sum",i)}}),Mf=Hh({logSoftmax_:function(t,e=-1){const n=Vh(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const r={logits:n},s={axis:e};return Mh.runKernelFunc(((n,r)=>{const s=Ff(t,e,!0),i=_f(t,s),o=_f(Nd(i,"float32"),Tf(Of(Df(i),e,!0)));return r([o]),o}),r,null,Su,s)}}),Bf=Hh({logicalAnd_:function(t,e){const n=Vh(t,"a","logicalAnd","bool"),r=Vh(e,"b","logicalAnd","bool");df(n.shape,r.shape);const s={a:n,b:r};return Mh.runKernelFunc((t=>t.logicalAnd(n,r)),s,null,"LogicalAnd")}}),Lf=Hh({maxPool_:function(t,e,n,r,s){const i=Vh(t,"x","maxPool");let o=i,a=!1;3===i.rank&&(a=!0,o=vp(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Rc(4===o.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`)),Rc(Bp(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=s&&Rc(Oc(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:o},u={filterSize:e,strides:n,pad:r,dimRoundingMode:s},c=Mh.runKernelFunc(((t,i)=>{const a=Cp(o.shape,e,n,1,r,s);let l;return l=1===a.filterWidth&&1===a.filterHeight&&_c(a.inShape,a.outShape)?o.clone():t.maxPool(o,a),i([o,l]),l}),l,null,Nu,u);return a?vp(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),zf=Hh({maxPool3d_:function(t,e=[1,1,1],n,r,s,i="NDHWC",o){null==o?o=[1,1,1]:np("dilations is deprecated, this field will be gone in v3.0.0.");const a=Vh(t,"x","maxPool3d");let l=a,u=!1;4===a.rank&&(u=!0,l=vp(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),Rc(5===l.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`)),Rc("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),Rc(Bp(n,o),(()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`)),null!=s&&Rc(Oc(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const c={x:l},h={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:i,dilations:o},d=Mh.runKernelFunc(((t,a)=>{null==o&&(o=[1,1,1]);const u=Np(l.shape,e,n,o,r,s,i),c=t.maxPool3d(l,u);return a([l,c]),c}),c,null,Ru,h);return u?vp(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});function Pf(t,e="float32"){if("complex64"===e){const e=Pf(t,"float32"),n=Pf(t,"float32");return Kh(e,n)}const n=eh(Fc(t),e);return Mh.makeTensor(n,t,e)}function Wf(t,e="float32"){if("complex64"===e){const e=Wf(t,"float32"),n=Pf(t,"float32");return Kh(e,n)}const n=th(Fc(t),e);return Mh.makeTensor(n,t,e)}const Uf=Hh({mean_:function(t,e=null,n=!1){const r=Vh(t,"x","mean"),s=zc(e,r.shape),i=Fc(gp(r.shape,s)[1]);return lp((t=>{const r=up(i),o=r.dtype===t.dtype?t:Nd(t,r.dtype),a=lf(o,r);return{value:Of(a,e,n),gradFunc:e=>{const n=t.shape.slice();s.forEach((t=>{n[t]=1}));const r=vp(e,n);return lf(Rf(r,Wf(t.shape,"float32")),i)}}}))(r)}}),Vf=Hh({min_:function(t,e=null,n=!1){const r=Vh(t,"x","min"),s={x:r},i={axis:e,keepDims:n};return Mh.runKernelFunc(((t,s)=>{const i=zc(e,r.shape);let o=i;const a=bp(o,r.rank);let l=r;null!=a&&(l=kp(r,a),o=wp(o.length,r.rank));const u=t.min(l,o);null!=a&&l.dispose();let c=u;if(n){const t=mp(c.shape,i);c=vp(u,t),u.dispose()}return s([r,c]),c}),s,null,"Min",i)}}),Gf=Hh({minimum_:function(t,e){let n=Vh(t,"a","minimum"),r=Vh(e,"b","minimum");[n,r]=Rh(n,r),"bool"===n.dtype&&(n=Nd(n,"int32"),r=Nd(r,"int32")),df(n.shape,r.shape);const s={a:n,b:r};return Mh.runKernelFunc(((t,e)=>{const s=t.minimum(n,r);return e([n,r]),s}),s,null,Au)}}),Hf=Hh({square_:function(t){const e=Vh(t,"x","square"),n=[e];return Mh.runKernelFunc(((t,n)=>(n([e]),t.square(e))),{x:e},null,"Square",{},n,[])}}),Kf=Hh({moments_:function(t,e=null,n=!1){const r=zc(e,(t=Vh(t,"x","moments")).shape),s=Uf(t,r,n);let i=s.shape;n||(i=mp(s.shape,r));const o=Hf(_f(Nd(t,"float32"),vp(s,i)));return{mean:s,variance:Uf(o,r,n)}}}),qf=Hh({neg_:function(t){const e=Vh(t,"x","neg"),n={x:e};return Mh.runKernelFunc((t=>t.neg(e)),n,null,Du)}}),jf=Hh({notEqual_:function(t,e){let n=Vh(t,"a","notEqual"),r=Vh(e,"b","notEqual");[n,r]=Rh(n,r),df(n.shape,r.shape);const s={a:n,b:r};return Mh.runKernelFunc((t=>t.notEqual(n,r)),s,null,"NotEqual")}}),Xf=Hh({oneHot_:function(t,e,n=1,r=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const s=Vh(t,"indices","oneHot","int32"),i=[...s.shape,e],o={indices:s},a={depth:e,onValue:n,offValue:r};return Mh.runKernelFunc(((t,o)=>(o([s]),vp(t.oneHot(vp(s,[s.size]),e,n,r),i))),o,null,Bu,a)}}),Yf=Hh({real_:function(t){const e=Vh(t,"input","real"),n={input:e};return Mh.runKernelFunc((t=>t.real(e)),n,null,"Real")}}),Jf=Hh({zerosLike_:function(t){const e=Vh(t,"x","zerosLike"),n={x:e};return Mh.runKernelFunc((t=>t.zerosLike(e)),n,null,pc)}}),Zf=Hh({onesLike_:function(t){const e=Vh(t,"x","onesLike"),n={x:e};return Mh.runKernelFunc(((t,n)=>{if("complex64"===e.dtype){const t=Zf(Yf(e)),n=Jf(Cf(e));return Kh(t,n)}return t.onesLike(e)}),n,null,Mu)}}),Qf=Hh({pad_:function(t,e,n=0){const r=Vh(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:n},i={x:r};return Mh.runKernelFunc(((t,s)=>(s([r]),t.pad(r,e,n))),i,null,Lu,s)}}),tg=Hh({prelu_:function(t,e){const n=Vh(t,"x","prelu"),r=Vh(e,"alpha","prelu"),s={x:n,alpha:r};return Mh.runKernelFunc(((t,e)=>{const s=t.prelu(n,r);return e([n,r]),s}),s,null,zu)}});var eg=n(377);class ng{constructor(t,e,n,r,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=eg.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,s,i;do{r=2*this.random()-1,s=2*this.random()-1,i=r*r+s*s}while(i>=1||0===i);const o=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*r*o,e=this.mean+this.stdDev*s*o,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class rg{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=eg.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const sg=Hh({randomNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const i=new ng(e,n,r,!1,s),o=Cd(t,r);for(let t=0;t<o.values.length;t++)o.values[t]=i.nextValue();return o.toTensor()}}),ig=Hh({randomUniform_:function(t,e=0,n=1,r="float32",s){const i=Cd(t,r),o=new rg(e,n,null,s);for(let t=0;t<i.values.length;t++)i.values[t]=o.nextValue();return i.toTensor()}});function og(t,e){Tc(t);const n=Ph(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return qh(t,null,n,e)}function ag(t,e,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:r};return Mh.runKernelFunc((()=>{if(t===e||t<e&&n<0||e<t&&n>1)return Pf([0],r);const s=eh(Math.abs(Math.ceil((e-t)/n)),r);e<t&&1===n&&(n=-1),s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+n;return og(s,r)}),{},null,"Range",s)}const lg=Hh({relu_:function(t){const e=Vh(t,"x","relu"),n={x:e};return Mh.runKernelFunc(((t,n)=>(n([e]),"bool"===e.dtype?Nd(e,"int32"):t.relu(e))),n,null,Wu)}}),ug=Hh({reverse_:function(t,e){const n=Vh(t,"x","reverse"),r={x:n},s={dims:e};return Mh.runKernelFunc((t=>{const r=zc(e,n.shape);if(0===n.rank)return Rd(n);const s=t.reverse(n,r);return vp(s,n.shape)}),r,null,Ku,s)}}),cg=Hh({selu_:function(t){const e=Vh(t,"x","selu"),n={x:e};return Mh.runKernelFunc(((t,n)=>{const r=t.selu(e);return n([e]),r}),n,null,Yu)}}),hg=Hh({separableConv2d_:function(t,e,n,r,s,i=[1,1],o="NHWC"){const a=Vh(t,"x","separableConv2d"),l=Vh(e,"depthwiseFilter","separableConv2d"),u=Vh(n,"pointwiseFilter","separableConv2d");let c=a,h=!1;if(3===a.rank&&(h=!0,c=vp(a,[1,a.shape[0],a.shape[1],a.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Rc(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),Rc(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),Rc(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),Rc(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),Rc(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];Rc(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=of(c,l,r,s,o,i),g=tf(f,u,1,"valid",o);return h?vp(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),dg=Hh({sigmoid_:function(t){const e=Vh(t,"x","sigmoid"),n={x:e};return Mh.runKernelFunc(((t,n)=>{const r=t.sigmoid(e);return n([r]),r}),n,null,tc)}}),pg=Hh({slice_:function(t,e,n){const r=Vh(t,"x","slice");if(0===r.rank)throw new Error("Slicing scalar is not possible");const[s,i]=Zd(r,e,n);Ld(r,s,i);const o={x:r},a={begin:e,size:n};return Mh.runKernelFunc(((t,e)=>(e([r]),t.slice(r,s,i))),o,null,Ju,a)}}),fg=Hh({slice1d_:function(t,e,n){const r=Vh(t,"x","slice1d");return Rc(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),pg(r,[e],[n])}}),gg=Hh({slice2d_:function(t,e,n){const r=Vh(t,"x","slice2d");return Rc(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),pg(r,e,n)}}),mg=Hh({slice3d_:function(t,e,n){const r=Vh(t,"x","slice3d");return Rc(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),pg(r,e,n)}}),yg=Hh({slice4d_:function(t,e,n){const r=Vh(t,"x","slice4d");return Rc(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),pg(r,e,n)}}),bg=Hh({softmax_:function(t,e=-1){const n=Vh(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r={logits:n},s={dim:e};return Mh.runKernelFunc(((t,r)=>{const s=t.softmax(n,e);return r([s]),s}),r,null,ic,s)}}),xg=Hh({softplus_:function(t){const e=Vh(t,"x","softplus"),n={x:e};return Mh.runKernelFunc(((t,n)=>{const r=t.softplus(e);return n([e]),r}),n,null,ec)}});function wg(t,e,n=0){let r=[];if("number"==typeof e)Rc(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(e).fill(t.shape[n]/e);else{Rc(e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0)<=1,(()=>"There should be only one negative value in split array."));const s=e.indexOf(-1);if(-1!==s){const r=e.reduce(((t,e)=>e>0?t+e:t));e[s]=t.shape[n]-r}Rc(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=e}return r}const vg=Hh({split_:function(t,e,n=0){const r=Vh(t,"x","split"),s={x:r},i={numOrSizeSplits:e,axis:n};return Mh.runKernelFunc(((t,s)=>{const i=zc(n,r.shape)[0],o=wg(r,e,i);return t.split(r,o,i)}),s,null,sc,i)}}),kg=Hh({sqrt_:function(t){const e=Vh(t,"x","sqrt"),n={x:e};return Mh.runKernelFunc(((t,n)=>{const r=t.sqrt(e);return n([e]),r}),n,null,nc)}}),$g=Hh({squeeze_:function(t,e){const n=Vh(t,"x","squeeze");return vp(n,Pc(n.shape,e).newShape)}}),Ig=Hh({stack_:function(t,e=0){const n=Gh(t,"tensors","stack");if(Rc(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),1===n.length)return ff(n[0],e);const r=n[0].rank,s=n[0].shape,i=n[0].dtype;Rc(e<=r,(()=>"Axis must be <= rank of the tensor")),n.forEach((t=>{Ac(s,t.shape,"All tensors passed to stack must have matching shapes"),Rc(i===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=n.map((t=>ff(t,e)));return Xp(o,e)}}),Sg=Hh({tanh_:function(t){const e=Vh(t,"x","tanh"),n={x:e};return Mh.runKernelFunc(((t,n)=>{const r=t.tanh(e);return n([r]),r}),n,null,lc)}}),Eg=Hh({truncatedNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const i=new ng(e,n,r,!0,s),o=Cd(t,r);for(let t=0;t<o.values.length;t++)o.values[t]=i.nextValue();return o.toTensor()}}),Cg=Hh({unstack_:function(t,e=0){const n=Vh(t,"x","unstack");Rc(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`)),e<0&&(e+=n.shape.length);const r={value:n},s={axis:e};return Mh.runKernelFunc((t=>t.unstack(n,e)),r,null,hc,s)}}),Ng=Hh({broadcastTo_:function(t,e){let n=Vh(t,"broadcastTo","x");const r=n.shape;if(e.some((t=>!(t>0)||t%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=vp(n,t)}const s=n.shape,i=Array.from(e);for(let t=e.length-1;t>=0;t--)if(s[t]===e[t])i[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(0===i.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return Rd(n);const o={x:n},a={shape:e,inputShape:s};return Mh.runKernelFunc((t=>t.tile(n,i)),o,null,tu,a)}}),Rg=Hh({where_:function(t,e,n){const r=Vh(e,"a","where"),s=Vh(n,"b","where"),i=Vh(t,"condition","where","bool"),o=df(r.shape,s.shape),a=Ng(r,o),l=Ng(s,o);1===i.rank&&Rc(i.shape[0]===r.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==i.rank&&Ac(i.shape,l.shape,"Error in where: ");const u={condition:i,t:a,e:l};return Mh.runKernelFunc(((t,e)=>{const n=t.select(i,a,l);return e([i]),n}),u,null,Xu)}}),Ag=Hh({dropout_:function(t,e,n,r){const s=Vh(t,"x","dropout");if(Rc("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),Rc(e>=0&&e<1,(()=>`rate must be a float in the range [0, 1), but got ${e}.`)),0===e)return t instanceof xh?s.clone():s;const i=function(t,e){if(null==e)return t.shape.slice();if(_c(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(s,n),o=1-e,a=lf(bf(dp(ig(i,0,1,"float32",r),o)),o);return Rf(s,a)}}),Tg=Hh({fft_:function(t){Rc("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return Mh.runKernelFunc((e=>{const n=t.shape[t.shape.length-1],r=t.size/n,s=t.as2D(r,n);return e.fft(s).reshape(t.shape)}),e,null,"FFT")}}),Dg=Hh({rfft_:function(t,e){Rc("float32"===t.dtype,(()=>`The dtype for rfft() must be real value but got ${t.dtype}`));let n=t.shape[t.shape.length-1];const r=t.size/n;let s;if(null!=e&&e<n){const r=t.shape.map((t=>0)),i=t.shape.map((t=>t));i[t.shape.length-1]=e,s=pg(t,r,i),n=e}else if(null!=e&&e>n){const r=t.shape.map((t=>t));r[t.shape.length-1]=e-n,s=Xp([t,Pf(r)],t.shape.length-1),n=e}else s=t;const i=Jf(s),o=vp(Kh(s,i),[r,n]),a=Tg(o),l=Math.floor(n/2)+1,u=Yf(a),c=Cf(a),h=vg(u,[l,n-l],u.shape.length-1),d=vg(c,[l,n-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,vp(Kh(h[0],d[0]),p)}}),Fg=Hh({ifft_:function(t){Rc("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return Mh.runKernelFunc((e=>{const n=t.shape[t.shape.length-1],r=t.size/n,s=vp(t,[r,n]),i=e.ifft(s);return vp(i,t.shape)}),e,null,"IFFT")}}),_g=Hh({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let r;if(e<=2){const s=vp(t,[n,e]);r=Fg(s)}else{const s=[n,2*(e-1)],i=vp(Yf(t),[n,e]),o=vp(Cf(t),[n,e]),a=ug(pg(i,[0,1],[n,e-2]),1),l=Rf(ug(pg(o,[0,1],[n,e-2]),1),up(-1)),u=Xp([i,a],1),c=Xp([o,l],1),h=vp(Kh(u,c),[s[0],s[1]]);r=Fg(h)}if(r=Yf(r),3===t.rank&&0!==t.shape[0]){const e=r,n=t.shape[0];r=vp(r,[n,r.shape[0]/n,r.shape[1]]),e.dispose()}return r}}),Og=Hh({conv2DBackpropFilter_:function(t,e,n,r,s,i="NHWC",o){let a=t;3===t.rank&&(a=vp(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=vp(e,[1,e.shape[0],e.shape[1],e.shape[2]])),Rc(4===a.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`)),Rc(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),Rc(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===i?a.shape[3]:a.shape[1],c="NHWC"===i?l.shape[3]:l.shape[1];Rc(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),Rc(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=o&&Rc(Oc(s),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`));const h={x:a,dy:l},d={strides:r,pad:s,dataFormat:i,dimRoundingMode:o};return Mh.runKernelFunc((t=>{const e=Lp(i),u=Rp(a.shape,n,r,1,s,o,!1,e);return t.conv2dDerFilter(a,l,u)}),h,null,"Conv2DBackpropFilter",d)}}),Mg=Hh({relu6_:function(t){const e=Vh(t,"x","relu6"),n={x:e};return Mh.runKernelFunc(((t,n)=>(n([e]),"bool"===e.dtype?Nd(e,"int32"):t.relu6(e))),n,null,Hu)}}),Bg=Hh({step_:function(t,e=0){const n=Vh(t,"x","step"),r={x:n},s={alpha:e};return Mh.runKernelFunc((t=>t.step(n,e)),r,null,fc,s)}});function Lg(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Rf(t,Bg(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function zg(t,e){let n=e;const r=hf(t.shape,e.shape);return r.length>0&&(n=Of(n,r)),vp(n,t.shape)}function Pg(t,e,n){if("linear"===e)return t;if("relu"===e)return lg(t);if("elu"===e)return uf(t);if("relu6"===e)return Mg(t);if("prelu"===e)return tg(t,n);throw new Error(`Unknown fused activation ${e}.`)}const Wg=(t,e)=>!(t>0)||"linear"===e,Ug=Hh({fusedConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:a,activation:l="linear",preluActivationWeights:u}){if(l=l||"linear",!1===Wg(Mh.state.gradientDepth,l)){let c=tf(t,e,n,r,s,i,o);return null!=a&&(c=dp(c,a)),Pg(c,l,u)}const c=Vh(t,"x","conv2d"),h=Vh(e,"filter","conv2d");let d=c,p=!1;3===c.rank&&(p=!0,d=vp(c,[1,c.shape[0],c.shape[1],c.shape[2]])),Rc(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),Rc(4===h.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`)),null!=o&&Rc(Oc(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`)),Rc(d.shape[3]===h.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${h.shape[2]}.`)),Rc(Bp(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),Rc("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const f=Rp(d.shape,h.shape,n,i,r,o);let g,m;null!=a&&(g=Vh(a,"bias","fused conv2d"),[g]=Rh(g,c),df(f.outShape,g.shape)),null!=u&&(m=Vh(u,"prelu weights","fused conv2d"));const y=(t,e)=>{const[s,o,a,u]=e,c=Lg(t,a,l);Rc(Mp(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const h=[nf(o.shape,c,s,n,r),Og(o,c,s.shape,n,r)];if(null!=u){const t=zg(u,c);h.push(t)}return h},b=t=>t.fusedConv2d({input:d,filter:h,convInfo:f,bias:g,activation:l,preluActivationWeights:m}),x={x:d,filter:h,bias:g,preluActivationWeights:m},w={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:o,activation:l};return null==a?lp(((t,e,n)=>{let r=Mh.runKernelFunc(b,x,null,yc,w);return n([e,t,r]),p&&(r=vp(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}))(d,h):lp(((t,e,n,r)=>{let s=Mh.runKernelFunc(b,x,null,yc,w);return r([e,t,s,n]),p&&(s=vp(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}))(d,h,g)}}),Vg=Hh({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,r){let s=t;3===t.rank&&(s=vp(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let i=e;3===i.rank&&(i=vp(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const o={x:s,dy:i};return Mh.runKernelFunc((t=>t.depthwiseConv2DDerFilter(s,i,r)),o,null,"DepthwiseConv2dNativeBackpropFilter")}}),Gg=Hh({depthwiseConv2dNativeBackpropInput_:function(t,e,n,r){let s=e,i=!1;3===e.rank&&(i=!0,s=vp(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const o={dy:s},a=Mh.runKernelFunc((t=>t.depthwiseConv2DDerInput(s,n,r)),o,null,"DepthwiseConv2dNativeBackpropInput");return i?vp(a,[a.shape[1],a.shape[2],a.shape[3]]):a}});Hh({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:a,activation:l="linear",preluActivationWeights:u}){if(!1===Wg(Mh.state.gradientDepth,l)){let c=of(t,e,n,r,s,i,o);return null!=a&&(c=dp(c,a)),Pg(c,l,u)}const c=Vh(t,"x","depthwiseConv2d"),h=Vh(e,"filter","depthwiseConv2d");let d=c,p=!1;3===c.rank&&(p=!0,d=vp(c,[1,c.shape[0],c.shape[1],c.shape[2]])),Rc(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),Rc(4===h.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`)),Rc(d.shape[3]===h.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`)),null==i&&(i=[1,1]),Rc(Bp(n,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=o&&Rc(Oc(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${o} but got pad ${r}.`));const f=Rp(d.shape,h.shape,n,i,r,o,!0);let g,m;null!=a&&(g=Vh(a,"bias","fused conv2d"),[g]=Rh(g,c),df(f.outShape,g.shape)),null!=u&&(m=Vh(u,"prelu weights","fused depthwiseConv2d"));const y=(t,e)=>{Rc(Mp(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[n,r,s,o]=e,a=Lg(t,s,l),u=Gg(r.shape,a,n,f),c=Vg(r,a,n.shape,f);return null!=o?[u,c,zg(g,a)]:[u,c]},b=t=>t.fusedDepthwiseConv2D({input:d,filter:h,convInfo:f,bias:g,activation:l,preluActivationWeights:m}),x={x:d,filter:h,bias:g,preluActivationWeights:m},w={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:o,activation:l};return null==a?lp(((t,e,n)=>{let r=Mh.runKernelFunc(b,x,null,bc,w);return n([e,t,r]),p&&(r=vp(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}))(d,h):lp(((t,e,n,r)=>{let s=Mh.runKernelFunc(b,x,null,bc,w);return r([e,t,s,n]),p&&(s=vp(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}))(d,h,g)}});const Hg=Hh({matMul_:function(t,e,n=!1,r=!1){let s=Vh(t,"a","matMul"),i=Vh(e,"b","matMul");[s,i]=Rh(s,i),Rc(s.rank>=2&&i.rank>=2&&s.rank===i.rank,(()=>`Error in matMul: inputs must have the same rank of at least 2, got ranks ${s.rank} and ${i.rank}.`));const o=n?s.shape[s.rank-2]:s.shape[s.rank-1],a=r?i.shape[i.rank-1]:i.shape[i.rank-2],l=n?s.shape[s.rank-1]:s.shape[s.rank-2],u=r?i.shape[i.rank-2]:i.shape[i.rank-1],c=s.shape.slice(0,-2),h=i.shape.slice(0,-2),d=Fc(c),p=Fc(h);Rc(_c(c,h),(()=>`Error in matMul: outer dimensions (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${i.shape} must match.`)),Rc(o===a,(()=>`Error in matMul: inner shapes (${o}) and (${a}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${n} and transposeB=${r} must match.`));const f=s.shape.slice(0,-2).concat([l,u]),g=vp(s,n?[d,o,l]:[d,l,o]),m=vp(i,r?[p,u,a]:[p,a,u]),y={a:g,b:m},b={transposeA:n,transposeB:r},x=Mh.runKernelFunc(((t,e)=>(e([g,m]),t.batchMatMul(g,m,n,r))),y,null,Zl,b);return vp(x,f)}}),Kg=Hh({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:s,activation:i="linear",preluActivationWeights:o}){if(!1===Wg(Mh.state.gradientDepth,i)){let a=Hg(t,e,n,r);return null!=s&&(a=dp(a,s)),Pg(a,i,o)}let a=Vh(t,"a","fused matMul"),l=Vh(e,"b","fused matMul");[a,l]=Rh(a,l);const u=n?a.shape[a.rank-2]:a.shape[a.rank-1],c=r?l.shape[l.rank-1]:l.shape[l.rank-2],h=n?a.shape[a.rank-1]:a.shape[a.rank-2],d=r?l.shape[l.rank-2]:l.shape[l.rank-1],p=a.shape.slice(0,-2),f=l.shape.slice(0,-2),g=Fc(p),m=Fc(f);Rc(a.rank>=2&&l.rank>=2&&a.rank===l.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${a.rank} and ${l.rank}.`)),Rc(_c(p,f),(()=>`Error in fused matMul: outer dimensions (${p}) and (${f}) of Tensors with shapes ${a.shape} and ${l.shape} must match.`)),Rc(u===c,(()=>`Error in fused matMul: inner shapes (${u}) and (${c}) of Tensors with shapes ${a.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=a.shape.slice(0,-2).concat([h,d]),b=vp(a,n?[g,u,h]:[g,h,u]),x=vp(l,r?[m,d,c]:[m,c,d]);let w,v;null!=s&&(w=Vh(s,"bias","fused matMul"),[w]=Rh(w,a),df(y,w.shape)),null!=o&&(v=Vh(o,"prelu weights","fused matMul"));const k=(t,e)=>{const[o,a,l,u]=e,c=Lg(vp(t,l.shape),l,i);let h,d;return n||r?!n&&r?(h=Hg(c,a,!1,!1),d=Hg(c,o,!0,!1)):n&&!r?(h=Hg(a,c,!1,!0),d=Hg(o,c,!1,!1)):(h=Hg(a,c,!0,!0),d=Hg(c,o,!0,!0)):(h=Hg(c,a,!1,!0),d=Hg(o,c,!0,!1)),null!=s?[h,d,zg(u,c)]:[h,d]},$=t=>t.fusedBatchMatMul({a:b,b:x,transposeA:n,transposeB:r,bias:w,activation:i,preluActivationWeights:v}),I={a:b,b:x,bias:w,preluActivationWeights:v},S={transposeA:n,transposeB:r,activation:i};return null==s?lp(((t,e,n)=>{const r=Mh.runKernelFunc($,I,null,mc,S);return n([t,e,r]),{value:vp(r,y),gradFunc:k}}))(b,x):lp(((t,e,n,r)=>{const s=Mh.runKernelFunc($,I,null,mc,S);return r([t,e,s,n]),{value:vp(s,y),gradFunc:k}}))(b,x,w)}});function qg(t,e,n){const r=1-t%2,s=new Float32Array(t);for(let i=0;i<t;++i){const o=2*Math.PI*i/(t+r-1);s[i]=e-n*Math.cos(o)}return og(s,"float32")}Hh({hammingWindow_:function(t){return qg(t,.54,.46)}});const jg=Hh({hannWindow_:function(t){return qg(t,.5,.5)}});function Xg(t,e,n){if(Tc(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Ph(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return qh(t,e,r,n)}const Yg=Hh({frame_:function(t,e,n,r=!1,s=0){let i=0;const o=[];for(;i+e<=t.size;)o.push(pg(t,i,e)),i+=n;if(r)for(;i<t.size;){const r=i+e-t.size,a=Xp([pg(t,i,e-r),yf([r],s)]);o.push(a),i+=n}return 0===o.length?Xg([],[0,e]):vp(Xp(o),[o.length,e])}});function Jg(t,e,n,r,s,i){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==i&&(i=0);const o=t.shape[0];return n=Math.min(n,o),Rc(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),Rc(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),Rc(4===t.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`)),Rc(1===e.rank,(()=>"scores must be a 1D tensor")),Rc(e.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${e.shape[0]}`)),Rc(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:i}}function Zg(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,s=t.length,i=0,o=!1;for(;r<s;){i=r+(s-r>>>1);const a=n(e,t[i]);a>0?r=i+1:(s=i,o=!a)}return o?r:-r-1}(t,e,n||Qg)}(t,e,n),s=r<0?-(r+1):r;t.splice(s,0,e)}function Qg(t,e){return t>e?1:t<e?-1:0}function tm(t,e,n,r,s,i,o=!1,a=!1,l=!1){const u=[];for(let t=0;t<e.length;t++)e[t]>s&&u.push({score:e[t],boxIndex:t,suppressBeginIndex:0});u.sort(rm);const c=i>0?-.5/i:0,h=[],d=[];for(;h.length<n&&u.length>0;){const e=u.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=e;if(n<s)break;let a=!1;for(let n=h.length-1;n>=o;--n){const o=em(t,i,h[n]);if(o>=r){a=!0;break}if(e.score=e.score*nm(r,c,o),e.score<=s)break}e.suppressBeginIndex=h.length,a||(e.score===n?(h.push(i),d.push(e.score)):e.score>s&&Zg(u,e,rm))}const p=h.length,f=n-p;a&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:og(h,"int32")};return o&&(g.selectedScores=og(d,"float32")),l&&(g.validOutputs=up(p,"int32")),g}function em(t,e,n){const r=t.subarray(4*e,4*e+4),s=t.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),a=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(a-i)*(l-o),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(i,u),m=Math.max(o,c),y=Math.min(a,h),b=Math.min(l,d),x=Math.max(y-g,0)*Math.max(b-m,0);return x/(p+f-x)}function nm(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function rm(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}Hh({stft_:function(t,e,n,r,s=jg){var i;null==r&&(i=e,r=Math.floor(Math.pow(2,Math.ceil(Math.log(i)/Math.log(2)))));const o=Yg(t,e,n),a=Rf(o,s(e)),l=[];for(let t=0;t<o.shape[0];t++)l.push(Dg(pg(a,[t,0],[1,e]),r));return Xp(l)}}),Hh({cropAndResize_:function(t,e,n,r,s,i){const o=Vh(t,"image","cropAndResize"),a=Vh(e,"boxes","cropAndResize","float32"),l=Vh(n,"boxInd","cropAndResize","int32");s=s||"bilinear",i=i||0;const u=a.shape[0];Rc(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),Rc(2===a.rank&&4===a.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${a.shape}.`)),Rc(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${a.shape}.`)),Rc(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),Rc(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),Rc("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:o,boxes:a,boxInd:l},h={method:s,extrapolationValue:i,cropSize:r};return Mh.runKernelFunc((t=>t.cropAndResize(o,a,l,r,s,i)),c,null,"CropAndResize",h)}}),Hh({flipLeftRight_:function(t){const e=Vh(t,"image","flipLeftRight","float32");Rc(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return Mh.runKernel(fu,n,{})}}),Hh({rotateWithOffset_:function(t,e,n=0,r=.5){const s=Vh(t,"image","rotateWithOffset","float32");Rc(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const i={image:s},o={radians:e,fillValue:n,center:r};return Mh.runKernel(gc,i,o)}}),Hh({nonMaxSuppression_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=Vh(t,"boxes","nonMaxSuppression"),o=Vh(e,"scores","nonMaxSuppression"),a=Jg(i,o,n,r,s);n=a.maxOutputSize,r=a.iouThreshold,s=a.scoreThreshold;const l={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return Mh.runKernelFunc((t=>t.nonMaxSuppression(i,o,n,r,s)),{boxes:i,scores:o},null,Fu,l)}}),Hh({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const o=Vh(t,"boxes","nonMaxSuppression"),a=Vh(e,"scores","nonMaxSuppression"),l=Jg(o,a,n,r,s,i),u={boxes:o,scores:a},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:i=l.softNmsSigma},h=Mh.runKernel(Ou,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Hh({nonMaxSuppressionPadded_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const o=Vh(t,"boxes","nonMaxSuppression"),a=Vh(e,"scores","nonMaxSuppression"),l=Jg(o,a,n,r,s,null),u={boxes:o,scores:a},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:i},h=Mh.runKernel(_u,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const sm=Hh({resizeBilinear_:function(t,e,n=!1){const r=Vh(t,"images","resizeBilinear");Rc(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),Rc(2===e.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`));let s=r,i=!1;3===r.rank&&(i=!0,s=vp(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[o,a]=e,l={images:s},u={alignCorners:n,size:e},c=Mh.runKernelFunc(((t,e)=>(e([s]),t.resizeBilinear(s,o,a,n))),l,null,Gu,u);return i?vp(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),im=Hh({resizeNearestNeighbor_:function(t,e,n=!1){const r=Vh(t,"images","resizeNearestNeighbor");Rc(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),Rc(2===e.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`)),Rc("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype"));let s=r,i=!1;3===r.rank&&(i=!0,s=vp(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[o,a]=e,l={images:s},u={alignCorners:n,size:e},c=Mh.runKernelFunc(((t,e)=>(e([s]),t.resizeNearestNeighbor(s,o,a,n))),l,null,Vu,u);return i?vp(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),om=Hh({lessEqual_:function(t,e){let n=Vh(t,"a","lessEqual"),r=Vh(e,"b","lessEqual");[n,r]=Rh(n,r),df(n.shape,r.shape);const s={a:n,b:r};return Mh.runKernelFunc(((t,e)=>{const s=t.lessEqual(n,r);return e([n,r]),s}),s,null,"LessEqual")}}),am=Hh({bandPart_:function(t,e,n){Rc(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),Rc(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Vh(t,"a","bandPart");Rc(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[i,o]=r.shape.slice(-2);if(!(e<=i))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);e<0&&(e=i),n<0&&(n=o);const a=vp(ag(0,i,1,"int32"),[-1,1]),l=ag(0,o,1,"int32"),u=_f(a,l),c=Bf(om(u,up(+e,"int32")),Ef(u,up(-n,"int32"))),h=Pf([i,o],r.dtype);return vp(Ig(Cg(vp(r,[-1,i,o])).map((t=>Rg(c,t,h)))),s)}}),lm=Hh({pow_:function(t,e){let n=Vh(t,"base","pow"),r=Vh(e,"exp","pow");[n,r]=Rh(n,r);const s={a:n,b:r};return Mh.runKernelFunc(((t,e)=>{const s=t.pow(n,r);return e([n,r,s]),s}),s,null,"Pow")}});function um(t,e,n=null){if(0===t.rank)return hp(t);if(1!==t.rank&&null===n)return um(vp(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return Of(hp(t),n);if(e===1/0)return Ff(hp(t),n);if(e===-1/0)return Vf(hp(t),n);if("euclidean"===e||2===e)return kg(Of(lm(hp(t),up(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return Ff(Of(hp(t),n[0]),n[1]-1);if(e===1/0)return Ff(Of(hp(t),n[1]),n[0]);if(e===-1/0)return Vf(Of(hp(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return kg(Of(Hf(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const cm=Hh({norm_:function(t,e="euclidean",n=null,r=!1){const s=um(t=Vh(t,"x","norm"),e,n);let i=s.shape;if(r){const e=zc(n,t.shape);i=mp(s.shape,e)}return vp(s,i)}}),hm=Hh({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,Rc(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)Rc(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=vg(t,t.shape[0],0).map((t=>$g(t,[0])));Rc(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],r=t;for(let e=0;e<t.length;++e)n.push(Mh.tidy((()=>{let t=r[e];if(e>0)for(let r=0;r<e;++r){const e=Rf(Of(Rf(n[r],t)),n[r]);t=_f(t,e)}return lf(t,cm(t,"euclidean"))})));return e?Ig(n,0):n}});function dm(t,e=!1){return Mh.tidy((()=>{Rc(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],r=t.shape[1];let s=mf(n),i=Rd(t);const o=Xg([[1]],[1,1]);let a=Rd(o);const l=n>=r?r:n;for(let t=0;t<l;++t){const e=i,l=a,u=s;[a,i,s]=Mh.tidy((()=>{const e=pg(i,[t,t],[n-t,1]),l=cm(e),u=pg(i,[t,t],[1,1]),c=Rg(Sf(u,0),Xg([[-1]]),Xg([[1]])),h=_f(u,Rf(c,l)),d=lf(e,h);a=1===d.shape[0]?Rd(o):Xp([o,pg(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=qf(lf(Hg(c,h),l)),f=pg(i,[t,0],[n-t,r]),g=Rf(p,a),m=kp(a);if(0===t)i=_f(f,Hg(g,Hg(m,f)));else{const e=_f(f,Hg(g,Hg(m,f)));i=Xp([pg(i,[0,0],[t,r]),e],0)}const y=kp(g),b=pg(s,[0,t],[n,s.shape[1]-t]);if(0===t)s=_f(b,Hg(Hg(b,a),y));else{const e=_f(b,Hg(Hg(b,a),y));s=Xp([pg(s,[0,0],[n,t]),e],1)}return[a,i,s]})),op([e,l,u])}return!e&&n>r&&(s=pg(s,[0,0],[n,r]),i=pg(i,[0,0],[r,r])),[s,i]}))}const pm=Hh({qr_:function(t,e=!1){if(Rc(t.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`)),2===t.rank)return dm(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),r=Cg(vp(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],i=[];return r.forEach((t=>{const[n,r]=dm(t,e);s.push(n),i.push(r)})),[vp(Ig(s,0),t.shape),vp(Ig(i,0),t.shape)]}}});var fm;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(fm||(fm={}));const gm=Hh({computeWeightedLoss_:function(t,e,n=fm.SUM_BY_NONZERO_WEIGHTS){const r=Vh(t,"losses","computeWeightedLoss");let s=null;null!=e&&(s=Vh(e,"weights","computeWeightedLoss"));const i=null==s?r:Rf(r,s);if(n===fm.NONE)return i;if(n===fm.SUM)return Of(i);if(n===fm.MEAN){if(null==s)return Uf(i);{const t=r.size/s.size,e=lf(Of(i),Of(s));return t>1?lf(e,up(t)):e}}if(n===fm.SUM_BY_NONZERO_WEIGHTS){if(null==s)return lf(Of(i),up(r.size));{const t=Rf(s,Wf(r.shape)),e=Nd(Of(jf(t,up(0))),"float32");return lf(Of(i),e)}}throw Error(`Unknown reduction: ${n}`)}});Hh({absoluteDifference_:function(t,e,n,r=fm.SUM_BY_NONZERO_WEIGHTS){const s=Vh(t,"labels","absoluteDifference"),i=Vh(e,"predictions","absoluteDifference");let o=null;null!=n&&(o=Vh(n,"weights","absoluteDifference")),Ac(s.shape,i.shape,"Error in absoluteDifference: ");const a=hp(_f(s,i));return gm(a,o,r)}}),Hh({cosineDistance_:function(t,e,n,r,s=fm.SUM_BY_NONZERO_WEIGHTS){const i=Vh(t,"labels","cosineDistance"),o=Vh(e,"predictions","cosineDistance");let a=null;null!=r&&(a=Vh(r,"weights","cosineDistance")),Ac(i.shape,o.shape,"Error in cosineDistance: ");const l=up(1),u=_f(l,Of(Rf(i,o),n,!0));return gm(u,a,s)}}),Hh({hingeLoss_:function(t,e,n,r=fm.SUM_BY_NONZERO_WEIGHTS){let s=Vh(t,"labels","hingeLoss");const i=Vh(e,"predictions","hingeLoss");let o=null;null!=n&&(o=Vh(n,"weights","hingeLoss")),Ac(s.shape,i.shape,"Error in hingeLoss: ");const a=up(1);s=_f(Rf(up(2),s),a);const l=lg(_f(a,Rf(s,i)));return gm(l,o,r)}}),Hh({huberLoss_:function(t,e,n,r=1,s=fm.SUM_BY_NONZERO_WEIGHTS){const i=Vh(t,"labels","huberLoss"),o=Vh(e,"predictions","huberLoss");let a=null;null!=n&&(a=Vh(n,"weights","huberLoss")),Ac(i.shape,o.shape,"Error in huberLoss: ");const l=up(r),u=hp(_f(o,i)),c=Gf(u,l),h=_f(u,c),d=dp(Rf(up(.5),Hf(c)),Rf(l,h));return gm(d,a,s)}}),Hh({logLoss_:function(t,e,n,r=1e-7,s=fm.SUM_BY_NONZERO_WEIGHTS){const i=Vh(t,"labels","logLoss"),o=Vh(e,"predictions","logLoss");let a=null;null!=n&&(a=Vh(n,"weights","logLoss")),Ac(i.shape,o.shape,"Error in logLoss: ");const l=up(1),u=up(r),c=qf(Rf(i,Tf(dp(o,u)))),h=Rf(_f(l,i),Tf(dp(_f(l,o),u))),d=_f(c,h);return gm(d,a,s)}});const mm=Hh({squaredDifference_:function(t,e){let n=Vh(t,"a","squaredDifference"),r=Vh(e,"b","squaredDifference");[n,r]=Rh(n,r),df(n.shape,r.shape);const s={a:n,b:r};return Mh.runKernelFunc(((t,e)=>{const s=t.squaredDifference(n,r);return e([n,r]),s}),s,null,oc,{})}});Hh({meanSquaredError_:function(t,e,n,r=fm.SUM_BY_NONZERO_WEIGHTS){const s=Vh(t,"labels","meanSquaredError"),i=Vh(e,"predictions","meanSquaredError");let o=null;null!=n&&(o=Vh(n,"weights","meanSquaredError")),Ac(s.shape,i.shape,"Error in meanSquaredError: ");const a=mm(s,i);return gm(a,o,r)}});const ym=Hh({log1p_:function(t){const e=Vh(t,"x","log1p"),n={x:e};return Mh.runKernelFunc(((t,n)=>{const r=t.log1p(e);return n([e]),r}),n,null,Iu)}});Hh({sigmoidCrossEntropy_:function(t,e,n,r=0,s=fm.SUM_BY_NONZERO_WEIGHTS){let i=Vh(t,"multiClassLabels","sigmoidCrossEntropy");const o=Vh(e,"logits","sigmoidCrossEntropy");let a=null;if(null!=n&&(a=Vh(n,"weights","sigmoidCrossEntropy")),Ac(i.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=up(r),e=up(1),n=up(.5);i=dp(Rf(i,_f(e,t)),Rf(n,t))}const l=function(t,e){const n=Vh(t,"labels","sigmoidCrossEntropyWithLogits"),r=Vh(e,"logits","sigmoidCrossEntropyWithLogits");Ac(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=lg(r),i=Rf(r,n),o=ym(Df(qf(hp(r))));return dp(_f(s,i),o)}(i,o);return gm(l,a,s)}});const bm=Hh({logSumExp_:function(t,e=null,n=!1){const r=Vh(t,"x","logSumExp"),s=zc(e,r.shape),i=Ff(r,s,!0),o=_f(r,i),a=Df(o),l=Of(a,s),u=Tf(l),c=dp(vp(i,u.shape),u);if(n){const t=mp(c.shape,s);return vp(c,t)}return c}});Hh({softmaxCrossEntropy_:function(t,e,n,r=0,s=fm.SUM_BY_NONZERO_WEIGHTS){let i=Vh(t,"onehotLabels","softmaxCrossEntropy");const o=Vh(e,"logits","softmaxCrossEntropy");let a=null;if(null!=n&&(a=Vh(n,"weights","softmaxCrossEntropy")),Ac(i.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const t=up(r),e=up(1),n=up(i.shape[1]);i=dp(Rf(i,_f(e,t)),lf(t,n))}const l=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return lp(((t,e,r)=>{const s=bm(e,[n],!0),i=_f(Nd(e,"float32"),s);r([t,i]);const o=qf(Rf(i,t));return{value:Of(o,[n]),gradFunc:(t,e)=>{const[r,s]=e,i=mp(t.shape,[n]);return[Rf(vp(t,i),_f(Nd(r,"float32"),Df(s))),Rf(vp(t,i),_f(Df(s),Nd(r,"float32")))]}}}))(t,e)}(i,o);return gm(l,a,s)}});const xm={bandPart:am,gramSchmidt:hm,qr:pm};class wm extends cp{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Mh.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Mh.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:ip((()=>Jf(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:ip((()=>Jf(r).variable(!1)))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;ip((()=>{const t=dp(Rf(i,this.rho),Rf(Hf(s),1-this.rho)),e=Rf(lf(kg(dp(o,this.epsilon)),kg(dp(i,this.epsilon))),s),n=dp(Rf(o,this.rho),Rf(Hf(e),1-this.rho));i.assign(t),o.assign(n);const a=dp(Rf(e,-this.learningRate),r);r.assign(a)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(op(this.accumulatedGrads.map((t=>t.variable))),op(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}wm.className="Adadelta",ep(wm);class vm extends cp{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Mh.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:ip((()=>yf(r.shape,this.initialAccumulatorValue).variable(t)))}}const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const i=this.accumulatedGrads[n].variable;ip((()=>{const t=dp(i,Hf(s));i.assign(t);const e=dp(Rf(lf(s,kg(dp(t,Mh.backend.epsilon()))),-this.learningRate),r);r.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&op(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}vm.className="Adagrad",ep(vm);class km extends cp{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ip((()=>{this.accBeta1=up(e).variable(),this.accBeta2=up(n).variable()})),null==r&&(this.epsilon=Mh.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);ip((()=>{const n=_f(1,this.accBeta1),r=_f(1,this.accBeta2);e.forEach(((e,s)=>{const i=Mh.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:ip((()=>Jf(i).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${e}/v`,variable:ip((()=>Jf(i).variable(!1)))});const o=Array.isArray(t)?t[s].tensor:t[e];if(null==o)return;const a=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=dp(Rf(a,this.beta1),Rf(o,1-this.beta1)),c=dp(Rf(l,this.beta2),Rf(Hf(o),1-this.beta2)),h=lf(u,n),d=lf(c,r);a.assign(u),l.assign(c);const p=dp(Rf(lf(h,dp(kg(d),this.epsilon)),-this.learningRate),i);i.assign(p)})),this.accBeta1.assign(Rf(this.accBeta1,this.beta1)),this.accBeta2.assign(Rf(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&op(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&op(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),ip((()=>{this.accBeta1.assign(lm(this.beta1,this.iterations_+1)),this.accBeta2.assign(lm(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}km.className="Adam",ep(km);class $m extends cp{constructor(t,e,n,r=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ip((()=>{this.iteration=up(0).variable(),this.accBeta1=up(e).variable()})),null==r&&(this.epsilon=Mh.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);ip((()=>{const n=_f(1,this.accBeta1),r=lf(-this.learningRate,dp(Rf(this.iteration,this.decay),1));e.forEach(((e,s)=>{const i=Mh.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:Jf(i).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${e}/v`,variable:Jf(i).variable(!1)});const o=Array.isArray(t)?t[s].tensor:t[e];if(null==o)return;const a=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=dp(Rf(a,this.beta1),Rf(o,1-this.beta1)),c=Rf(l,this.beta2),h=hp(o),d=Nf(c,h);a.assign(u),l.assign(d);const p=dp(Rf(lf(r,n),lf(u,dp(d,this.epsilon))),i);i.assign(p)})),this.iteration.assign(dp(this.iteration,1)),this.accBeta1.assign(Rf(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&op(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&op(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}$m.className="Adamax",ep($m);class Im extends cp{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=Mh.registeredVariables[e];ip((()=>{const t=dp(Rf(this.c,r),s);s.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=ap(up(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}Im.className="SGD",ep(Im);class Sm extends Im{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=up(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Mh.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:ip((()=>Jf(r).variable(t)))}}const s=this.accumulations[n].variable,i=Array.isArray(t)?t[n].tensor:t[e];null!=i&&ip((()=>{let t;const e=dp(Rf(this.m,s),i);t=this.useNesterov?dp(Rf(this.c,dp(i,Rf(e,this.m))),r):dp(Rf(this.c,e),r),s.assign(e),r.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&op(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}Sm.className="Momentum",ep(Sm);class Em extends cp{constructor(t,e=.9,n=0,r=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=Mh.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Mh.registeredVariables[e],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:ip((()=>Jf(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:ip((()=>Jf(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:ip((()=>Jf(r).variable(s)))});const i=Array.isArray(t)?t[n].tensor:t[e];if(null==i)return;const o=this.accumulatedMeanSquares[n].variable,a=this.accumulatedMoments[n].variable;ip((()=>{const t=dp(Rf(o,this.decay),Rf(Hf(i),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,s=dp(Rf(e,this.decay),Rf(i,1-this.decay)),l=lf(Rf(i,this.learningRate),kg(_f(t,dp(Hf(s),this.epsilon)))),u=dp(Rf(a,this.momentum),l);o.assign(t),e.assign(s),a.assign(u);const c=_f(r,u);r.assign(c)}else{const t=dp(Rf(o,this.decay),Rf(Hf(i),1-this.decay)),e=dp(Rf(a,this.momentum),lf(Rf(i,this.learningRate),kg(dp(t,this.epsilon))));o.assign(t),a.assign(e);const n=_f(r,e);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&op(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&op(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&op(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}Em.className="RMSProp",ep(Em);class Cm{static sgd(t){return new Im(t)}static momentum(t,e,n=!1){return new Sm(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,s=!1){return new Em(t,e,n,r,s)}static adam(t=.001,e=.9,n=.999,r=null){return new km(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new wm(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,s=0){return new $m(t,e,n,r,s)}static adagrad(t,e=.1){return new vm(t,e)}}const Nm={sgd:Cm.sgd,momentum:Cm.momentum,adadelta:Cm.adadelta,adagrad:Cm.adagrad,rmsprop:Cm.rmsprop,adamax:Cm.adamax,adam:Cm.adam},Rm="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function Am(){return new Promise((t=>Rm((()=>t()))))}function Tm(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function Dm(t,e,n,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)s=s.concat([t[r+1]/e[r],e[r]]);s=s.concat(t.slice(n+1))}return s}function Fm(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<t;++r)r>=2*e+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function _m(t,e,n,r=!0){const s=[];r?s.push(t[0]/n):s.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?r?s.push(e[n-1]*t[n]):s.push(t[n]/e[n-1]):s.push(t[n]);return s}function Om(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function Mm(t,e,n){const r=t.slice(0,1);for(let s=0;s<n;++s)r.push(t[s+1]-e[s][0]-e[s][1]);return r}function Bm(t,e){if(t.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[e.rank-1]>t.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[e.rank-1]} vs. ${t.rank}`);if(0===t.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const n=e.shape,r=n[n.length-1];let s=1;for(let t=0;t<n.length-1;++t)s*=n[t];const i=t.shape,o=n.slice();o.pop();let a=1;for(let e=r;e<t.rank;++e)a*=i[e],o.push(i[e]);const l=[...Yc(t.shape).map((t=>t/a)),1].slice(0,r);return[o,s,a,l]}function Lm(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(i+` update.rank < ${s}. `);if(t.length<r+(n.rank-s))throw new Error(i+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+t.length-r)throw new Error(i+" update.rank != "+(s+t.length-r));for(let t=0;t<s;++t)if(n.shape[t]!==e.shape[t])throw new Error(i+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-s;++e)if(n.shape[e+s]!==t[e+r])throw new Error(i+` updates.shape[${e+s}] (${n.shape[e+s]}) != shape[${e+s}] (${t[e+s]})`)}function zm(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}Lm(n,e,t)}function Pm(t,e,n){const r=e.shape.length,s=r>1?e.shape[r-1]:1,i=n.length;let o=1;for(let t=s;t<i;++t)o*=n[t];const a=s<1?1:s;return{sliceRank:s,numUpdates:Fc(e.shape)/a,sliceSize:o,strides:[...Yc(n.slice(0,s)),1],outputSize:Fc(n)}}const Wm=1.7580993408473768,Um=1.0507009873554805,Vm=.3275911,Gm=.254829592,Hm=-.284496736,Km=1.421413741,qm=-1.453152027,jm=1.061405429;function Xm(...t){Ol().getBool("IS_TEST")||console.warn(...t)}function Ym(...t){Ol().getBool("IS_TEST")||console.log(...t)}function Jm(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function Zm(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function Qm(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function ty(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function ey(t,e){return{real:t[2*e],imag:t[2*e+1]}}function ny(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function ry(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const i=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(i),r[s]=Math.sin(i)}return{real:n,imag:r}}function sy(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}function iy(t,e,n){if("complex64"===e){if("complex64"===t.dtype)return t.clone();const e=Pf(t.shape),r=Nd(t,"float32"),s=n.complex(r,e);return e.dispose(),r.dispose(),s}if(r=t.dtype,"complex64"===(s=e)||"float32"===s&&"complex64"!==r||"int32"===s&&"float32"!==r&&"complex64"!==r||"bool"===s&&"bool"===r)return Mh.makeTensorFromDataId(t.dataId,t.shape,e);var r,s;if("complex64"===t.dtype){const r=n.real(t),s=Nd(r,e);return r.dispose(),s}if("int32"===e)return n.int(t);if("bool"===e){const e=up(0,t.dtype),r=n.notEqual(t,e);return e.dispose(),r}throw new Error(`Error in Cast: failed to cast ${t.dtype} to ${e}`)}function oy(t,e){return Mh.makeTensorFromDataId(t.dataId,e,t.dtype)}function ay(t,e,n){const r=(e-t)/(n-1),s=eh(n,"float32");s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+r;return og(s,"float32")}class ly{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}function uy(t){throw new Error(`'${t}' not yet implemented or not found in the registry. Did you forget to import the kernel?`)}const cy={kernelName:"Abs",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Rf(t,Bg(Nd(n,"float32"),-1))}}},hy={kernelName:Pl,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Hf(Nd(n,"float32")),r=kg(_f(up(1),e));return qf(lf(t,r))}}}},dy={kernelName:Wl,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=kg(_f(Hf(Nd(n,"float32")),1));return lf(t,e)}}}},py={kernelName:Ul,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=df(n.shape,r.shape);return{a:()=>{let e=t;const r=hf(n.shape,s);return r.length>0&&(e=Of(e,r)),vp(e,n.shape)},b:()=>{let e=t;const n=hf(r.shape,s);return n.length>0&&(e=Of(e,n)),vp(e,r.shape)}}}},fy={kernelName:Vl,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Jf(n)}}},gy={kernelName:Gl,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Jf(n)}}},my={kernelName:Hl,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>lf(t,kg(_f(up(1),Hf(Nd(n,"float32")))))}}},yy={kernelName:Kl,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=kg(dp(up(1),Hf(Nd(n,"float32"))));return lf(t,e)}}}},by={kernelName:Xl,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=df(n.shape,r.shape);return{a:()=>{const e=dp(Hf(n),Hf(r));let i=Rf(t,lf(r,e));const o=hf(n.shape,s);return o.length>0&&(i=Of(i,o)),vp(i,n.shape)},b:()=>{const e=dp(Hf(n),Hf(r));let i=qf(Rf(t,lf(n,e)));const o=hf(r.shape,s);return o.length>0&&(i=Of(i,o)),vp(i,r.shape)}}}},xy={kernelName:ql,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>lf(t,dp(Hf(Nd(n,"float32")),1))}}},wy={kernelName:jl,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>lf(t,_f(up(1),Hf(Nd(n,"float32"))))}}},vy=Hh({avgPool3dBackprop_:function(t,e,n,r,s=[1,1,1],i,o){const a=Vh(t,"dy","avgPool3dBackprop"),l=Vh(e,"input","avgPool3dBackprop");let u=a,c=l,h=!1;4===l.rank&&(h=!0,u=vp(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),c=vp(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),Rc(5===u.rank,(()=>`Error in avgPool3dBackprop: dy must be rank 5 but got rank ${u.rank}.`)),Rc(5===c.rank,(()=>`Error in avgPool3dBackprop: input must be rank 5 but got rank ${c.rank}.`)),Rc(Bp(r,s),(()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`)),null!=o&&Rc(Oc(i),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`));const d={dy:u,input:c},p={filterSize:n,strides:r,dilations:s,pad:i,dimRoundingMode:o},f=Mh.runKernelFunc((t=>{const e=Np(c.shape,n,r,s,i,o);return t.avgPool3dBackprop(u,c,e)}),d,null,"AvgPool3DBackprop",p);return h?vp(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),ky={kernelName:Jl,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:i,dilations:o,pad:a,dimRoundingMode:l}=n,u=null==o?[1,1,1]:o;return{x:()=>vy(t,r,s,i,u,a,l)}}},$y=Hh({avgPoolBackprop_:function(t,e,n,r,s){const i=Vh(t,"dy","avgPoolBackprop"),o=Vh(e,"input","avgPoolBackprop");Rc(o.rank===i.rank,(()=>`Rank of input (${o.rank}) does not match rank of dy (${i.rank})`));let a=o,l=i,u=!1;3===o.rank&&(u=!0,a=vp(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=vp(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Rc(4===l.rank,(()=>`Error in avgPoolBackprop: dy must be rank 4 but got rank ${l.rank}.`)),Rc(4===a.rank,(()=>`Error in avgPoolBackprop: input must be rank 4 but got rank ${a.rank}.`));const c={dy:l,input:a},h={filterSize:n,strides:r,pad:s},d=Mh.runKernelFunc((t=>{const e=Cp(a.shape,n,r,1,s);return t.avgPoolBackprop(l,a,e)}),c,null,"AvgPoolBackprop",h);return u?vp(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Iy={kernelName:Yl,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:i,pad:o}=n;return{x:()=>$y(t,r,s,i,o)}}},Sy={kernelName:Zl,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,s]=e,{transposeA:i,transposeB:o}=n;return i||o?!i&&o?{a:()=>Hg(t,s,!1,!1),b:()=>Hg(t,r,!0,!1)}:i&&!o?{a:()=>Hg(s,t,!1,!0),b:()=>Hg(r,t,!1,!1)}:{a:()=>Hg(s,t,!0,!0),b:()=>Hg(t,r,!0,!0)}:{a:()=>Hg(t,s,!1,!0),b:()=>Hg(r,t,!0,!1)}}},Ey=Hh({spaceToBatchND_:function(t,e,n){const r=Vh(t,"x","spaceToBatchND");Rc(r.rank>=1+e.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`)),Rc(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),Rc(r.shape.reduce(((t,r,s)=>s>0&&s<=e.length?t&&(r+n[s-1][0]+n[s-1][1])%e[s-1]==0:t),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const s={x:r},i={blockShape:e,paddings:n};return Mh.runKernelFunc((t=>t.spaceToBatchND(r,e,n)),s,null,rc,i)}}),Cy={kernelName:Ql,gradFunc:(t,e,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Ey(t,r,s)}}},Ny={kernelName:tu,gradFunc:(t,e,n)=>{const r=n,s=r.inputShape,i=r.shape,o=Array.from(i);for(let t=s.length-1;t>=0;t--)if(s[t]===i[t])o[t]=1;else if(1!==s[t])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${i}].`);const a=[];for(let t=0;t<o.length;t++)o[t]>1&&a.push(t);return{x:()=>Of(t,a,!0)}}},Ry={kernelName:eu,gradFunc:t=>({x:()=>t.clone()})},Ay={kernelName:nu,gradFunc:t=>({x:()=>Jf(t)})},Ty={kernelName:ru,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:s,clipValueMax:i}=n;return{x:()=>Rg(Bf(Ef(r,s),om(r,i)),t,Jf(t))}}},Dy={kernelName:su,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map((t=>t.shape)),{axis:s}=n,i=zc(s,e[0].shape)[0],o=r.map((t=>t[i]));return vg(t,o,i).map((t=>()=>t))}},Fy={kernelName:iu,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{dilations:i,strides:o,pad:a,dataFormat:l}=n;return Rc(Mp(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>nf(r.shape,t,s,o,a,l),filter:()=>Og(r,t,s.shape,o,a,l)}}},_y={kernelName:ou,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{strides:i,pad:o,dataFormat:a,dimRoundingMode:l}=n;return{dy:()=>tf(t,s,i,o,a,1,l),filter:()=>Og(t,r,s.shape,i,o,a,l)}}},Oy=Hh({conv3DBackpropFilter_:function(t,e,n,r,s){let i=t;4===t.rank&&(i=vp(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let o=e;4===o.rank&&(o=vp(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),Rc(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),Rc(5===o.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`)),Rc(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),Rc(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),Rc(o.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`));const a={x:i,y:o},l={strides:r,pad:s};return Mh.runKernelFunc((t=>{const e=Ap(i.shape,n,r,1,s);return t.conv3dDerFilter(i,o,e)}),a,null,"Conv3DBackpropFilterV2",l)}}),My=Hh({conv3DBackpropInput_:function(t,e,n,r,s){Rc(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let i=t,o=e,a=!1;4===e.rank&&(a=!0,o=vp(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,t[0],t[1],t[2],t[3]]);const l=i[4],u=o.shape[4];Rc(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),Rc(5===o.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`)),Rc(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),Rc(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),Rc(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:o},h={pad:s},d=Mh.runKernelFunc((t=>{const e=Ap(i,n.shape,r,1,s);return t.conv3dDerInput(o,n,e)}),c,null,"Conv3DBackpropInputV2",h);return a?vp(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),By={kernelName:au,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:i}=n;Rc(Mp(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[o,a]=e;return{x:()=>My(o.shape,t,a,s,i),filter:()=>Oy(o,t,a.shape,s,i)}}},Ly=Hh({sin_:function(t){const e=Vh(t,"x","sin"),n={x:e};return Mh.runKernelFunc(((t,n)=>{const r=t.sin(e);return n([e]),r}),n,null,"Sin")}}),zy={kernelName:"Cos",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Rf(qf(Ly(Nd(n,"float32"))),t)}}},Py=Hh({sinh_:function(t){const e=Vh(t,"x","sinh"),n={x:e};return Mh.runKernelFunc(((t,n)=>{const r=t.sinh(e);return n([e]),r}),n,null,Zu)}}),Wy={kernelName:lu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Rf(Py(Nd(n,"float32")),t)}}},Uy=Hh({cumsum_:function(t,e=0,n=!1,r=!1){const s=Vh(t,"x","cumsum"),i={x:s},o={axis:e,exclusive:n,reverse:r};return Mh.runKernelFunc(((t,i)=>{const o=bp([e],s.rank);let a=s;null!=o&&(a=kp(s,o));const l=wp(1,s.rank)[0];let u=t.cumsum(a,l,n,r);if(i([s]),null!=o){const t=xp(o);u=kp(u,t)}return u}),i,null,uu,o)}}),Vy={kernelName:uu,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s,exclusive:i,reverse:o}=n;return{x:()=>{const e=bp([s],r.rank);let n=Uy(t,s,i,!o);return null!=e&&(n=kp(n,e)),n}}}},Gy={kernelName:cu,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:i,dimRoundingMode:o}=n,a=null==r?[1,1]:r;Rc(Mp(a),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[l,u]=e;Rc(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),Rc(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),Rc(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Rc(Bp(s,a),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${a}'.`)),null!=o&&Rc(Oc(i),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`));const c=Rp(l.shape,u.shape,s,a,i,o,!0);return{x:()=>Gg(l.shape,t,u,c),filter:()=>Vg(l,t,u.shape,c)}}},Hy={kernelName:hu,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,i={x:r,filter:s,dy:t},o={x:r,filter:s,dy:t};return{x:()=>Mh.runKernel("Dilation2DBackpropInput",i,n),filter:()=>Mh.runKernel("Dilation2DBackpropFilter",o,n)}}},Ky={kernelName:du,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=df(n.shape,r.shape);return{a:()=>{const e=lf(t,Nd(r,"float32")),i=hf(n.shape,s);return i.length>0?vp(Of(e,i),n.shape):e},b:()=>{let e=Rf(t,Nd(n,"float32"));const i=hf(r.shape,s);i.length>0&&(e=vp(Of(e,i),r.shape));const o=Hf(r);return qf(lf(e,Nd(o,"float32")))}}}},qy={kernelName:"Elu",outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r=e=>e.eluDer(t,n),s={dy:t,y:n};return{x:()=>Mh.runKernelFunc(r,s,null,"EluGrad")}}},jy={kernelName:"Erf",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Rf(Df(qf(Hf(n))),2/Math.sqrt(Math.PI));return{x:()=>Rf(t,r)}}},Xy={kernelName:"Exp",outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Rf(t,n)}}},Yy={kernelName:pu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Rf(t,Df(n))}}},Jy={kernelName:gu,gradFunc:t=>({x:()=>Jf(t)})},Zy={kernelName:mu,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=df(n.shape,r.shape);return{a:()=>{const e=lf(t,Nd(r,"float32")),i=hf(n.shape,s);return i.length>0?vp(Of(e,i),n.shape):e},b:()=>{let e=Rf(t,Nd(n,"float32"));const i=hf(r.shape,s);i.length>0&&(e=vp(Of(e,i),r.shape));const o=Hf(r);return qf(lf(e,Nd(o,"float32")))}}}},Qy=Hh({rsqrt_:function(t){const e=Vh(t,"x","rsqrt"),n={x:e};return Mh.runKernelFunc(((t,n)=>{const r=t.rsqrt(e);return n([e]),r}),n,null,ju)}}),tb={kernelName:yu,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[s,i,o,a]=e,l=null==a?up(1):a,u=hf(i.shape,s.shape),c=[];if(1===i.rank){for(let t=0;t<s.shape.length-1;++t)c.push(s.shape[t]);c.push(1)}const h=_f(s,i),d=Rf(t,l),p=Qy(dp(o,up(r))),f=Rf(Rf(Rf(p,p),p),up(-.5));return{x:()=>1===i.rank?vp(Rf(Rf(t,gf(vp(p,[1,1,1,i.shape[0]]),c)),l),s.shape):vp(Rf(Rf(t,p),l),s.shape),mean:()=>{let t=Rf(Rf(p,up(-1)),d);return 1===i.rank&&(t=Of(t,u)),vp(t,i.shape)},variance:()=>{let t=Rf(Rf(f,h),d);return 1===i.rank&&(t=Of(t,u)),vp(t,i.shape)},scale:()=>{const e=Rf(h,p);let n=Rf(t,e);return 1===i.rank&&(n=Of(n,u)),vp(n,i.shape)},offset:()=>{let e=t;return 1===i.rank&&(e=Of(e,u)),vp(e,i.shape)}}}},eb=Hh({unsortedSegmentSum_:function(t,e,n){const r=Vh(t,"x","unsortedSegmentSum"),s=Vh(e,"segmentIds","unsortedSegmentSum","int32");Rc(Oc(n),(()=>"numSegments must be of dtype int"));const i={x:r,segmentIds:s},o={numSegments:n};return Mh.runKernelFunc(((t,e)=>{const i=t.unsortedSegmentSum(r,s,n);return e([s]),i}),i,null,dc,o)}}),nb={kernelName:bu,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,s]=e,{axis:i}=n,o=zc(i,r.shape)[0];return{x:()=>{const e=r.shape,n=s.size,a=e.slice(0,o),l=a.length,u=e.slice(i,e.length).slice(1),c=u.length,h=rb(0,l),d=rb(l+1,l+1+c),p=sb([a,[n],u]),f=vp(t,p),g=vp(s,[n]),m=sb([[l],h,d]),y=kp(f,m);let b=eb(y,g,r.shape[o]);const x=xp(m);return b=kp(b,x),b},indices:()=>s}}};function rb(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function sb(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const ib={kernelName:xu,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Jf(n),b:()=>Jf(r)}}},ob={kernelName:wu,gradFunc:t=>({x:()=>Nd(t,"float32")})},ab={kernelName:vu,gradFunc:t=>({x:()=>Jf(t)})},lb={kernelName:ku,gradFunc:t=>({x:()=>Jf(t)})},ub={kernelName:$u,gradFunc:t=>({x:()=>Jf(t)})},cb={kernelName:Iu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>lf(t,dp(n,1))}}},hb={kernelName:"Log",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>lf(t,Nd(n,"float32"))}}},db={kernelName:Su,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:s}=n;return{logits:()=>{const e=Df(r);return _f(t,Rf(Of(t,s,!0),e))}}}},pb=Hh({localResponseNormalizationBackprop_:function(t,e,n,r=5,s=1,i=1,o=.5){const a={x:t,y:e,dy:n},l={depthRadius:r,bias:s,alpha:i,beta:o};return Mh.runKernelFunc((a=>a.LRNGrad(n,t,e,r,s,i,o)),a,null,"LRNBackprop",l)}}),fb={kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{depthRadius:i,bias:o,alpha:a,beta:l}=n;return{x:()=>pb(r,s,t,i,o,a,l)}}};function gb(t,e,n,r,s){return e.rank<n.rank&&(e=vp(e,mp(e.shape,r))),t.rank<n.rank&&(t=vp(t,mp(t.shape,r))),{x:()=>{const r=Rf(t,Nd(pf(n,e),t.dtype));return null==s?r:kp(r,s)}}}const mb={kernelName:Eu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:s}=r,[i,o]=e,a=zc(s,i.shape),l=bp(a,i.rank),u=gb(t,o,i,a,l);return{x:()=>{let t=u.x();return null!=l&&(t=kp(t)),t}}}},yb=Hh({less_:function(t,e){let n=Vh(t,"a","less"),r=Vh(e,"b","less");[n,r]=Rh(n,r),df(n.shape,r.shape);const s={a:n,b:r};return Mh.runKernelFunc((t=>t.less(n,r)),s,null,"Less")}}),bb={kernelName:Cu,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Rf(t,Nd(Ef(n,r),"float32")),b:()=>Rf(t,Nd(yb(n,r),"float32"))}}},xb=Hh({maxPool3dBackprop_:function(t,e,n,r,s,i=[1,1,1],o,a){const l=Vh(t,"dy","maxPool3dBackprop"),u=Vh(e,"input","maxPool3dBackprop"),c=Vh(n,"output","maxPool3dBackprop");let h=l,d=u,p=c,f=!1;4===u.rank&&(f=!0,h=vp(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=vp(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=vp(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),Rc(5===h.rank,(()=>`Error in maxPool3dBackprop: dy must be rank 5 but got rank ${h.rank}.`)),Rc(5===d.rank,(()=>`Error in maxPool3dBackprop: input must be rank 5 but got rank ${d.rank}.`)),Rc(5===p.rank,(()=>`Error in maxPool3dBackprop: output must be rank 5 but got rank ${p.rank}.`)),Rc(Bp(s,i),(()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${s} and dilations '${i}'`)),null!=a&&Rc(Oc(o),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`));const g={dy:h,input:d,output:p},m={filterSize:r,strides:s,dilations:i,pad:o,dimRoundingMode:a},y=Mh.runKernelFunc((t=>{const e=Np(d.shape,r,s,i,o,a);return t.maxPool3dBackprop(h,d,p,e)}),g,null,"MaxPool3DBackprop",m);return f?vp(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),wb={kernelName:Ru,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:i,strides:o,dilations:a,pad:l,dimRoundingMode:u}=n,c=null==a?[1,1,1]:a;return{x:()=>xb(t,r,s,i,o,c,l,u)}}},vb=Hh({maxPoolBackprop_:function(t,e,n,r,s,i,o){const a=Vh(t,"dy","maxPoolBackprop"),l=Vh(e,"input","maxPoolBackprop"),u=Vh(n,"output","maxPoolBackprop");Rc(l.rank===a.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`)),Rc(4===a.rank,(()=>`Error in maxPoolBackprop: dy must be rank 4 but got rank ${a.rank}.`)),Rc(4===l.rank,(()=>`Error in maxPoolBackprop: input must be rank 4 but got rank ${l.rank}.`)),null!=o&&Rc(Oc(i),(()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`));const c={dy:a,input:l,output:u},h={filterSize:r,strides:s,pad:i,dimRoundingMode:o};return Mh.runKernelFunc((t=>{const e=Cp(l.shape,r,s,1,i,o);return t.maxPoolBackprop(a,l,u,e)}),c,null,"MaxPoolBackprop",h)}}),kb={kernelName:Nu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:i,strides:o,pad:a}=n;return{x:()=>vb(t,r,s,i,o,a)}}},$b={kernelName:"Min",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:s}=r,[i,o]=e,a=zc(s,i.shape),l=bp(a,i.rank),u=gb(t,o,i,a,l);return{x:()=>{let t=u.x();return null!=l&&(t=kp(t)),t}}}},Ib={kernelName:Au,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Rf(t,Nd(om(n,r),"float32")),b:()=>Rf(t,Nd(Sf(n,r),"float32"))}}},Sb={kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=df(n.shape,r.shape);return{a:()=>{const e=hf(n.shape,s);return e.length>0?vp(Of(t,e),n.shape):t},b:()=>{const e=Rf(t,qf(bf(lf(n,r)))),i=hf(r.shape,s);return i.length>0?vp(Of(e,i),r.shape):e}}}},Eb={kernelName:Tu,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=df(n.shape,r.shape);return{a:()=>{const e=Rf(t,Nd(r,"float32")),i=hf(n.shape,s);return i.length>0?vp(Of(e,i),n.shape):e},b:()=>{const e=Rf(t,Nd(n,"float32")),i=hf(r.shape,s);return i.length>0?vp(Of(e,i),r.shape):e}}}},Cb={kernelName:Du,gradFunc:t=>({x:()=>qf(t)})},Nb={kernelName:Bu,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Pf(n.shape,"float32")}}},Rb={kernelName:Mu,gradFunc:t=>({x:()=>Jf(t)})},Ab={kernelName:Lu,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,i=s.map((t=>t[0]));return{x:()=>pg(t,i,r.shape)}}},Tb={kernelName:"Pow",inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,s]=e,i=n,o=r,a=df(i.shape,o.shape);return{a:()=>{const e=Nd(o,"float32");let n=Rf(t,Rf(e,lm(i,_f(e,up(1)))));const r=hf(i.shape,a);return r.length>0&&(n=Of(n,r)),vp(n,i.shape)},b:()=>{const e=Sf(i,0),n=Rg(e,Tf(i),Jf(i));let r=Rf(t,Rf(s,n));const l=hf(o.shape,a);return l.length>0&&(r=Of(r,l)),vp(r,o.shape)}}}},Db={kernelName:zu,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,s=Sf(n,0);return{x:()=>Rg(s,t,Rf(t,r)),alpha:()=>{let e=Rg(s,Jf(t),Rf(t,n));const i=hf(r.shape,t.shape);return i.length>0&&(e=Of(e,i)),vp(e,r.shape)}}}},Fb={kernelName:Pu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>lf(t,qf(Hf(n)))}}},_b={kernelName:Hu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Rf(om(n,6),Bg(n));return{x:()=>Rf(t,Nd(r,"float32"))}}},Ob={kernelName:Wu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Rf(t,Nd(Bg(n),"float32"))}}},Mb={kernelName:Uu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>vp(t,n.shape)}}},Bb={kernelName:Gu,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s=e=>{const{alignCorners:s}=n;return e.resizeBilinearBackprop(t,r,s)},i={images:r};return{images:()=>Mh.runKernelFunc(s,i,null,"ResizeBilinearGrad",n)}}},Lb={kernelName:Vu,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s=e=>{const{alignCorners:s}=n;return e.resizeNearestNeighborBackprop(t,r,s)},i={images:r};return{images:()=>Mh.runKernelFunc(s,i,null,"ResizeNearestNeighborGrad",n)}}},zb={kernelName:Ku,gradFunc:(t,e,n)=>{const{dims:r}=n,s=zc(r,t.shape);return{x:()=>ug(t,s)}}},Pb={kernelName:qu,gradFunc:t=>({x:()=>Jf(t)})},Wb={kernelName:ju,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qf(lf(t,Rf(lm(n,1.5),2)))}}},Ub=Hh({logicalNot_:function(t){const e=Vh(t,"x","logicalNot","bool"),n={x:e};return Mh.runKernelFunc((t=>t.logicalNot(e)),n,null,"LogicalNot")}}),Vb={kernelName:Xu,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Nd(Jf(n),"float32"),t:()=>Rf(t,Nd(n,t.dtype)),e:()=>Rf(t,Nd(Ub(n),t.dtype))}}},Gb={kernelName:Yu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Sf(n,up(0)),r=up(Wm),s=up(Um),i=Rf(t,s),o=Rf(Rf(t,r),Df(Nd(n,"float32")));return Rg(e,i,o)}}}},Hb={kernelName:tc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Rf(t,Rf(n,_f(up(1),n)))}}},Kb={kernelName:Qu,gradFunc:t=>({x:()=>Jf(t)})},qb=Hh({cos_:function(t){const e=Vh(t,"x","cos"),n={x:e};return Mh.runKernelFunc(((t,n)=>{const r=t.cos(e);return n([e]),r}),n,null,"Cos")}}),jb={kernelName:"Sin",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Rf(qb(Nd(n,"float32")),t)}}},Xb=Hh({cosh_:function(t){const e=Vh(t,"x","cosh"),n={x:e};return Mh.runKernelFunc(((t,n)=>{const r=t.cosh(e);return n([e]),r}),n,null,lu)}}),Yb={kernelName:Zu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Rf(Xb(Nd(n,"float32")),t)}}},Jb={kernelName:Ju,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:s,size:i}=n,o=r.shape,[a,l]=Zd(r,s,i),u=[];for(let e=0;e<t.rank;e++)u.push([a[e],o[e]-a[e]-l[e]]);return{x:()=>Qf(t,u)}}},Zb={kernelName:ic,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:s}=n,i=Rf(t,r);return{logits:()=>_f(i,Rf(Of(i,[s],!0),r))}}},Qb={kernelName:ec,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Rf(t,dg(n))}}},tx=Hh({batchToSpaceND_:function(t,e,n){const r=Vh(t,"x","batchToSpaceND"),s=e.reduce(((t,e)=>t*e));Rc(r.rank>=1+e.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`)),Rc(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),Rc(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`));const i={x:r},o={blockShape:e,crops:n};return Mh.runKernelFunc((t=>t.batchToSpaceND(r,e,n)),i,null,Ql,o)}}),ex={kernelName:rc,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>tx(t,r,s)}}},nx={kernelName:sc,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>Xp(t,r)}}},rx=[cy,hy,dy,py,{kernelName:"AddN",saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,r)=>{n[r]=()=>t.clone()})),n}},fy,gy,my,yy,by,xy,wy,ky,Iy,Sy,Cy,Ny,Ry,Ay,Ty,Dy,_y,Fy,By,zy,Wy,Vy,Gy,Hy,Ky,qy,jy,Xy,Yy,Zy,Jy,tb,nb,ib,ob,ab,lb,ub,cb,hb,db,fb,mb,mb,bb,wb,kb,$b,Ib,Sb,Eb,Cb,Nb,Rb,Ab,Ab,Tb,Db,Fb,_b,Ob,Mb,Bb,Lb,zb,Pb,Wb,Vb,Gb,Hb,Kb,jb,Yb,Jb,Zb,Qb,ex,ex,nx,nx,{kernelName:nc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>lf(t,Rf(kg(Nd(n,"float32")),2))}}},{kernelName:oc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=up(2);return{a:()=>Rf(t,Rf(s,_f(n,r))),b:()=>Rf(t,Rf(s,_f(r,n)))}}},{kernelName:ac,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Rf(t,Rf(Nd(n,"float32"),2))}}},{kernelName:fc,gradFunc:t=>({x:()=>Jf(t)})},{kernelName:"Sub",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=df(n.shape,r.shape);return{a:()=>{let e=t;const r=hf(n.shape,s);return r.length>0&&(e=Of(e,r)),vp(e,n.shape)},b:()=>{let e=t;const n=hf(r.shape,s);return n.length>0&&(e=Of(e,n)),vp(qf(e),r.shape)}}}},{kernelName:"Sum",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,s=r.shape.slice(),{axis:i}=n;zc(i,r.shape).forEach((t=>{s[t]=1}));const o=vp(t,s),a=Rf(o,Wf(r.shape,"float32"));return{x:()=>a}}},{kernelName:"Tan",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>lf(t,Hf(qb(n)))}}},{kernelName:lc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Rf(_f(up(1),Hf(n)),t)}}},{kernelName:uc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:s}=n;return{x:()=>{let e=Jf(r);if(1===r.rank)for(let n=0;n<s[0];++n)e=dp(e,pg(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)e=dp(e,pg(t,[n*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let o=0;o<s[2];++o)e=dp(e,pg(t,[n*r.shape[0],i*r.shape[1],o*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let o=0;o<s[2];++o)for(let a=0;a<s[3];++a)e=dp(e,pg(t,[n*r.shape[0],i*r.shape[1],o*r.shape[2],a*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},{kernelName:cc,gradFunc:(t,e,n)=>{const r=n,{perm:s}=r,i=xp(s);return{x:()=>kp(t,i)}}},{kernelName:hc,gradFunc:(t,e,n)=>{const r=n,{axis:s}=r;return{value:()=>Ig(t,s)}}},{kernelName:dc,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=Nf(e,Jf(e)),r=If(t,n);let s=Ef(e,up(0,"int32"));const i=r.rank-s.rank;for(let t=0;t<i;++t)s=ff(s,t+1);s=Bf(s,Wf(r.shape,"bool"));const o=Jf(r);return Rg(s,r,o)}(t,n)}}},{kernelName:pc,gradFunc:t=>({x:()=>Jf(t)})}];for(const t of rx)Ic(t);xh.prototype.abs=function(){return this.throwIfDisposed(),hp(this)};const sx=Hh({acos_:function(t){const e=Vh(t,"x","acos"),n={x:e};return Mh.runKernelFunc(((t,n)=>{const r=t.acos(e);return n([e]),r}),n,null,Pl)}});xh.prototype.acos=function(){return this.throwIfDisposed(),sx(this)};const ix=Hh({acosh_:function(t){const e=Vh(t,"x","acosh"),n={x:e};return Mh.runKernelFunc(((t,n)=>{const r=t.acosh(e);return n([e]),r}),n,null,Wl)}});xh.prototype.acosh=function(){return this.throwIfDisposed(),ix(this)};const ox=Hh({mod_:function(t,e){let n=Vh(t,"a","mod"),r=Vh(e,"b","mod");[n,r]=Rh(n,r);const s={a:n,b:r};return Mh.runKernelFunc(((t,e)=>{const s=t.mod(n,r);return e([n,r]),s}),s,null,"Mod")}}),ax=Hh({addStrict_:function(t,e){np("strict variants of ops have been deprecated and will be removed in future");const n=Vh(t,"a","addStrict"),r=Vh(e,"b","addStrict");return Ac(n.shape,r.shape,"Error in addStrict: "),dp(n,r)}}),lx=Hh({divStrict_:function(t,e){np("strict variants of ops have been deprecated and will be removed in future");const n=Vh(t,"a","div"),r=Vh(e,"b","div");return Ac(n.shape,r.shape,"Error in divideStrict: "),lf(n,r)}}),ux=Hh({maximumStrict_:function(t,e){np("strict variants of ops have been deprecated and will be removed in future");const n=Vh(t,"a","maximumStrict"),r=Vh(e,"b","maximumStrict");return Ac(n.shape,r.shape,"Error in maximumStrict: "),Nf(n,r)}}),cx=Hh({minimumStrict_:function(t,e){np("strict variants of ops have been deprecated and will be removed in future");const n=Vh(t,"a","minimumStrict"),r=Vh(e,"b","minimumStrict");return Ac(n.shape,r.shape,"Error in minimumStrict: "),Gf(n,r)}}),hx=Hh({modStrict_:function(t,e){np("strict variants of ops have been deprecated and will be removed in future");const n=Vh(t,"a","modStrict"),r=Vh(e,"b","modStrict");return Ac(n.shape,r.shape,"Error in modStrict: "),ox(n,r)}}),dx=Hh({mulStrict_:function(t,e){np("strict variants of ops have been deprecated and will be removed in future");const n=Vh(t,"a","mul"),r=Vh(e,"b","mul");return Ac(n.shape,r.shape,"Error in multiplyStrict: "),Rf(n,r)}}),px=Hh({powStrict_:function(t,e){return np("strict variants of ops have been deprecated and will be removed in future"),Ac(t.shape,e.shape,"Error in powStrict: "),lm(t,e)}}),fx=Hh({squaredDifferenceStrict_:function(t,e){np("strict variants of ops have been deprecated and will be removed in future");const n=Vh(t,"a","squaredDifferenceStrict"),r=Vh(e,"b","squaredDifferenceStrict");return Ac(n.shape,r.shape,"Error in squaredDifferenceStrict: "),mm(n,r)}}),gx=Hh({subStrict_:function(t,e){np("strict variants of ops have been deprecated and will be removed in future");const n=Vh(t,"a","subStrict"),r=Vh(e,"b","subStrict");return Ac(n.shape,r.shape,"Error in subStrict: "),_f(n,r)}});xh.prototype.addStrict=function(t){return this.throwIfDisposed(),ax(this,t)},xh.prototype.add=function(t){return this.throwIfDisposed(),dp(this,t)},xh.prototype.all=function(t,e){return this.throwIfDisposed(),$p(this,t,e)},xh.prototype.any=function(t,e){return this.throwIfDisposed(),Ip(this,t,e)},xh.prototype.argMax=function(t){return this.throwIfDisposed(),Sp(this,t)};const mx=Hh({argMin_:function(t,e=0){let n=Vh(t,"x","argMin");const r={x:n},s={axis:e};return Mh.runKernelFunc(((t,r)=>{r([n]),null==e&&(e=0);let s=zc(e,n.shape);const i=bp(s,n.rank);return null!=i&&(n=kp(n,i),s=wp(s.length,n.rank)),t.argMin(n,s[0])}),r,null,Gl,s)}});xh.prototype.argMin=function(t){return this.throwIfDisposed(),mx(this,t)},xh.prototype.asScalar=function(){return this.throwIfDisposed(),Rc(1===this.size,(()=>"The array must have only 1 element.")),vp(this,[])},xh.prototype.asType=function(t){return this.throwIfDisposed(),Nd(this,t)},xh.prototype.as1D=function(){return this.throwIfDisposed(),vp(this,[this.size])},xh.prototype.as2D=function(t,e){return this.throwIfDisposed(),vp(this,[t,e])},xh.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),vp(this,[t,e,n])},xh.prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),vp(this,[t,e,n,r])},xh.prototype.as5D=function(t,e,n,r,s){return this.throwIfDisposed(),vp(this,[t,e,n,r,s])};const yx=Hh({asin_:function(t){const e=Vh(t,"x","asin"),n={x:e};return Mh.runKernelFunc(((t,n)=>{const r=t.asin(e);return n([e]),r}),n,null,Hl)}});xh.prototype.asin=function(){return this.throwIfDisposed(),yx(this)};const bx=Hh({asinh_:function(t){const e=Vh(t,"x","asinh"),n={x:e};return Mh.runKernelFunc(((t,n)=>{const r=t.asinh(e);return n([e]),r}),n,null,Kl)}});xh.prototype.asinh=function(){return this.throwIfDisposed(),bx(this)};const xx=Hh({atan_:function(t){const e=Vh(t,"x","atan"),n={x:e};return Mh.runKernelFunc(((t,n)=>{const r=t.atan(e);return n([e]),r}),n,null,ql)}});xh.prototype.atan=function(){return this.throwIfDisposed(),xx(this)};const wx=Hh({atan2_:function(t,e){let n=Vh(t,"a","atan2"),r=Vh(e,"b","atan2");[n,r]=Rh(n,r);const s={a:n,b:r};return Mh.runKernelFunc(((t,e)=>{const s=t.atan2(n,r);return e([n,r]),s}),s,null,Xl)}});xh.prototype.atan2=function(t){return this.throwIfDisposed(),wx(this,t)};const vx=Hh({atanh_:function(t){const e=Vh(t,"x","atanh"),n={x:e};return Mh.runKernelFunc(((t,n)=>{const r=t.atanh(e);return n([e]),r}),n,null,jl)}});xh.prototype.atanh=function(){return this.throwIfDisposed(),vx(this)},xh.prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),zp(this,t,e,n,r)},xh.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),tx(this,t,e)},xh.prototype.batchNorm=function(t,e,n,r,s){return this.throwIfDisposed(),Up(this,t,e,n,r,s)},xh.prototype.broadcastTo=function(t){return this.throwIfDisposed(),Ng(this,t)},xh.prototype.cast=function(t){return this.throwIfDisposed(),Nd(this,t)};const kx=Hh({ceil_:function(t){const e=Vh(t,"x","ceil"),n={x:e};return Mh.runKernelFunc((t=>t.ceil(e)),n,null,nu)}});xh.prototype.ceil=function(){return this.throwIfDisposed(),kx(this)},xh.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Kp(this,t,e)},xh.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof xh&&(t=[t]),Xp([this,...t],e)},xh.prototype.conv1d=function(t,e,n,r,s,i){return this.throwIfDisposed(),ef(this,t,e,n,r,s,i)},xh.prototype.conv2dTranspose=function(t,e,n,r,s){return this.throwIfDisposed(),rf(this,t,e,n,r,s)},xh.prototype.conv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),tf(this,t,e,n,r,s,i)},xh.prototype.cos=function(){return this.throwIfDisposed(),qb(this)},xh.prototype.cosh=function(){return this.throwIfDisposed(),Xb(this)},xh.prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),Uy(this,t,e,n)};const $x=Hh({depthToSpace_:function(t,e,n="NHWC"){const r=Vh(t,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];Rc(s*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${e}  for depthToSpace with input shape\n    ${r.shape}`)),Rc(i*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${e} for depthToSpace with input shape\n        ${r.shape}`)),Rc(o%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${o} for depthToSpace with input shape ${r.shape}`));const a={x:r},l={blockSize:e,dataFormat:n};return Mh.runKernelFunc((t=>t.depthToSpace(r,e,n)),a,null,"DepthToSpace",l)}});xh.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),$x(this,t,e)},xh.prototype.depthwiseConv2D=function(t,e,n,r,s,i){return np("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),of(this,t,e,n,r,s,i)},xh.prototype.depthwiseConv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),of(this,t,e,n,r,s,i)};const Ix=Hh({dilation2d_:function(t,e,n,r,s=[1,1],i="NHWC"){const o=Vh(t,"x","dilation2d"),a=Vh(e,"filter","dilation2d");Rc(3===o.rank||4===o.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`)),Rc(3===a.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`)),Rc("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let l=o,u=!1;3===o.rank&&(l=vp(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=!0);const c={x:l,filter:a},h={strides:n,pad:r,dilations:s},d=Mh.runKernel(hu,c,h);return u?vp(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});xh.prototype.dilation2d=function(t,e,n,r,s){return this.throwIfDisposed(),Ix(this,t,e,n,r,s)};const Sx=Hh({divNoNan_:function(t,e){let n=Vh(t,"a","div"),r=Vh(e,"b","div");[n,r]=Rh(n,r);const s=lf(n,r),i=Jf(s),o=pf(r,i);return Rg(o,i,s)}});xh.prototype.divNoNan=function(t){return this.throwIfDisposed(),Sx(this,t)},xh.prototype.divStrict=function(t){return this.throwIfDisposed(),lx(this,t)},xh.prototype.div=function(t){return this.throwIfDisposed(),lf(this,t)};const Ex=Hh({dot_:function(t,e){const n=Vh(t,"t1","dot"),r=Vh(e,"t2","dot");Rc(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];if(Rc(s===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${i}.`)),1===n.rank&&1===r.rank){const t=vp(n,[1,-1]),e=vp(r,[-1,1]),s=Hg(t,e);return vp(s,[])}if(1===n.rank&&2===r.rank){const t=vp(n,[1,-1]),e=vp(r,[r.shape[0],r.shape[1]]),s=Hg(t,e);return vp(s,[s.size])}if(2===n.rank&&1===r.rank){const t=vp(r,[-1,1]),e=Hg(n,t);return vp(e,[e.size])}{const t=vp(r,[r.shape[0],r.shape[1]]);return Hg(n,t)}}});xh.prototype.dot=function(t){return this.throwIfDisposed(),Ex(this,t)},xh.prototype.elu=function(){return this.throwIfDisposed(),uf(this)};const Cx=Hh({equalStrict_:function(t,e){np("strict variants of ops have been deprecated and will be removed in future");const n=Vh(t,"a","equalStrict"),r=Vh(e,"b","equalStrict");return Ac(n.shape,r.shape,"Error in equalStrict: "),pf(n,r)}}),Nx=Hh({greaterEqualStrict_:function(t,e){np("strict variants of ops have been deprecated and will be removed in future");const n=Vh(t,"a","greaterEqualStrict"),r=Vh(e,"b","greaterEqualStrict");return Ac(n.shape,r.shape,"Error in greaterEqualStrict: "),Ef(n,r)}}),Rx=Hh({greaterStrict_:function(t,e){np("strict variants of ops have been deprecated and will be removed in future");const n=Vh(t,"a","greaterStrict"),r=Vh(e,"b","greaterStrict");return Ac(n.shape,r.shape,"Error in greaterStrict: "),Sf(n,r)}}),Ax=Hh({lessEqualStrict_:function(t,e){np("strict variants of ops have been deprecated and will be removed in future");const n=Vh(t,"a","lessEqualStrict"),r=Vh(e,"b","lessEqualStrict");return Ac(n.shape,r.shape,"Error in lessEqualStrict: "),om(n,r)}}),Tx=Hh({lessStrict_:function(t,e){np("strict variants of ops have been deprecated and will be removed in future");const n=Vh(t,"a","lessStrict"),r=Vh(e,"b","lessStrict");return Ac(n.shape,r.shape,"Error in lessStrict: "),yb(n,r)}}),Dx=Hh({notEqualStrict_:function(t,e){np("strict variants of ops have been deprecated and will be removed in future");const n=Vh(t,"a","notEqualStrict"),r=Vh(e,"b","notEqualStrict");return Ac(n.shape,r.shape,"Error in notEqualStrict: "),jf(n,r)}});xh.prototype.equalStrict=function(t){return this.throwIfDisposed(),Cx(this,t)},xh.prototype.equal=function(t){return this.throwIfDisposed(),pf(this,t)};const Fx=Hh({erf_:function(t){let e=Vh(t,"x","erf");Rc("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=Nd(e,"float32"));const n={x:e};return Mh.runKernelFunc(((t,n)=>{const r=t.erf(e);return n([e]),r}),n,null,"Erf")}});xh.prototype.erf=function(){return this.throwIfDisposed(),Fx(this)},xh.prototype.exp=function(){return this.throwIfDisposed(),Df(this)},xh.prototype.expandDims=function(t){return this.throwIfDisposed(),ff(this,t)};const _x=Hh({expm1_:function(t){const e=Vh(t,"x","expm1"),n={x:e};return Mh.runKernelFunc(((t,n)=>{const r=t.expm1(e);return n([e]),r}),n,null,pu)}});xh.prototype.expm1=function(){return this.throwIfDisposed(),_x(this)},xh.prototype.fft=function(){return this.throwIfDisposed(),Tg(this)},xh.prototype.flatten=function(){return this.throwIfDisposed(),vp(this,[this.size])},xh.prototype.floor=function(){return this.throwIfDisposed(),bf(this)},xh.prototype.floorDiv=function(t){return this.throwIfDisposed(),af(this,t)},xh.prototype.gather=function(t,e){return this.throwIfDisposed(),If(this,t,e)},xh.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),Nx(this,t)},xh.prototype.greaterEqual=function(t){return this.throwIfDisposed(),Ef(this,t)},xh.prototype.greaterStrict=function(t){return this.throwIfDisposed(),Rx(this,t)},xh.prototype.greater=function(t){return this.throwIfDisposed(),Sf(this,t)},xh.prototype.ifft=function(){return this.throwIfDisposed(),Fg(this)},xh.prototype.irfft=function(){return this.throwIfDisposed(),_g(this)};const Ox=Hh({isFinite_:function(t){const e=Vh(t,"x","isFinite"),n={x:e};return Mh.runKernelFunc((t=>t.isFinite(e)),n,null,vu)}});xh.prototype.isFinite=function(){return this.throwIfDisposed(),Ox(this)};const Mx=Hh({isInf_:function(t){const e=Vh(t,"x","isInf"),n={x:e};return Mh.runKernelFunc((t=>t.isInf(e)),n,null,ku)}});xh.prototype.isInf=function(){return this.throwIfDisposed(),Mx(this)};const Bx=Hh({isNaN_:function(t){const e=Vh(t,"x","isNaN"),n={x:e};return Mh.runKernelFunc((t=>t.isNaN(e)),n,null,$u)}});xh.prototype.isNaN=function(){return this.throwIfDisposed(),Bx(this)},xh.prototype.leakyRelu=function(t){return this.throwIfDisposed(),Af(this,t)},xh.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),Ax(this,t)},xh.prototype.lessEqual=function(t){return this.throwIfDisposed(),om(this,t)},xh.prototype.lessStrict=function(t){return this.throwIfDisposed(),Tx(this,t)},xh.prototype.less=function(t){return this.throwIfDisposed(),yb(this,t)};const Lx=Hh({localResponseNormalization_:function(t,e=5,n=1,r=1,s=.5){const i=Vh(t,"x","localResponseNormalization");Rc(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),Rc(Oc(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let o=i,a=!1;3===i.rank&&(a=!0,o=vp(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:o},u={depthRadius:e,bias:n,alpha:r,beta:s},c=Mh.runKernelFunc(((t,i)=>{const a=t.localResponseNormalization4D(o,e,n,r,s);return i([o,a]),a}),l,null,"LRN",u);return a?vp(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});xh.prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),Lx(this,t,e,n,r)};const zx=Hh({logSigmoid_:function(t){const e=Vh(t,"x","logSigmoid");return lp((t=>({value:qf(xg(qf(t))),gradFunc:e=>Rf(e,dg(qf(t)))})))(e)}});xh.prototype.logSigmoid=function(){return this.throwIfDisposed(),zx(this)},xh.prototype.logSoftmax=function(t){return this.throwIfDisposed(),Mf(this,t)},xh.prototype.logSumExp=function(t,e){return this.throwIfDisposed(),bm(this,t,e)},xh.prototype.log=function(){return this.throwIfDisposed(),Tf(this)},xh.prototype.log1p=function(){return this.throwIfDisposed(),ym(this)},xh.prototype.logicalAnd=function(t){return this.throwIfDisposed(),Bf(this,t)},xh.prototype.logicalNot=function(){return this.throwIfDisposed(),Ub(this)};const Px=Hh({logicalOr_:function(t,e){const n=Vh(t,"a","logicalOr","bool"),r=Vh(e,"b","logicalOr","bool");df(n.shape,r.shape);const s={a:n,b:r};return Mh.runKernelFunc((t=>t.logicalOr(n,r)),s,null,"LogicalOr")}});xh.prototype.logicalOr=function(t){return this.throwIfDisposed(),Px(this,t)};const Wx=Hh({logicalXor_:function(t,e){const n=Vh(t,"a","logicalXor","bool"),r=Vh(e,"b","logicalXor","bool");return df(n.shape,r.shape),Bf(Px(t,e),Ub(Bf(t,e)))}});xh.prototype.logicalXor=function(t){return this.throwIfDisposed(),Wx(this,t)},xh.prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Hg(this,t,e,n)},xh.prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),Lf(this,t,e,n,r)},xh.prototype.max=function(t,e){return this.throwIfDisposed(),Ff(this,t,e)},xh.prototype.maximumStrict=function(t){return this.throwIfDisposed(),ux(this,t)},xh.prototype.maximum=function(t){return this.throwIfDisposed(),Nf(this,t)},xh.prototype.mean=function(t,e){return this.throwIfDisposed(),Uf(this,t,e)},xh.prototype.min=function(t,e){return this.throwIfDisposed(),Vf(this,t,e)},xh.prototype.minimumStrict=function(t){return this.throwIfDisposed(),cx(this,t)},xh.prototype.minimum=function(t){return this.throwIfDisposed(),Gf(this,t)},xh.prototype.modStrict=function(t){return this.throwIfDisposed(),hx(this,t)},xh.prototype.mod=function(t){return this.throwIfDisposed(),ox(this,t)},xh.prototype.mulStrict=function(t){return this.throwIfDisposed(),dx(this,t)},xh.prototype.mul=function(t){return this.throwIfDisposed(),Rf(this,t)},xh.prototype.neg=function(){return this.throwIfDisposed(),qf(this)},xh.prototype.norm=function(t,e,n){return this.throwIfDisposed(),cm(this,t,e,n)},xh.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),Dx(this,t)},xh.prototype.notEqual=function(t){return this.throwIfDisposed(),jf(this,t)},xh.prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),Xf(this,t,e,n)},xh.prototype.onesLike=function(){return this.throwIfDisposed(),Zf(this)},xh.prototype.pad=function(t,e){return this.throwIfDisposed(),Qf(this,t,e)};const Ux=Hh({pool_:function(t,e,n,r,s,i){null==s&&(s=[1,1]),null==i&&(i=1),0===r&&(r="valid");const o=Vh(t,"x","maxPool");let a=o,l=!1;3===o.rank&&(l=!0,a=vp(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Rc(Bp(i,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${s}'`));const u=Cp(a.shape,e,i,s,r),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===r?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),r=n.map((t=>Math.floor(t/2))),s=n.map(((t,e)=>t-r[e]));return n.map(((t,e)=>[r[e],s[e]]))}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[p,f]=function(t,e,n){const r=n.map((t=>t[0])),s=n.map((t=>t[1])),i=t.concat(r,s),o=e.map(((t,e)=>(t-i[e]%t)%t)),a=s.map(((t,e)=>t+o[e]));return[e.map(((t,e)=>[r[e],a[e]])),e.map(((t,e)=>[0,o[e]]))]}([u.inHeight,u.inWidth],c,h),g=d?r:"valid",m=d?a:Ey(a,c,p),y=("avg"===n?()=>zp(m,e,i,g):()=>Lf(m,e,i,g))(),b=d?y:tx(y,c,f);return l?vp(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});xh.prototype.pool=function(t,e,n,r,s){return this.throwIfDisposed(),Ux(this,t,e,n,r,s)},xh.prototype.powStrict=function(t){return this.throwIfDisposed(),px(this,t)},xh.prototype.pow=function(t){return this.throwIfDisposed(),lm(this,t)},xh.prototype.prelu=function(t){return this.throwIfDisposed(),tg(this,t)};const Vx=Hh({prod_:function(t,e=null,n=!1){let r=Vh(t,"x","prod");const s={x:r},i={axis:e,keepDims:n};return Mh.runKernelFunc((t=>{"bool"===r.dtype&&(r=Nd(r,"int32"));const s=zc(e,r.shape),i=bp(s,r.rank);let o=s,a=r;null!=i&&(a=kp(r,i),o=wp(o.length,r.rank));let l=t.prod(a,o);if(n){const t=mp(l.shape,s);l=vp(l,t)}return l}),s,null,"Prod",i)}});xh.prototype.prod=function(t,e){return this.throwIfDisposed(),Vx(this,t,e)};const Gx=Hh({reciprocal_:function(t){const e=Vh(t,"x","reciprocal"),n={x:e};return Mh.runKernelFunc(((t,n)=>{const r=t.reciprocal(e);return n([e]),r}),n,null,Pu)}});xh.prototype.reciprocal=function(){return this.throwIfDisposed(),Gx(this)},xh.prototype.relu=function(){return this.throwIfDisposed(),lg(this)},xh.prototype.relu6=function(){return this.throwIfDisposed(),Mg(this)},xh.prototype.reshapeAs=function(t){return this.throwIfDisposed(),vp(this,t.shape)},xh.prototype.reshape=function(t){return this.throwIfDisposed(),vp(this,t)},xh.prototype.resizeBilinear=function(t,e){return this.throwIfDisposed(),sm(this,t,e)},xh.prototype.resizeNearestNeighbor=function(t,e){return this.throwIfDisposed(),im(this,t,e)},xh.prototype.reverse=function(t){return this.throwIfDisposed(),ug(this,t)},xh.prototype.rfft=function(){return this.throwIfDisposed(),Dg(this)};const Hx=Hh({round_:function(t){const e=Vh(t,"x","round"),n={x:e};return Mh.runKernelFunc((t=>t.round(e)),n,null,qu)}});xh.prototype.round=function(){return this.throwIfDisposed(),Hx(this)},xh.prototype.rsqrt=function(){return this.throwIfDisposed(),Qy(this)},xh.prototype.selu=function(){return this.throwIfDisposed(),cg(this)},xh.prototype.separableConv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),hg(this,t,e,n,r,s,i)},xh.prototype.sigmoid=function(){return this.throwIfDisposed(),dg(this)};const Kx=Hh({sign_:function(t){const e=Vh(t,"x","sign"),n={x:e};return Mh.runKernelFunc((t=>t.sign(e)),n,null,Qu)}});xh.prototype.sign=function(){return this.throwIfDisposed(),Kx(this)},xh.prototype.sin=function(){return this.throwIfDisposed(),Ly(this)},xh.prototype.sinh=function(){return this.throwIfDisposed(),Py(this)},xh.prototype.slice=function(t,e){return this.throwIfDisposed(),pg(this,t,e)},xh.prototype.softmax=function(t){return this.throwIfDisposed(),bg(this,t)},xh.prototype.softplus=function(){return this.throwIfDisposed(),xg(this)},xh.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Ey(this,t,e)},xh.prototype.split=function(t,e){return this.throwIfDisposed(),vg(this,t,e)},xh.prototype.sqrt=function(){return this.throwIfDisposed(),kg(this)},xh.prototype.square=function(){return this.throwIfDisposed(),Hf(this)},xh.prototype.squaredDifference=function(t){return this.throwIfDisposed(),mm(this,t)},xh.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),fx(this,t)},xh.prototype.squeeze=function(t){return this.throwIfDisposed(),$g(this,t)},xh.prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof xh?[this,t]:[this,...t];return Ig(n,e)},xh.prototype.step=function(t){return this.throwIfDisposed(),Bg(this,t)};const qx=Hh({stridedSlice_:function(t,e,n,r,s=0,i=0,o=0,a=0,l=0){let u=Vh(t,"x","stridedSlice");const c={x:u},h={begin:e,end:n,strides:r,beginMask:s,endMask:i,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:l};return Mh.runKernelFunc((t=>{null==r&&(r=new Array(e.length));const c=zd(o);if(c.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==o&&0!==a)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==o&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const h=u.rank-e.length,d=zd(a),p=u.shape.slice();d.forEach((t=>{e[t]=0,n[t]=1,p.splice(t,0,1)})),u=vp(u,p);const{begin:f,end:g,strides:m}=Gd(u.shape,c,h,e,n,r,s,i,o);e=f,n=g,r=m;const y=zd(l);y.forEach((t=>{n[t]=e[t]+1,r[t]=1}));const b=Pd(e,n,r),x=b.filter(((t,e)=>-1===y.indexOf(e)));if(r.every((t=>1===t)))return vp(pg(u,e,b),x);const w=t.stridedSlice(u,e,n,r);return vp(w,x)}),c,null,"StridedSlice",h)}});xh.prototype.stridedSlice=function(t,e,n,r,s,i,o,a){return this.throwIfDisposed(),qx(this,t,e,n,r,s,i,o,a)},xh.prototype.subStrict=function(t){return this.throwIfDisposed(),gx(this,t)},xh.prototype.sub=function(t){return this.throwIfDisposed(),_f(this,t)},xh.prototype.sum=function(t,e){return this.throwIfDisposed(),Of(this,t,e)};const jx=Hh({tan_:function(t){const e=Vh(t,"x","tan"),n={x:e};return Mh.runKernelFunc(((t,n)=>{const r=t.tan(e);return n([e]),r}),n,null,"Tan")}});xh.prototype.tan=function(){return this.throwIfDisposed(),jx(this)},xh.prototype.tanh=function(){return this.throwIfDisposed(),Sg(this)},xh.prototype.tile=function(t){return this.throwIfDisposed(),gf(this,t)},xh.prototype.toBool=function(){return this.throwIfDisposed(),Nd(this,"bool")},xh.prototype.toFloat=function(){return this.throwIfDisposed(),Nd(this,"float32")},xh.prototype.toInt=function(){return this.throwIfDisposed(),Nd(this,"int32")};const Xx=Hh({topk_:function(t,e=1,n=!0){const r=Vh(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const i={x:r},o={k:e,sorted:n},[a,l]=Mh.runKernelFunc((t=>t.topk(r,e,n)),i,null,"TopK",o);return{values:a,indices:l}}});let Yx;function Jx(){return null==Yx&&(Yx=Mh.backend.epsilon()),Yx}xh.prototype.topk=function(t,e){return this.throwIfDisposed(),Xx(this,t,e)},xh.prototype.transpose=function(t){return this.throwIfDisposed(),kp(this,t)},xh.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),eb(this,t,e)},xh.prototype.unstack=function(t){return this.throwIfDisposed(),Cg(this,t)},xh.prototype.where=function(t,e){return this.throwIfDisposed(),Rg(t,this,e)},xh.prototype.zerosLike=function(){return this.throwIfDisposed(),Jf(this)};class Zx extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Zx.prototype)}}class Qx extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Qx.prototype)}}class tw extends Error{constructor(t){super(t),Object.setPrototypeOf(this,tw.prototype)}}class ew extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ew.prototype)}}class nw extends Error{constructor(t){super(t),Object.setPrototypeOf(this,nw.prototype)}}function rw(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function sw(t,e){if(!t)throw new nw(e)}function iw(t,e){let n=0;for(const r of t)r===e&&n++;return n}function ow(t){return 1===t.length?t[0]:t}function aw(t){return Array.isArray(t)?t:[t]}function lw(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function uw(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}Error;let cw={};function hw(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function dw(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach((t=>dw(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?dw(e):t[n]=e.value)}}}function pw(t,e={},n={},r="object",s=!1){if("string"==typeof t){const s=t;let i;if(s in n)i=n[s];else if(s in cw)i=cw[s];else if(i=e[s],null==i)throw new tw(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=t;if(null==i.className||null==i.config)throw new tw(`${r}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const o=i.className;let a,l;if(o in n?[a,l]=n[o]:o in cw?[a,l]=cw.className:o in e&&([a,l]=e[o]),null==a)throw new tw(`Unknown ${r}: ${o}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const t={};for(const e of Object.keys(cw))t[e]=cw[e];for(const e of Object.keys(n))t[e]=n[e];i.config.customObjects=t;const e=Object.assign({},cw);for(const t of Object.keys(n))cw[t]=n[t];dw(i.config);const r=l(a,i.config,n,s);return cw=Object.assign({},e),r}{const t=Object.assign({},cw);for(const t of Object.keys(n))cw[t]=n[t];const e=new a(i.config);return cw=Object.assign({},t),e}}}function fw(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function gw(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function mw(t){if(null==t)throw new tw(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function yw(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new tw(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function bw(t,e,n=0,r=1/0){return sw(n>=0),sw(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every((t=>typeof t===e))}function xw(t,e){Array.isArray(t)?(Rc(t.length>0,(()=>`${e} is unexpectedly an empty array.`)),t.forEach(((t,n)=>xw(t,`element ${n+1} of ${e}`)))):Rc(Number.isInteger(t)&&t>0,(()=>`Expected ${e} to be a positive integer, but got ${ww(t)}.`))}function ww(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>ww(t))).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function vw(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function kw(t,e){return ip((()=>kg(Of(Rf(t,t),e,!0))))}class $w extends Qd{getConfig(){return{}}}class Iw extends $w{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return ip((()=>{const e=kw(t,this.axis),n=Kp(e,0,this.maxValue);return Rf(t,lf(n,dp(Jx(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Iw.className="MaxNorm",ep(Iw);class Sw extends $w{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return ip((()=>lf(t,dp(Jx(),kw(t,this.axis)))))}getConfig(){return{axis:this.axis}}}Sw.className="UnitNorm",ep(Sw);class Ew extends $w{apply(t){return lg(t)}}Ew.className="NonNeg",ep(Ew);class Cw extends $w{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return ip((()=>{const e=kw(t,this.axis),n=dp(Rf(this.rate,Kp(e,this.minValue,this.maxValue)),Rf(1-this.rate,e));return Rf(t,lf(n,dp(Jx(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Cw.className="MinMaxNorm",ep(Cw);const Nw={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Rw(t){return hw(t)}function Aw(t,e={}){return pw(t,tp.getMap().classNameMap,e,"constraint")}function Tw(t){return null==t?null:"string"==typeof t?Aw({className:t in Nw?Nw[t]:t,config:{}}):t instanceof $w?t:Aw(t)}const Dw=["channelsFirst","channelsLast"],Fw=["valid","same","causal"],_w=["max","avg"],Ow=["sum","mul","concat","ave"],Mw=new Map;function Bw(t){yw(Dw,"DataFormat",t)}function Lw(t){yw(Fw,"PaddingMode",t)}function zw(t){yw(_w,"PoolMode",t)}const Pw=[];function Ww(t,e){Pw.push(t);try{const t=e();return Pw.pop(),t}catch(t){throw Pw.pop(),t}}function Uw(t){if(!Hw(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===Pw.length?"":Pw.join("/")+"/")+t}function Vw(t){if(!Hw(t))throw new Error("Not a valid tensor name: '"+t+"'");Mw.has(t)||Mw.set(t,0);const e=Mw.get(t);if(Mw.set(t,Mw.get(t)+1),e>0){const n=`${t}_${e}`;return Mw.set(n,1),n}return t}const Gw=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Hw(t){return!!t.match(Gw)}function Kw(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let s=e;s<n;++s)r*=t[s];return r}function qw(t){return og(t=Array.isArray(t)?new Float32Array(t):t)}function jw(t){return Vf(qw(t)).dataSync()[0]}function Xw(t){return Ff(qw(t)).dataSync()[0]}function Yw(t,e){if(e<t)throw new tw(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}function Jw(t,e){return t.asType(e)}function Zw(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function Qw(t,e,n){return ip((()=>{switch(t.rank){case 1:return fg(t,e,n);case 2:return gg(t,[e,0],[n,t.shape[1]]);case 3:return mg(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return yg(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return pg(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return pg(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new tw(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function tv(t,e,n){return ip((()=>{switch(t.rank){case 1:return fg(t,e,n);case 2:return gg(t,[0,e],[t.shape[0],n]);case 3:return mg(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return yg(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new tw(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function ev(t,e,n,r){return ip((()=>{switch(t.rank){case 1:return fg(t,e,n);case 2:switch(r){case 1:return Qw(t,e,n);case 2:return tv(t,e,n);default:throw new tw(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Qw(t,e,n);case 2:return mg(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return tv(t,e,n);default:throw new tw(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Qw(t,e,n);case 2:return yg(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return yg(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return tv(t,e,n);default:throw new tw(`The axis is not within the rank of the tensor ${r}`)}default:throw new tw(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function nv(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),Xp(t,e)}function rv(t,e){switch(t.rank){case 1:return Yp([t,e]);case 2:return Jp([t,e],0);case 3:return Zp([t,e],0);case 4:return Qp([t,e],0);default:throw new tw(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function sv(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new tw(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return gf(t,e)}function iv(t,e=0,n=1,r,s){return sg(t,e,n,r,s)}function ov(t,e,n,r){if(t.rank<2||e.rank<2)throw new ew(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3&&t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new ew(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`);if(2===t.rank&&2===e.rank)return Kg({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?uv(t.rank,r,"channelsLast"):null,activation:n});{const s=t.shape.slice(),i=s.pop();t=t.reshape([-1,i]);const o=e.shape.slice(),a=o.pop(),l=o.pop(),u=[...o,a],c=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=e.transpose(c).reshape([l,-1]);const h=[...s,...u];return Kg({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?uv(t.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function av(t,e,n){return ip((()=>(e=Array.isArray(e)?og(e,"int32"):e.toInt(),If(t,e,n))))}function lv(t){return Rf(t,t)}function uv(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new tw(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1,1]):e.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,1,r[0]]):e.reshape([1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1]):e.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,r[0]]):e.reshape([1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1]):e.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,r[0]]):e.reshape([1].concat(r))}else if(t<3)return e;throw new tw(`Unsupported input rank by biasAdd: ${e.rank}`)}function cv(t,e,n){return ip((()=>(null==n&&(n="channelsLast"),Bw(n),t.add(uv(t.rank,e,n)))))}function hv(t,e,n,r){return ip((()=>Ag(t,e,n,r)))}function dv(t,e,n=!1){return n?t():e()}const pv=["fanIn","fanOut","fanAvg"],fv=["normal","uniform","truncatedNormal"];class gv extends Qd{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class mv extends gv{apply(t,e){return Pf(t,e)}}mv.className="Zeros",ep(mv);class yv extends gv{apply(t,e){return Wf(t,e)}}yv.className="Ones",ep(yv);class bv extends gv{constructor(t){if(super(),"object"!=typeof t)throw new tw(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new tw(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return ip((()=>Rf(up(this.value),Wf(t,e))))}getConfig(){return{value:this.value}}}bv.className="Constant",ep(bv);class xv extends gv{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return ig(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}xv.className="RandomUniform",ep(xv);class wv extends gv{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new ew(`randomNormal does not support dType ${e}.`);return iv(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}wv.className="RandomNormal",ep(wv);class vv extends gv{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new ew(`truncatedNormal does not support dType ${e}.`);return Eg(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}vv.className="TruncatedNormal",ep(vv);class kv extends gv{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return ip((()=>{if(2!==t.length||t[0]!==t[1])throw new tw("Identity matrix initializer can only be used for 2D square matrices.");return Rf(this.gain,mf(t[0]))}))}getConfig(){return{gain:this.gain}}}kv.className="Identity",ep(kv);class $v extends gv{constructor(t){if(super(),t.scale<0)throw new tw(`scale must be a positive float. Got: ${t.scale}`);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,yw(pv,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){yw(fv,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(Bw(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=Kw(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=Kw(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=Kw(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),r=n[0],s=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,s):i/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new ew(`${this.getClassName()} does not support dType ${e}.`);return Eg(t,0,n,e,this.seed)}{const n=Math.sqrt(3*i);return ig(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}$v.className="VarianceScaling",ep($v);class Iv extends $v{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return $v.className}}Iv.className="GlorotUniform",ep(Iv);class Sv extends $v{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return $v.className}}Sv.className="GlorotNormal",ep(Sv);class Ev extends $v{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return $v.className}}Ev.className="HeNormal",ep(Ev);class Cv extends $v{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return $v.className}}Cv.className="HeUniform",ep(Cv);class Nv extends $v{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return $v.className}}Nv.className="LeCunNormal",ep(Nv);class Rv extends $v{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return $v.className}}Rv.className="LeCunNormal",ep(Rv);class Av extends gv{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new ew("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return ip((()=>{if(t.length<2)throw new ew("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=iv(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=xm.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),Rf(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Av.className="Orthogonal",ep(Av);const Tv={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Dv(t,e={}){return pw(t,tp.getMap().classNameMap,e,"initializer")}function Fv(t){return hw(t)}function _v(t){if("string"==typeof t){const e=t in Tv?Tv[t]:t;if("GlorotNormal"===e)return new Sv;if("GlorotUniform"===e)return new Iv;if("HeNormal"===e)return new Ev;if("HeUniform"===e)return new Cv;if("LeCunNormal"===e)return new Nv;if("LeCunUniform"===e)return new Rv;{const t={};return t.className=e,t.config={},Dv(t)}}return t instanceof gv?t:Dv(t)}let Ov=0;function Mv(){return Ov++}const Bv={};function Lv(t=""){return t in Bv||(Bv[t]=0),Bv[t]+=1,t+Bv[t].toString()}function zv(t){return Array.isArray(t)&&Array.isArray(t[0])}function Pv(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function Wv(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new tw(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function Uv(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new tw(`Expected exactly 1 Shape; got ${t.length}`)}return t}function Vv(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}class Gv{constructor(t,e="float32",n="Variable",r=!0,s=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=Mv(),n=null==n?"Variable":n,this.originalName=Uw(n),this.name=Vw(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(t,e=!0,n,r){return Mh.makeVariable(t,e,n,r)}(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function Hv(t){return t.map((t=>t.read()))}function Kv(t){t.forEach((t=>{t[0].write(t[1])}))}class qv{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class jv{constructor(t,e,n,r,s,i,o){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=o,this.id=Mv(),null!=i&&(this.originalName=Uw(i),this.name=Vw(this.originalName)),this.rank=e.length}}let Xv=0;class Yv{constructor(t,e){this.callArgs=e,this.id=Xv++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Jv=0;class Zv extends Qd{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Jv++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=lw(t)+"_"+Lv(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new Qx(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new tw(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return ow(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return ow(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Zx(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Zx(`Layer ${this.name} is not connected, no input to return.`);return ow(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Zx(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Zx(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ow(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=aw(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=aw(this.inputSpec);if(t.length!==e.length)throw new tw(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const r=t[n],s=e[n];if(null==s)continue;const i=r.rank;if(null!=s.ndim&&i!==s.ndim)throw new tw(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(null!=s.maxNDim&&i>s.maxNDim)throw new tw(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(null!=s.minNDim&&i<s.minNDim)throw new tw(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new tw(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const e in s.axes){const r=Number(e),i=s.axes[e],o=r>=0?t[r]:t[t.length+r];if(null!=i&&-1===[i,null].indexOf(o))throw new tw(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${i} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const e=s.shape[t],i=r.shape[t];if(null!=e&&null!=i&&e!==i)throw new tw(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=aw(t);let r=!0;for(const t of n)if(!(t instanceof jv)){r=!1;break}let s=!0;for(const t of n)if(t instanceof jv){s=!1;break}if(r===s)throw new tw("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ww(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of aw(t))e.push(n.shape);this.build(ow(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let r=this.call(t,e);const s=aw(r),i=[];for(let t of s)-1!==n.indexOf(t)&&(t=t.clone()),i.push(t);if(r=ow(i),null!=this.activityRegularizer)throw new ew("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=aw(t);const e=[];for(const n of t)e.push(n.shape);return ow(e)}(t),r=this.computeOutputShape(n);let s;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new jv(i,n,this,aw(t),e,this.name,r))):new jv(i,r,this,aw(t),e,this.name),this.addInboundNode(t,s,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new ew("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)})),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Zx(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new Zx(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Qx(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Vv(this.weights)}build(t){this.built=!0}getWeights(t=!1){return Hv(t?this.trainableWeights:this.weights)}setWeights(t){ip((()=>{const e=this.weights;if(e.length!==t.length)throw new tw(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=Hv(e);for(let s=0;s<r.length;++s){const i=r[s],o=e[s],a=t[s];if(!_c(i.shape,a.shape))throw new tw(`Layer weight shape ${i.shape} not compatible with provided weight shape ${a.shape}`);n.push([o,a])}Kv(n)}))}addWeight(t,e,n,r,s,i,o){if(-1!==this._addedWeightNames.indexOf(t))throw new tw(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=_v("zeros"));const a=r.apply(e,n),l=new Gv(a,n,t,i,o);return a.dispose(),null!=s&&this.addLoss((()=>s.apply(l.read()))),null==i&&(i=!0),i?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=aw(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach((t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return e}addInboundNode(t,e,n,r,s,i,o=null){const a=aw(t);e=aw(e),n=aw(n),r=aw(r),s=Pv(s),i=Pv(i);const l=[],u=[],c=[];for(const t of a)l.push(t.sourceLayer),u.push(t.nodeIndex),c.push(t.tensorIndex);new Yv({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:a,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:i},o);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function Qv(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const r=Qv(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of r)-1===e.indexOf(t)&&e.push(t)}return e}}}class tk extends Zv{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:Lv("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new tw("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new tw("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new tw("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new jv(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Yv({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new tw(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function ek(t){if(null==t)return;const e=[],n=[],r=[];for(const s in t){const i=t[s];if("number"!=typeof i){const t=i;e.push(t.data()),n.push(s),r.push(t)}}if(e.length>0){const s=await Promise.all(e);for(let e=0;e<s.length;++e)t[n[e]]=s[e][0];op(r)}}function nk(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var rk;tk.className="InputLayer",ep(tk),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(rk||(rk={}));class sk{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class ik{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class ok extends sk{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const r=e[t];if("number"==typeof r)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+r*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const s=ip((()=>dp(this.totals[t],Rf(r,n))));this.totals[t]=s,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:ip((()=>{const n=Rf(lf(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),ap(e[t])})))}}class ak extends sk{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const s=this.history[r];for(let i=0;i<s.length;++i)if("number"!=typeof s[i]){const o=s[i];t.push(o.data()),e.push(r),n.push(i)}}const r=await Promise.all(t);for(let t=0;t<r.length;++t)this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=r[t][0]}}class lk extends sk{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Kc(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,r=nh();return(...s)=>{const i=nh();return i-r<e||(r=i,n=t(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await ek(n),r.push(this.yield(t,e,n))),r.push(Am()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await ek(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await ek(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(Am()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await ek(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await ek(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(Am()):Kc(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await ek(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await ek(t),await this.trainEnd(t))}}function uk(t,e){return null==t&&(t={}),t instanceof sk?[t]:Array.isArray(t)&&t[0]instanceof sk?t:aw(t).map((t=>new lk(t,e)))}class ck{constructor(){}static registerCallbackConstructor(t,e){Rc(t>=0&&Number.isInteger(t),(()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`)),ck.checkForDuplicate(e),null==ck.constructors[t]&&(ck.constructors[t]=[]),ck.constructors[t].push(e)}static checkForDuplicate(t){for(const e in ck.constructors)ck.constructors[+e].forEach((e=>{if(e===t)throw new tw("Duplicate callback constructor.")}))}static clear(){ck.constructors={}}static createCallbacks(t){const e=[];for(const n in ck.constructors){const r=+n;t>=r&&e.push(...ck.constructors[r])}return e.map((t=>new t))}}function hk(t,e,n,r,s,i,o,a,l){const u=new ak,c=[new ok,...ck.createCallbacks(e)];null!=t&&c.push(...t),c.push(u);const h=new ik(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:i,batchSize:o,verbose:e,doValidation:a,metrics:l}),{callbackList:h,history:u}}function dk(t,e={},n=!1){return pw(t,tp.getMap().classNameMap,e,"layer",n)}function pk(t,e){return ip((()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=Of(lv(t),e,!0),r=yf(n.shape,Jx()),s=kg(Nf(n,r));return lf(t,s)}))}function fk(t,e){return ip((()=>Uf(lv(_f(e,t)),-1)))}function gk(t,e){return ip((()=>Uf(hp(_f(e,t)),-1)))}function mk(t,e){return ip((()=>{const n=_f(t,e),r=Kp(hp(t),Jx(),Number.MAX_VALUE),s=hp(lf(n,r));return Rf(100,Uf(s,-1))}))}function yk(t,e,n=!1){return ip((()=>{if(n)e=bg(e);else{const t=Of(e,e.shape.length-1,!0);e=lf(e,t)}return e=Kp(e,Jx(),1-Jx()),qf(Of(Rf(t.toFloat(),Tf(e)),e.shape.length-1))}))}function bk(t,e,n=!1){return ip((()=>{const r=bf(function(t){const e=[Kw(t.shape)];return t.reshape(e)}(t)).toInt(),s=(e=Kp(e,Jx(),1-Jx())).shape;return yk(Xf(r,s[s.length-1]).reshape(s),e,n)}))}function xk(t,e){return ip((()=>{let n;return n=Kp(e,Jx(),1-Jx()),n=Tf(lf(n,_f(1,n))),Uf(function(t,e){if(!_c(t.shape,e.shape))throw new tw(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return ip((()=>{const n=e.relu(),r=e.abs().neg();return n.sub(e.mul(t)).add(r.exp().log1p())}))}(t,n),-1)}))}function wk(t,e){return ip((()=>{const n=pk(t,-1),r=pk(e,-1),s=Rf(n,r);return qf(Of(s,-1))}))}ck.constructors={};const vk={meanSquaredError:fk,meanAbsoluteError:gk,meanAbsolutePercentageError:mk,meanSquaredLogarithmicError:function(t,e){return ip((()=>{const n=Kp(e,Jx(),Number.MAX_VALUE),r=Tf(dp(1,n)),s=Kp(t,Jx(),Number.MAX_VALUE),i=Tf(dp(1,s));return Uf(lv(_f(r,i)),-1)}))},squaredHinge:function(t,e){return ip((()=>{const n=Nf(0,_f(1,Rf(t,e)));return Uf(lv(n),-1)}))},hinge:function(t,e){return ip((()=>{const n=Nf(0,_f(1,Rf(t,e)));return Uf(n,-1)}))},categoricalHinge:function(t,e){return ip((()=>{const n=Of(Rf(t,e),-1),r=Ff(Rf(_f(1,t),e),-1);return Nf(0,dp(1,_f(r,n)))}))},logcosh:function(t,e){return ip((()=>{const n=Math.log(2),r=_f(e,t),s=_f(dp(r,xg(Rf(-2,r))),n);return Uf(s,-1)}))},categoricalCrossentropy:yk,sparseCategoricalCrossentropy:bk,binaryCrossentropy:xk,kullbackLeiblerDivergence:function(t,e){return ip((()=>{const n=Kp(t,Jx(),1),r=Kp(e,Jx(),1);return Of(Rf(t,Tf(lf(n,r))),-1)}))},poisson:function(t,e){return ip((()=>{const n=Tf(dp(Jx(),e));return Uf(_f(e,Rf(t,n)),-1)}))},cosineProximity:wk};function kk(t){if("string"==typeof t){if(t in vk)return vk[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new tw(e)}return t}function $k(t,e){return ip((()=>{const n=Rf(.5,Zf(e)),r=Jw(Sf(e,n),t.dtype);return Uf(pf(t,r),-1)}))}function Ik(t,e){return ip((()=>Jw(pf(Sp(t,-1),Sp(e,-1)),"float32")))}function Sk(t,e){return xk(t,e)}function Ek(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),pf(t,e).asType("float32")}const Ck=yk,Nk=bk,Rk={binaryAccuracy:$k,categoricalAccuracy:Ik,precision:function(t,e){return ip((()=>{const n=function(t,e){return ip((()=>Bf(t.equal(1),e.equal(1)).sum().cast("float32")))}(t,e),r=function(t,e){return ip((()=>Bf(t.equal(0),e.equal(1)).sum().cast("float32")))}(t,e),s=n.add(r);return Rg(Sf(s,0),n.div(s),0).cast("float32")}))},categoricalCrossentropy:Ck,sparseCategoricalCrossentropy:Nk,mse:fk,MSE:fk,mae:gk,MAE:gk,mape:mk,MAPE:mk,cosine:wk};function Ak(t){if("string"==typeof t&&t in Rk)return Rk[t];if("string"!=typeof t&&null!=t)return t;throw new tw(`Unknown metric ${t}`)}function Tk(t){if(sw(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(const n of Object.keys(vk))if(vk[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Rk))if(Rk[n]===t){e=n;break}return void 0!==e?e:t.name}}function Dk(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!Fk(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Fk(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!Fk(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!Fk(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function _k(t,e,n=console.log){let r="";for(let n=0;n<t.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=t[n],r=r.slice(0,e[n]),r+=" ".repeat(e[n]-r.length);n(r)}function Ok(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}_k([`${t.name} (${t.getClassName()})`,r,t.countParams().toString()],e,n)}function Mk(t,e,n,r){let s;try{s=JSON.stringify(t.outputShape)}catch(t){s="multiple"}const i=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,r=e.nodeIndices[t],s=e.tensorIndices[t];i.push(`${n}[${r}][${s}]`)}const o=t.name,a=t.getClassName(),l=0===i.length?"":i[0];_k([`${o} (${a})`,s,t.countParams().toString(),l],e,r);for(let t=1;t<i.length;++t)_k(["","","",i[t]],e,r)}function Bk(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function Lk(t,e){if(null===t)return null;if("string"==typeof t)return uw(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];Bk(e,s,r)?n.push(r):n.push(Lk(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"==typeof r)e[n]=r;else{const t=uw(n);e[t]=Lk(r,t)}}return e}}function zk(t,e){if(null==t)return null;if("string"==typeof t)return lw(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];Bk(e,s,r)?n.push(r):n.push(zk(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];e[lw(n)]="name"!==n&&"className"!==n||"string"!=typeof r?zk(r,n):r}return e}}class Pk{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Pk)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new tw(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Nd(e,t.dtype)}catch(n){throw new tw(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof jv){if(null==this.id2Value[t.id])throw new tw(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new tw(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof jv){if(null==this.id2Value[t.id])throw new tw(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new tw(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&op(this.id2Mask)}}const Wk={},Uk={};function Vk(t,e,n,r){const s=null!=n&&n.training,i=Array.isArray(t),o=i?t:[t],a=o.map((t=>t.name)),l=[],u=e.names();for(const t of a)-1!==u.indexOf(t)?l.push(e.getValue(t)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=a.join(",")+"|"+e.names().join(",");let h,d;if(null==Wk[c]){const t=function(t,e){Rc(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===t.length){const s=Hk(t[0],e);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const i of t){const{sorted:t,recipientMap:o}=Hk(i,e);for(const e of t)s.has(e.name)||(n.push(e),s.add(e.name));for(const t in o)null==r[t]&&(r[t]=new Set),o[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:Gk(r)}}(o,e);h=t.sorted,d=t.recipientCounts,Wk[c]=h,Uk[c]=d}h=Wk[c],d={},s||Object.assign(d,Uk[c]);const p=new Pk(e);for(let t=0;t<h.length;++t){if(null!=r){const t=sp().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const i=h[t],o=i.sourceLayer;if(o instanceof tk)continue;const u=[],c=[],f=[];let g=!1;for(const t of i.inputs){const n=p.getValue(t),r=p.getMask(t);u.push(n),c.push(r),null!=r&&(g=!0),s||(d[t.name]--,0!==d[t.name]||e.hasKey(t)||-1!==a.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||f.push(n))}g&&((n=n||{}).mask=c[0]);const m=aw(o.apply(u,n));let y=null;o.supportsMasking&&(y=o.computeMask(u,c));const b=Kk(i),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){p.hasKey(x[t])||p.add(x[t],m[t],Array.isArray(y)?y[0]:y);const e=a.indexOf(x[t].name);-1!==e&&(l[e]=m[t])}s||op(f)}return p.disposeMasks(),i?l:l[0]}function Gk(t){const e={};for(const n in t)e[n]=t[n].size;return e}function Hk(t,e){const n=new Set,r=[],s={};for(const t of e.names())n.add(t);const i=[],o=[];for(i.push(t);i.length>0;){const t=i[i.length-1];if(n.has(t.name)){i.pop();continue}const e=o[o.length-1]===i.length-1;if(0===t.inputs.length||e)i.pop(),r.push(t),n.add(t.name),e&&o.pop();else{o.push(i.length-1);for(const e of t.inputs)null==s[e.name]&&(s[e.name]=new Set),s[e.name].add(t.name),n.has(e.name)||i.push(e)}}return{sorted:r,recipientMap:s}}function Kk(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class qk extends Zv{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=Lv(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],gw(this.inputs).length!==this.inputs.length)throw new tw(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((t=>t.name))}`);gw(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((t=>t.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;sw(0===n,"input layer has >1 nodes"),sw(0===r,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof tk))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},r={},s={},i={},o=[],a=(t,e,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=t.sourceLayer,s=t.nodeIndex,l=t.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new Qx(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(u))return;this.containerNodes.add(qk.nodeKey(r,s)),r.id in i||(i[r.id]=Object.keys(i).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let t=0;t<c;t++){const r=u.inputTensors[t],s=u.inboundLayers[t],i=u.nodeIndices[t],o=u.tensorIndices[t];a(r,e,n,s,i,o)}for(e.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);o.push(u)},l=[],u=[];for(const t of this.outputs)a(t,l,u);const c=o.slice().reverse();for(const t of c){n[t.id]=t,t.id in e||(e[t.id]=0);let i=e[t.id];const o=null==r[t.outboundLayer.id]?0:r[t.outboundLayer.id];i=Math.max(i,o),r[t.outboundLayer.id]=i,s[t.outboundLayer.id]=t.outboundLayer,e[t.id]=i;for(let r=0;r<t.inboundLayers.length;r++){const s=t.inboundLayers[r],o=t.nodeIndices[r],a=s.inboundNodes[o],l=null==e[a.id]?0:e[a.id];e[a.id]=Math.max(i+1,l),n[a.id]=a}}const h={};for(const t in e){const r=e[t];r in h||(h[r]=[]),h[r].push(n[t])}const d={};for(const t in r){const e=r[t];e in d||(d[e]=[]),d[e].push(s[t])}let p=Object.keys(d).map((t=>parseInt(t,10))).sort(fw);this.layers=[];for(const t of p){const e=d[t];e.sort(((t,e)=>{const n=i[t.id],r=i[e.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof qk&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map((t=>parseInt(t,10))).sort(fw);const f=this.inputs.slice(),g=[];for(const t of p)for(const e of h[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Qx(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${g}`);for(const t of e.outputTensors)f.push(t);g.push(t.name)}}this.nodesByDepth=h;const m=this.layers.map((t=>t.name));for(const t of m){const e=m.filter((e=>e===t)).length;if(1!==e)throw new Qx(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new Yv({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new tw("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new tw(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,r++}const s=[];for(const r in t){let i=r;if(null==n[r]){const t=r.split("/");i=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[i])s.push([n[i],t[r]]);else if(e)throw new tw(`Provided weight data has no target variable: ${r}`);delete n[i]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new tw(`${t.length} of ${r} weights are not set: ${t}`)}Kv(s)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 2.4.0",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=zk(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return ip((()=>{t=aw(t);const n=new Pk;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return Vk(this.outputs,n,e)}))}computeMask(t,e){return ip((()=>{let n;return t=aw(t),n=null==e?rw(null,t.length):aw(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=Pv(t);if(e.length!==this.inputLayers.length)throw new tw(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const r=this.inputLayers[t],s=e[t];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(fw);if(r.length>1)for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(e.id))continue;const r=[];for(let e=0;e<t.inboundLayers.length;e++){const s=t.inboundLayers[e],i=t.nodeIndices[e],o=t.tensorIndices[e],a=n[`${s.name}_${i}_${o}`];r.push(a)}const s=Pv(e.computeOutputShape(ow(r))),i=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++)n[`${e.name}_${i}_${t}`]=s[t]}}const s=[],i=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],r=this.outputLayersTensorIndices[t],s=`${e.name}_${n}_${r}`;i.push(s)}for(let t=0;t<i.length;t++){const e=i[t];sw(e in n),s.push(n[e])}return ow(s)}runInternalGraph(t,e){null==e&&(e=rw(null,t.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],i=t[r],o=e[r];n[s.id]=[i,o]}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(fw);for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,i=new Array;for(const t of r)t.id in n&&i.push(n[t.id]);if(i.length===r.length){let r,o,a,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===i.length){const[t,n]=i[0];null==u.mask&&(u.mask=n),a=aw(e.call(t,u)),l=aw(e.computeMask(t,n)),r=[t],o=[n]}else r=i.map((t=>t[0])),o=i.map((t=>t[1])),null==u.mask&&(u.mask=o),a=aw(e.call(r,u)),l=aw(e.computeMask(r,o));if(e.activityRegularizer)throw new ew("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<s.length;++t){const e=s[t],r=a[t],i=l[t];n[e.id]=[r,i]}}}}const s=[],i=[],o=[];for(const t of this.outputs){sw(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,r]=n[t.id];o.push(e.shape),s.push(e),i.push(r)}return[s,i,o]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof qk?1:0;for(let r=0;r<t.inboundNodes.length;r++){const s=qk.nodeKey(t,r);this.containerNodes.has(s)&&(e[s]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new tw(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new tw("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new tw(`No such layer: ${t}`)}calculateLosses(){return ip((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=qk.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const r=t.getClassName(),s=t.getConfig(),i=[];for(let n=0;n<t.inboundNodes.length;n++){const r=t.inboundNodes[n],s=qk.nodeKey(t,n);let o={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),o=r.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),o={}}if(r.inboundLayers.length>0){const t=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],i=r.nodeIndices[n],a=r.tensorIndices[n];let l=e[qk.nodeKey(s,i)];null==l&&(l=0),t.push([s.name,l,a,o])}i.push(t)}}}const o={};o.name=t.name,o.className=r,o.config=s,o.inboundNodes=i,n.push(o)}t.layers=n;const r=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],s=this.inputLayersNodeIndices[t],i=qk.nodeKey(n,s);if(!this.containerNodes.has(i))continue;let o=e[i];null==o&&(o=0);const a=this.inputLayersTensorIndices[t];r.push([n.name,o,a])}t.inputLayers=r;const s=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],r=this.outputLayersNodeIndices[t],i=qk.nodeKey(n,r);if(!this.containerNodes.has(i))continue;let o=e[i];null==o&&(o=0);const a=this.outputLayersTensorIndices[t];s.push([n.name,o,a])}return t.outputLayers=s,t}static fromConfig(t,e,n={},r=!1){const s={},i={};function o(t,e){t.name in i?i[t.name].push(e):i[t.name]=[e]}function a(t,e){const n=[];let r;for(const i of e){const a=i[0],l=i[1],u=i[2];if(r=null==i[3]?{}:i[3],!(a in s))return void o(t,e);const c=s[a];if(c.inboundNodes.length<=l)return void o(t,e);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&t.apply(ow(n),r)}function l(t){const n=t.name,i=dk(t,null!=e.customObjects?e.customObjects:{});i.setFastWeightInitDuringBuild(r),s[n]=i,t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new tw(`Corrupted configuration, expected array for nodeData: ${t}`);o(i,t)}))}const u=e.name,c=e.layers;for(const t of c)l(t);for(;!mw(i);)for(const t of c){const e=s[t.name];if(e.name in i){const t=i[e.name];delete i[e.name];for(const n of t)a(e,n)}}const h=[],d=[],p=e.inputLayers;for(const t of p){const e=t[0],n=t[1],r=t[2];sw(e in s);const i=s[e].inboundNodes[n].outputTensors;h.push(i[r])}const f=e.outputLayers;for(const t of f){const e=t[0],n=t[1],r=t[2];sw(e in s);const i=s[e].inboundNodes[n].outputTensors;d.push(i[r])}return new t({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new tw("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){ip((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function jk(t,e){return function(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===r)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}async function Xk(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=ip((()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await e.data());op(e);const s=[];return r.forEach((t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);s.push(n[t])})),og(s,"float32")}return null}function Yk(t,e){return Rf(t,e)}function Jk(t,e){let n,r;const s=e;n=s.xs,r=s.ys,Rc(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`));const i=Zk("input",t.inputNames,n),o=Zk("output",t.outputNames,r),a=i[0].shape[0];Rc(i.length===t.inputs.length,(()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`)),Rc(o.length===t.outputs.length,(()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`));for(let e=0;e<i.length;e++)Rc(i[e].shape[0]===a,(()=>`Batch size mismatch: input ${t.inputNames[e]} has ${i[e].shape[0]}; expected  ${a} based on input ${t.inputNames[0]}.`));for(let e=0;e<o.length;e++)Rc(o[e].shape[0]===a,(()=>`Batch size mismatch: output ${t.outputNames[e]} has ${o[e].shape[0]}; expected  ${a} based on input ${t.inputNames[0]}.`));return{xs:i,ys:o}}function Zk(t,e,n){if(n instanceof xh)return[n];if(Array.isArray(n))return Rc(n.length===e.length,(()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`)),n;{const r=[];for(const s of e){if(null==n[s])throw new tw(`The feature data generated by the dataset lacks the required ${t} key '${s}'.`);r.push(n[s])}return r}}function Qk(t){return"function"==typeof t.iterator}function t$(t){Rc(t>0&&Number.isInteger(t),(()=>`batchSize is required to be a positive integer, but got ${t}`))}function e$(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>Qw(t,e,n-e))):Qw(t,e,n-e)}function n$(t,e){return ip((()=>null==t?null:Array.isArray(t)?t.map((t=>n$(t,e))):av(t,"int32"===e.dtype?e:e.toInt())))}function r$(t,e){const n=[];let r=0,s=null;for(;r<t;)s=r+e,s>=t&&(s=t),n.push([r,s]),r=s;return n}function s$(t){const e=[];t instanceof xh&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(Zw(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function i$(t,e){if(null==t)return;const n=[];if(e instanceof xh)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const t in e){const r=e[t];n.push(r.id)}const r=[];if(t instanceof xh)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&r.push(t)}));else if(null!=t)for(const e in t){const s=t[e];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((t=>{t.isDisposed||t.dispose()}))}function o$(t){return Array.isArray(t)}function a$(t){return!function(t){return t instanceof xh}(t)&&!o$(t)}function l$(t,e,n,r=!0,s=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(o$(t)&&t.length>0)e=!0;else if(a$(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new tw(`Error when checking model ${s} expected no data, but got ${t}`)}return[]}if(null==t)return e.map((t=>null));let i;if(a$(t)){t=t,i=[];for(const n of e){if(null==t[n])throw new tw(`No data provided for "${n}". Need data for each key in: ${e}`);i.push(t[n])}}else if(o$(t)){if((t=t).length!==e.length)throw new tw(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);i=t}else{if(t=t,e.length>1)throw new tw(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);i=[t]}if(i=s$(i),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const o=i[t];if(o.shape.length!==n[t].length)throw new tw(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape ${o.shape}`);for(let i=0;i<n[t].length;++i){if(0===i&&!r)continue;const a=o.shape[i],l=n[t][i];if(null!=l&&l>=0&&a!==l)throw new tw(`Error when checking ${s}: expected ${e[t]} to have shape [${n[t]}], but got array with shape [${o.shape}].`)}}return i}function u$(t,e,n,r=!0,s=""){let i;if(Array.isArray(t)){if(t.length!==e.length)throw new tw(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);i=t}else{if(e.length>1)throw new tw(`The model expects ${e.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);i=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const o=i[t];if(o.shape.length!==n[t].length)throw new tw(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let i=0;i<n[t].length;++i){if(0===i&&!r)continue;const a=o.shape[i],l=n[t][i];if(null!=l&&l!==a)throw new tw(`Error when checking ${s}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}class c$ extends qk{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new tw("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(t,e,n,r=console.log){const s=function(t){let e=!0;const n=[],r=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}r.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),i=["Layer (type)","Output shape","Param #"];let o;if(s?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!s){i.push("Receives inputs"),o=[];for(const e in t.nodesByDepth)o.push(...t.nodesByDepth[e])}r("_".repeat(e)),_k(i,n,r),r("=".repeat(e));const a=t.layers;for(let t=0;t<a.length;++t)s?Ok(a[t],n,r):Mk(a[t],n,o,r),r((t===a.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=function(t){let e;return e=null!=t.collectedTrainableWeights?Vv(t.collectedTrainableWeights):Vv(t.trainableWeights),e}(t),u=Vv(t.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(e))}(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>Nm.adagrad(.01),Adadelta:()=>Nm.adadelta(1,.95,Jx()),Adam:()=>Nm.adam(.001,.9,.999,Jx()),Adamax:()=>Nm.adamax(.002,.9,.999,Jx(),0),RMSProp:()=>Nm.rmsprop(.001,.9,0,Jx()),SGD:()=>Nm.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new tw(`Unknown Optimizer ${t}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof cp))throw new tw("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new tw(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map((t=>kk(t)))}else{const n=kk(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new tw(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(kk(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ww("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),s=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};Ww("metric",(()=>{for(let t=0;t<this.outputs.length;++t)-1===n.indexOf(t)&&(e=>{let n,r,i;for(const o of e){if("string"==typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const e=this.internalOutputShapes[t];let s;1===e[e.length-1]||this.lossFunctions[t]===xk?-1!==["accuracy","acc"].indexOf(o)?r=$k:-1!==["crossentropy","ce"].indexOf(o)&&(r=Sk):this.lossFunctions[t]===bk?-1!==["accuracy","acc"].indexOf(o)?r=Ek:-1!==["crossentropy","ce"].indexOf(o)&&(r=Nk):-1!==["accuracy","acc"].indexOf(o)?r=Ik:-1!==["crossentropy","ce"].indexOf(o)&&(r=Ck),-1!==["accuracy","acc"].indexOf(o)?s="acc":-1!==["crossentropy","ce"].indexOf(o)&&(s="ce"),i=r,n=""+s}else{const t=Ak(o);i=t,n=""+Tk(o)}let e;Ww(n,(()=>{e=i})),s(t,n,e)}})(r[t])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;t$(r);const s=this.standardizeUserDataXY(t,e,!0,r);try{const i=s[0].concat(s[1]);this.makeTestFunction();const o=this.testFunction;return ow(this.testLoop(o,i,r,n.verbose,n.steps))}finally{i$(s[0],t),i$(s[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,s=t.testFunction;let i=[];if(n.verbose>0)throw new ew("Verbose mode is not implemented yet.");Rc(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const o="function"==typeof e.next?e:await e.iterator();let a=0,l=0;for(;!r||l<n.batches;){const e=await o.next();if(i=ip((()=>{if(e.value){const{xs:n,ys:r}=Jk(t,e.value),o=n.concat(r),u=ip((()=>s(o)));if(op(o),0===l)for(let t=0;t<u.length;++t)i.push(up(0));const c=o[0].shape[0];for(let t=0;t<u.length;++t){const e=u[t],n=i[t];i[t]=ip((()=>dp(i[t],Rf(c,e)))),l>0&&op(n)}op(u),a+=c,++l}return i})),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<i.length;++t){const e=i[t];i[t]=lf(i[t],a),op(e)}return ow(i)}(this,t,e)}checkNumSamples(t,e,n,r="steps"){let s;if(null!=n){if(s=null,null!=e)throw new tw(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new tw(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return s}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new tw("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],s=this.retrieveSymbolicTensors(r),i=new Pk;if(t instanceof xh&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new tw(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)i.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new tw(`No value is provided for the model's input ${e.name}`);i.add(e,n)}const o=Vk(s,i);return n?o:o[0]}retrieveSymbolicTensors(t){const e=rw(null,t.length);let n=t.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],i=s.map((t=>t.name));for(let r=0;r<t.length;++r){const o=i.indexOf(t[r]);if(-1!==o&&(e[r]=s[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,r)=>{null==e&&n.push(t[r])})),new tw(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,n=!1){return ip((()=>{const r=this.checkNumSamples(t);if(n)throw new ew("Verbose predictLoop() is not implemented yet.");const s=r$(r,e),i=this.outputs.map((t=>[]));for(let e=0;e<s.length;++e)ip((()=>{const n=s[e][0],r=s[e][1],i=e$(t,n,r),o=[];if(Array.isArray(i))for(let t=0;t<i.length;++t)o.push({key:this.inputs[t],value:i[t]});else o.push({key:this.inputs[0],value:i});const a=new Pk(o);return Vk(this.outputs,a)})).forEach(((t,e)=>i[e].push(t)));return ow(i.map((t=>Xp(t,0))))}))}predict(t,e={}){const n=s$(t);u$(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return t$(r),this.predictLoop(n,r)}finally{i$(n,t)}}predictOnBatch(t){u$(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new Qx("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===bk?s.push(e.slice(0,e.length-1).concat([1])):s.push(e)}if(function(t,e,n){const r=gw(t.map((t=>t.shape[0])));r.sort();const s=gw(e.map((t=>t.shape[0])));if(s.sort(),r.length>1)throw new tw(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((t=>t.shape)))}`);if(s.length>1)throw new tw(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((t=>t.shape)))}`);if(r.length>0&&s.length>0&&!_c(r,s))throw new tw(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(t=l$(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=l$(e,this.feedOutputNames,s,!1,"target")),function(t,e,n){const r=[fk,xk,yk];for(let s=0;s<t.length;++s){const i=t[s],o=e[s],a=n[s];if(null!=o){if(o===yk&&1===i.shape[i.shape.length-1])throw new tw(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(o)){const t=i.shape.slice(1),e=a.slice(1);for(let n=0;n<t.length;++n){const r=t[n],s=e[n];if(null!=s&&r!==s)throw new tw(`A target Tensor with shape ${i.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!=0)throw new tw(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,s=!0,i){const[o,a]=this.standardizeUserDataXY(t,e,s,i);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const t=jk(r,this.outputNames);l=[];for(let e=0;e<t.length;++e)l.push(await Xk(a[e],null,t[e]))}return[o,a,l]}testLoop(t,e,n,r=0,s){return ip((()=>{const i=this.checkNumSamples(e,n,s,"steps"),o=[];if(r>0)throw new ew("Verbose mode is not implemented yet.");if(null!=s)throw new ew("steps mode in testLoop() is not implemented yet");{const r=r$(i,n),s=og(Yw(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],a=r[n][1],l=Qw(s,i,a-i),u=n$(e,l),c=t(u);if(0===n)for(let t=0;t<c.length;++t)o.push(up(0));for(let t=0;t<c.length;++t){const e=c[t];o[t]=dp(o[t],Rf(a-i,e))}}for(let t=0;t<o.length;++t)o[t]=lf(o[t],i)}return o}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let s=r;iw(t,r)>1&&(s+=`_${iw(t.slice(0,n),r)}`),e.push(s)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],o=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const o=new Pk(t),a=Vk(this.outputs,o,{training:!0});let l;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(r[t],a[t]);null!=s[t]&&(n=Yk(n,s[t]));const i=Uf(n);e.push(i),l=0===t?n:dp(l,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],s=this.metricsTensors[t][1];n=Uf(e(r[s],a[s]))}ap(n),i.push(n)}return l=Uf(l),this.calculateLosses().forEach((t=>{l=dp(l,t)})),l}),!0,o)].concat(i)}}makeTestFunction(){this.testFunction=t=>ip((()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let t=0;t<this.inputs.length;++t)i.push({key:this.inputs[t],value:r[t]});const o=new Pk(i),a=Vk(this.outputs,o);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],i=Uf(r(s[t],a[t]));n=0===t?i:dp(n,i),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],i=Uf(n(s[r],a[r]));e.push(i)}return e}))}async fit(t,e,n={}){return async function(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,i,o,a,l,u,c;t.isTraining=!0;try{const h=null==r.batchSize?32:r.batchSize;t$(h);const d=!1,p=await t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,d,h);s=p[0],i=p[1],c=p[2];let f,g=!1;if(null!=r.validationData&&r.validationData.length>0){if(g=!0,2!==r.validationData.length)throw 3===r.validationData.length?new ew("validationData including sample weights is not supported yet."):new tw(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);o=r.validationData[0],a=r.validationData[1];const e=!0,n=await t.standardizeUserData(o,a,null,null,e,h);l=n[0],u=n[1],f=l.concat(u)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){g=!0;const t=Math.floor(s[0].shape[0]*(1-r.validationSplit)),e=s[0].shape[0];l=e$(s,t,e),s=e$(s,0,t),u=e$(i,t,e),i=e$(i,0,t),f=l.concat(u)}else null!=r.validationSteps&&(g=!0);const m=s.concat(i).concat(c);t.checkTrainableWeightsConsistency();const y=t.makeTrainFunction(),b=t.getDedupedMetricsNames();let x,w;g?(t.makeTestFunction(),x=t.testFunction,w=b.slice().concat(b.map((t=>"val_"+t)))):(x=null,f=[],w=b.slice());const v=uk(r.callbacks,r.yieldEvery);return await async function(t,e,n,r,s,i,o,a,l,u,c,h,d,p,f){null==s&&(s=32),null==i&&(i=1),null==c&&(c=!0),null==d&&(d=0);let g=!1;null!=l&&null!=u&&(g=!0);const m=t.checkNumSamples(n,s,p,"steps_per_epoch");let y;null!=m&&(y=Yw(0,m)),null==o&&(o=1);const{callbackList:b,history:x}=hk(a,o,i,d,m,p,s,g,h);b.setModel(t),t.history=x,await b.onTrainBegin(),t.stopTraining_=!1;for(let o=d;o<i;++o){await b.onEpochBegin(o);const i={};{if("batch"===c)throw new ew("batch shuffling is not implemneted yet");c&&Ec(y);const o=og(y),a=r$(m,s);for(let c=0;c<a.length;++c){const h={};if(await b.onBatchBegin(c,h),ip((()=>{const d=a[c][0],p=a[c][1],f=Qw(o,d,p-d);h.batch=c,h.size=p-d;const m=n$(n,f),y=e(m);for(let t=0;t<r.length;++t){const e=r[t],n=y[t];h[e]=n,ap(n)}if(c===a.length-1&&g){const e=t.testLoop(l,u,s);for(let t=0;t<r.length;++t){const n=r[t],s=e[t];ap(s),i["val_"+n]=s}}})),await b.onBatchEnd(c,h),nk(h),t.stopTraining_)break}o.dispose()}if(await b.onEpochEnd(o,i),t.stopTraining_)break}return await b.onTrainEnd(),await t.history.syncData(),t.history}(t,y,m,b,h,r.epochs,r.verbose,v,x,f,r.shuffle,w,r.initialEpoch,null)}finally{t.isTraining=!1,i$(s,e),i$(i,n),i$(l,o),i$(u,a),null!=c&&op(c)}}(this,t,e,n)}async fitDataset(t,e){return async function(t,e,n){const r=null!=n.batchesPerEpoch;if(Rc(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),Rc(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),Rc(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),Rc(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),Rc(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const s=null!=n.validationData;let i,o;if(s)if(Qk(n.validationData))Rc(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const t=function(t){if(3===t.length)throw new ew("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);i=t.xs,o=t.ys}const a=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((t=>"val_"+t))):l.slice();const c=uk(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=hk(c,h,n.epochs,null,null,function(t,e){let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}(e,n),null,s,u);d.setModel(t),t.history=p,await d.onTrainBegin(),t.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,g=await e.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let c=0,h=0;for(r||(g=await e.iterator());!r||c<n.batchesPerEpoch;){const e=await g.next();if(r&&e.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:s}=Jk(t,e.value),i={};i.batch=h,i.size=r[0].shape[0],await d.onBatchBegin(h,i);const o=[];if(null!=n.classWeight){const e=jk(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)o.push(await Xk(s[t],null,e[t]))}const u=r.concat(s).concat(o),p=a(u);op(u);for(let t=0;t<l.length;++t){const e=l[t],n=p[t];i[e]=n,ap(n)}await d.onBatchEnd(h,i),nk(i),h++,c++}if(r?c>=n.batchesPerEpoch:e.done){if(s){let e;e=Qk(n.validationData)?aw(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):aw(t.evaluate(i,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)u[`val_${t.metricsNames[n]}`]=e[n]}break}if(t.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,t.stopTraining_)break}return await d.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],s=n[1],i=this.makeTrainFunction()(r.concat(s)),o=[];for(const t of i){const e=await t.data();o.push(e[0])}return op(i),ow(o)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let t=0;t<r.length;++t)n&&!r[t].trainable||e.push({name:r[t].originalName,tensor:s[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=sp().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-sp().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=lw(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>lw(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=lw(n[r])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[lw(Tk(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>lw(Tk(t))));{const t={};for(const e in this.metrics)t[e]=lw(Tk(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=dk(Lk(t.optimizer_config));let n,r;if("string"==typeof t.loss)n=uw(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>uw(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=uw(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map((t=>uw(t)));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=uw(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"==typeof t){const e=(n=t,rd.getSaveHandlers(n));if(0===e.length)throw new tw(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new tw(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}var n;if(null==t.save)throw new tw("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await Yh(this.getNamedWeights(e)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v2.4.0",convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:n}=await Yh(await this.optimizer.getWeights(),t);r.specs.push(...n),r.data=td([r.data,e])}if(null!=this.userDefinedMetadata){const t=!0;Dk(this.userDefinedMetadata,this.name,t),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=r.data,s.weightSpecs=r.specs,t.save(s)}setUserDefinedMetadata(t){Dk(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}c$.className="Model",ep(c$);class h$ extends c${}async function d$(t,e){if(null==e&&(e={}),"string"==typeof t){const s=(n=t,r=e,rd.getLoadHandlers(n,r));if(0===s.length)s.push(function(t,e){return Bd(t,e)}(t,e));else if(s.length>1)throw new tw(`Found more than one (${s.length}) load handlers for URL '${t}'`);t=s[0]}var n,r;return async function(t,e,n){if(null==n&&(n={}),null==t.load)throw new tw("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await t.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const i=null==n.strict||n.strict,o=null!=r.weightData&&null!=r.weightSpecs&&i,a=dk(Lk(s),void 0,o),l=r.trainingConfig;if(null!=l&&a.loadTrainingConfig(l),null!=r.userDefinedMetadata&&a.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new tw("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:t,optimizerWeights:e}=function(t,e){const n=function(t,e){const n={};let r,s=0;for(const i of e){const e=i.name,o=i.dtype,a=i.shape,l=Fc(a);let u;if("quantization"in i){const n=i.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${i.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${i.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${i.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${o}.`)}const a=Xh[n.dtype],c=t.slice(s,s+l*a),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===o)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];u[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=nd()),u=r(h)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${e}': ${o}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];u[t]=Math.round(e*n.scale+n.min)}}s+=l*a}else if("string"===o){const e=Fc(i.shape);u=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(s,s+4))[0];s+=4;const n=new Uint8Array(t.slice(s,s+e));u.push(n),s+=e}}else{const r=Xh[o],i=t.slice(s,s+l*r);if("float32"===o)u=new Float32Array(i);else if("int32"===o)u=new Int32Array(i);else if("bool"===o)u=new Uint8Array(i);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${e}': ${o}`);{u=new Float32Array(i);const t=new Float32Array(u.length/2),r=new Float32Array(u.length/2);for(let e=0;e<t.length;e++)t[e]=u[2*e],r[e]=u[2*e+1];const s=jh(t,a,"float32"),o=jh(r,a,"float32");n[e]=Kh(s,o)}}s+=l*r}"complex64"!==o&&(n[e]=jh(u,a,o))}return n}(t,e),r={},s=[];return e.forEach((t=>{"optimizer"===t.group?s.push({name:t.name,tensor:n[t.name]}):r[t.name]=n[t.name]})),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);a.loadWeights(t,i),null!=a.optimizer&&e.length>0&&await a.optimizer.setWeights(e),op(t),op(e.map((t=>t.tensor)))}return a}(t,0,e)}h$.className="Functional",ep(h$);class p$ extends c${constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:Lv("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new tw(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof p$||t instanceof c$;let n;if(e){if(n=t,1!==n.outputs.length)throw new tw("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new tw("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new tw("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new tw("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new tk({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new tw(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new tw("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=Qv(this.outputs[0])}this.inboundNodes=[],new Yv({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:rw(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(Uv(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new c$({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new Qx("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new Qx("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new Qx("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new Qx("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let s,i={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new tw("Legacy serialization format not supported yet.");s=e}else Rc(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=e.layers,delete e.layers,i=e;const o=new t(i);if(!(o instanceof p$))throw new ew(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const t of s){const e=dk(t,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),o.add(e)}return o}set stopTraining(t){if(null==this.model)throw new tw("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new tw("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}p$.className="Sequential",ep(p$);class f$ extends Qd{getConfig(){return{}}}class g$ extends f${apply(t,e=1){return function(t,e=1){if(1!==e)throw new ew(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return uf(t)}(t,e)}}g$.className="elu",ep(g$);class m$ extends f${apply(t){return cg(t)}}m$.className="selu",ep(m$);class y$ extends f${apply(t){return lg(t)}}y$.className="relu",ep(y$);class b$ extends f${apply(t){return ip((()=>Gf(6,lg(t))))}}b$.className="relu6",ep(b$);class x$ extends f${apply(t){return t}}x$.className="linear",ep(x$);class w$ extends f${apply(t){return dg(t)}}w$.className="sigmoid",ep(w$);class v$ extends f${apply(t){return function(t){return ip((()=>{const e=dp(.5,Rf(.2,t));return Kp(e,0,1)}))}(t)}}v$.className="hardSigmoid",ep(v$);class k$ extends f${apply(t){return xg(t)}}k$.className="softplus",ep(k$);class $$ extends f${apply(t){return function(t){return ip((()=>lf(t,hp(t).add(1))))}(t)}}$$.className="softsign",ep($$);class I$ extends f${apply(t){return Sg(t)}}I$.className="tanh",ep(I$);class S$ extends f${apply(t,e=-1){return bg(t,e)}}S$.className="softmax",ep(S$);class E$ extends f${apply(t,e=-1){return Mf(t,e)}}function C$(t){return t.getClassName()}function N$(t,e={}){return pw(t,tp.getMap().classNameMap,e,"activation")}function R$(t){if(null==t){return N$({className:"linear",config:{}})}if("string"==typeof t){const e={};return e.className=t,e.config={},N$(e)}return t instanceof f$?t:N$(t)}E$.className="logSoftmax",ep(E$);class A$ extends Qd{}class T$ extends A${constructor(t){super(),function(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return ip((()=>{let e=Pf([1]);return this.hasL1&&(e=dp(e,Of(Rf(this.l1,hp(t))))),this.hasL2&&(e=dp(e,Of(Rf(this.l2,lv(t))))),e.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}T$.className="L1L2",ep(T$);const D$={l1l2:"L1L2"};function F$(t){return hw(t)}function _$(t,e={}){return pw(t,tp.getMap().classNameMap,e,"regularizer")}function O$(t){return null==t?null:"string"==typeof t?_$({className:t in D$?D$[t]:t,config:{}}):t instanceof A$?t:_$(t)}class M$ extends Zv{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=Wv(t);let n=lg(t);return null!=this.maxValue&&(n=Kp(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}M$.className="ReLU",ep(M$);class B$ extends Zv{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Wv(t);return Af(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}B$.className="LeakyReLU",ep(B$);class L$ extends Zv{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=_v(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=O$(t.alphaRegularizer),this.alphaConstraint=Tw(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new tw(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=Uv(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new qv({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=Wv(t),tg(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Fv(this.alphaInitializer),alphaRegularizer:F$(this.alphaRegularizer),alphaConstraint:Rw(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}L$.className="PReLU",ep(L$);class z$ extends Zv{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new ew(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Wv(t);return uf(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}z$.className="ELU",ep(z$);class P$ extends Zv{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=Wv(t);return n.mul(Jw(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}P$.className="ThresholdedReLU",ep(P$);class W$ extends Zv{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new S$).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=Wv(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function U$(t,e,n){if("number"==typeof t)return rw(t,e);if(t.length!==e)throw new tw(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let s=0;s<e;++s){const i=t[s];if((r=i)!==parseInt(r.toString(),10))throw new tw(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${i}`)}return t;var r}function V$(t,e,n,r,s=1){if(null==t)return t;let i;return i="same"===n?t:t-(e+(e-1)*(s-1))+1,Math.floor((i+r-1)/r)}function G$(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+Xw([n-e,0]);else{if("same"!==r)throw new tw(`Unsupport padding mode: ${r}.`);t*=e}return t}function H$(t,e){return ip((()=>(Bw(e),"channelsFirst"===e?kp(t,[0,2,3,1]):t)))}function K$(t,e){return ip((()=>(Bw(e),"channelsFirst"===e?kp(t,[0,2,3,4,1]):t)))}function q$(t,e,n,r=[1,1],s="valid",i,o,a=null){return ip((()=>{if(null==i&&(i="channelsLast"),Bw(i),3!==t.rank&&4!==t.rank)throw new tw(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new tw(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=H$(t,i);if("causal"===s)throw new ew("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Ug({x:l,filter:e,strides:r,pad:"same"===s?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:a}),"channelsFirst"===i&&(l=kp(l,[0,3,1,2])),l}))}W$.className="Softmax",ep(W$);class j$ extends Zv{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",j$.verifyArgs(e),this.rank=t,xw(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new ew(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=U$(e.kernelSize,t,"kernelSize"),this.strides=U$(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,Lw(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Bw(this.dataFormat),this.activation=R$(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=_v(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Tw(e.biasConstraint),this.biasRegularizer=O$(e.biasRegularizer),this.activityRegularizer=O$(e.activityRegularizer),this.dilationRate=U$(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new tw(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new tw(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new tw(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(sw("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!bw(t.kernelSize,"number",1,3))throw new tw(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:C$(this.activation),useBias:this.useBias,biasInitializer:Fv(this.biasInitializer),biasRegularizer:F$(this.biasRegularizer),activityRegularizer:F$(this.activityRegularizer),biasConstraint:Rw(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class X$ extends j${constructor(t,e){super(t,e),this.kernel=null,X$.verifyArgs(e),this.filters=e.filters,xw(this.filters,"filters"),this.kernelInitializer=_v(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Tw(e.kernelConstraint),this.kernelRegularizer=O$(e.kernelRegularizer)}build(t){t=Uv(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new tw(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return ip((()=>{let e;t=Wv(t);const n=null==this.bias?null:this.bias.read(),r=vw(this.activation.getClassName());if(null!=r&&2===this.rank)e=q$(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=function(t,e,n,r=1,s="valid",i,o=1){return ip((()=>{if(null==i&&(i="channelsLast"),Bw(i),3!==t.shape.length)throw new tw(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new tw(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new tw(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if("channelsFirst"===i&&(t=kp(t,[0,2,1])),"causal"===s)throw new ew("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=ef(t,e,r,"same"===s?"same":"valid","NWC",o);return null!=n&&(a=cv(a,n)),a}))}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=q$(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new ew("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,r=[1,1,1],s="valid",i,o){return ip((()=>{if(null==i&&(i="channelsLast"),Bw(i),4!==t.rank&&5!==t.rank)throw new tw(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new tw(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let a=K$(t,i);if("causal"===s)throw new ew("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=sf(a,e,r,"same"===s?"same":"valid","NDHWC",o),null!=n&&(a=cv(a,n)),"channelsFirst"===i&&(a=kp(a,[0,4,1,2,3])),a}))}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=Uv(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const r=V$(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(r)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:Fv(this.kernelInitializer),kernelRegularizer:F$(this.kernelRegularizer),kernelConstraint:Rw(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new tw(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class Y$ extends X${constructor(t){super(2,t),Y$.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!bw(t.kernelSize,"number",1,2))throw new tw(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}Y$.className="Conv2D",ep(Y$);class J$ extends X${constructor(t){super(3,t),J$.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new tw(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}J$.className="Conv3D",ep(J$);class Z$ extends Y${constructor(t){if(super(t),this.inputSpec=[new qv({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new tw(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=Uv(t)).length)throw new tw("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new tw("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new qv({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return ip((()=>{let e=Wv(t);if(4!==e.shape.length)throw new tw(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let s,i;"channelsFirst"===this.dataFormat?(s=2,i=3):(s=1,i=2);const o=n[s],a=n[i],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,G$(o,c,l,this.padding),G$(a,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=kp(e,[0,2,3,1]));let p=rf(e,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=kp(p,[0,3,1,2])),null!=this.bias&&(p=cv(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(t){const e=(t=Uv(t)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const i=this.kernelSize[0],o=this.kernelSize[1],a=this.strides[0],l=this.strides[1];return e[n]=this.filters,e[r]=G$(e[r],a,i,this.padding),e[s]=G$(e[s],l,o,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Z$.className="Conv2DTranspose",ep(Z$);class Q$ extends X${constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new tw("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new tw("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new tw(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=_v(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=O$(e.depthwiseRegularizer),this.depthwiseConstraint=Tw(e.depthwiseConstraint),this.pointwiseInitializer=_v(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=O$(e.pointwiseRegularizer),this.pointwiseConstraint=Tw(e.pointwiseConstraint)}build(t){if((t=Uv(t)).length<this.rank+2)throw new tw(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new tw(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let t=0;t<this.rank;++t)s.push(1);s.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new qv({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return ip((()=>{let e;if(t=Wv(t),1===this.rank)throw new ew("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=kp(t,[0,2,3,1])),e=hg(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=cv(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=kp(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Fv(this.depthwiseInitializer),t.pointwiseInitializer=Fv(this.pointwiseInitializer),t.depthwiseRegularizer=F$(this.depthwiseRegularizer),t.pointwiseRegularizer=F$(this.pointwiseRegularizer),t.depthwiseConstraint=Rw(this.depthwiseConstraint),t.pointwiseConstraint=Rw(this.pointwiseConstraint),t}}Q$.className="SeparableConv";class tI extends Q${constructor(t){super(2,t)}}tI.className="SeparableConv2D",ep(tI);class eI extends X${constructor(t){super(1,t),eI.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!bw(t.kernelSize,"number",1,1))throw new tw(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}eI.className="Conv1D",ep(eI);class nI extends Zv{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return ip((()=>{if(t=Wv(t),"channelsLast"===this.dataFormat){const e=ev(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return ev(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=ev(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return ev(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}nI.className="Cropping2D",ep(nI);class rI extends Zv{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return ip((()=>{let e=Wv(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=kp(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],s=e.resizeNearestNeighbor([t,r]);return kp(s,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return e.resizeNearestNeighbor([t,r])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}rI.className="UpSampling2D",ep(rI);class sI extends j${constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=_v(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Tw(t.depthwiseConstraint),this.depthwiseRegularizer=O$(t.depthwiseRegularizer)}build(t){if((t=Uv(t)).length<4)throw new tw(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new tw(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return ip((()=>{let e=function(t,e,n=[1,1],r="valid",s,i){return ip((()=>{null==s&&(s="channelsLast"),Bw(s);let o=H$(t,s);if(4!==t.rank)throw new tw(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new tw(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return o=of(o,e,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===s&&(o=kp(o,[0,3,1,2])),o}))}(t=Wv(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=cv(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=Uv(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=V$(e,this.kernelSize[0],this.padding,this.strides[0]),i=V$(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,s,i]:[t[0],s,i,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Fv(this.depthwiseInitializer),t.depthwiseRegularizer=F$(this.depthwiseRegularizer),t.depthwiseConstraint=Rw(this.depthwiseRegularizer),t}}function iI(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new tw("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function s(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=s(e),constants:n=s(n)}}function oI(t,e,n,r=!1,s,i,o=!1,a=!1){return ip((()=>{const l=e.shape.length;if(l<3)throw new tw(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Yw(2,l));if(e=kp(e,u),null!=i)throw new ew("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===l-1&&(s=ff(s,-1)),s=kp(s,u)),r&&(e=ug(e,0),null!=s&&(s=ug(s,0)));const c=[];let h,d=n;const p=e.shape[0],f=Cg(e);let g,m;null!=s&&(g=Cg(s));for(let e=0;e<p;++e){const n=f[e],r=ip((()=>t(n,d)));if(null==s)h=r[0],d=r[1];else{const t=ip((()=>{const t=g[e],n=Zf(t).sub(t);return{output:r[0].mul(t).add(d[0].mul(n)),newStates:d.map(((e,s)=>r[1][s].mul(t).add(e.mul(n))))}}));h=t.output,d=t.newStates}a&&c.push(h)}return a&&(m=Ig(c,1)),[h,m,d]}))}sI.className="DepthwiseConv2D",ep(sI);class aI extends Zv{constructor(t){let e;if(super(t),null==t.cell)throw new tw("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new gI({cells:t.cell}):t.cell,null==e.stateSize)throw new tw("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new qv({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Yw(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null)):this.states_}setStates(t){this.states_=t}computeOutputShape(t){zv(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return ip((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new ew("Constants support is not implemented in RNN yet.");zv(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new qv({shape:[e,null,...n]});const r=[t[0]].concat(t.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!_c(this.stateSpec.map((t=>t.shape[t.shape.length-1])),s))throw new tw(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((t=>new qv({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t,e=!1){ip((()=>{if(!this.stateful)throw new Zx("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new tw("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>Pf([n,t]))):this.states_=[Pf([n,this.cell.stateSize])];else if(null==t)op(this.states_),null!=this.keptStates&&(op(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>Pf([n,t]))):this.states_[0]=Pf([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new tw(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):op(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,i=[n,s];if(!_c(r.shape,i))throw new tw(`State ${e} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map((t=>ap(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=iI(t,n,r,this.numConstants);t=s.inputs,n=s.initialState,r=s.constants;let i=[],o=[];if(null!=n){e.initialState=n,i=i.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new qv({shape:t.shape}));o=o.concat(this.stateSpec)}if(null!=r&&(e.constants=r,i=i.concat(r),this.numConstants=r.length),i[0]instanceof jv){const n=[t].concat(i),r=this.inputSpec.concat(o),s=this.inputSpec;this.inputSpec=r;const a=super.apply(n,e);return this.inputSpec=s,a}return super.apply(t,e)}call(t,e){return ip((()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let s=null==e?null:e.initialState;t=Wv(t),null==s&&(s=this.stateful?this.states_:this.getInitialState(t));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new tw(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:r},a=oI(((t,e)=>{const n=this.cell.call([t].concat(e),o);return[n[0],n.slice(1)]}),t,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=a[0],u=a[1],c=a[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(t){return ip((()=>{let e=Pf(t.shape);return e=Of(e,[1,2]),e=Zw(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?sv(e,[1,t]):e)):this.cell.stateSize>1?[sv(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const e=this.cell.getConfig();t.cell={className:this.cell.getClassName(),config:e};const n=super.getConfig();return Object.assign(t,n),t}static fromConfig(t,e,n={}){const r=dk(e.cell,n);return new t(Object.assign(e,{cell:r}))}}aI.className="RNN",ep(aI);class lI extends Zv{}class uI extends lI{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,xw(this.units,"units"),this.activation=R$(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=_v(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=_v(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=_v(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=O$(t.kernelRegularizer),this.recurrentRegularizer=O$(t.recurrentRegularizer),this.biasRegularizer=O$(t.biasRegularizer),this.kernelConstraint=Tw(t.kernelConstraint),this.recurrentConstraint=Tw(t.recurrentConstraint),this.biasConstraint=Tw(t.biasConstraint),this.dropout=jw([1,Xw([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=jw([1,Xw([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Uv(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return ip((()=>{if(2!==(t=t).length)throw new tw(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=mI({ones:()=>Zf(t),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=mI({ones:()=>Zf(n),rate:this.recurrentDropout,training:r}));const i=this.dropoutMask,o=this.recurrentDropoutMask;s=ov(null!=i?Rf(t,i):t,this.kernel.read()),null!=this.bias&&(s=cv(s,this.bias.read())),null!=o&&(n=Rf(n,o));let a=dp(s,ov(n,this.recurrentKernel.read()));return null!=this.activation&&(a=this.activation.apply(a)),[a,a]}))}getConfig(){const t={units:this.units,activation:C$(this.activation),useBias:this.useBias,kernelInitializer:Fv(this.kernelInitializer),recurrentInitializer:Fv(this.recurrentInitializer),biasInitializer:Fv(this.biasInitializer),kernelRegularizer:F$(this.kernelRegularizer),recurrentRegularizer:F$(this.recurrentRegularizer),biasRegularizer:F$(this.biasRegularizer),activityRegularizer:F$(this.activityRegularizer),kernelConstraint:Rw(this.kernelConstraint),recurrentConstraint:Rw(this.recurrentConstraint),biasConstraint:Rw(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout},e=super.getConfig();return Object.assign(t,e),t}}uI.className="SimpleRNNCell",ep(uI);class cI extends aI{constructor(t){t.cell=new uI(t),super(t)}call(t,e){return ip((()=>{null!=this.cell.dropoutMask&&(op(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(op(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}get units(){return this.cell.units}get activation(){return this.cell.activation}get useBias(){return this.cell.useBias}get kernelInitializer(){return this.cell.kernelInitializer}get recurrentInitializer(){return this.cell.recurrentInitializer}get biasInitializer(){return this.cell.biasInitializer}get kernelRegularizer(){return this.cell.kernelRegularizer}get recurrentRegularizer(){return this.cell.recurrentRegularizer}get biasRegularizer(){return this.cell.biasRegularizer}get kernelConstraint(){return this.cell.kernelConstraint}get recurrentConstraint(){return this.cell.recurrentConstraint}get biasConstraint(){return this.cell.biasConstraint}get dropout(){return this.cell.dropout}get recurrentDropout(){return this.cell.recurrentDropout}getConfig(){const t={units:this.units,activation:C$(this.activation),useBias:this.useBias,kernelInitializer:Fv(this.kernelInitializer),recurrentInitializer:Fv(this.recurrentInitializer),biasInitializer:Fv(this.biasInitializer),kernelRegularizer:F$(this.kernelRegularizer),recurrentRegularizer:F$(this.recurrentRegularizer),biasRegularizer:F$(this.biasRegularizer),activityRegularizer:F$(this.activityRegularizer),kernelConstraint:Rw(this.kernelConstraint),recurrentConstraint:Rw(this.recurrentConstraint),biasConstraint:Rw(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout},e=super.getConfig();return delete e.cell,Object.assign(t,e),t}static fromConfig(t,e){return new t(e)}}cI.className="SimpleRNN",ep(cI);class hI extends lI{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new tw("GRUCell does not support reset_after parameter set to true.");this.units=t.units,xw(this.units,"units"),this.activation=R$(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=R$(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=_v(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=_v(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=_v(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=O$(t.kernelRegularizer),this.recurrentRegularizer=O$(t.recurrentRegularizer),this.biasRegularizer=O$(t.biasRegularizer),this.kernelConstraint=Tw(t.kernelConstraint),this.recurrentConstraint=Tw(t.recurrentConstraint),this.biasConstraint=Tw(t.biasConstraint),this.dropout=jw([1,Xw([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=jw([1,Xw([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=Uv(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return ip((()=>{if(2!==(t=t).length)throw new tw(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=mI({ones:()=>Zf(t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=mI({ones:()=>Zf(r),rate:this.recurrentDropout,training:n,count:3}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,a,l;0<this.dropout&&this.dropout<1&&(t=Rf(t,s[0]));let u=ov(t,this.kernel.read());this.useBias&&(u=cv(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Rf(r,i[0]));const c=this.recurrentKernel.read(),[h,d]=vg(c,[2*this.units,this.units],c.rank-1),p=ov(r,h),[f,g,m]=vg(u,3,u.rank-1),[y,b]=vg(p,2,p.rank-1);o=this.recurrentActivation.apply(dp(f,y)),a=this.recurrentActivation.apply(dp(g,b));const x=ov(Rf(a,r),d);l=this.activation.apply(dp(m,x));const w=dp(Rf(o,r),Rf(dp(1,qf(o)),l));return[w,w]}))}getConfig(){const t={units:this.units,activation:C$(this.activation),recurrentActivation:C$(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Fv(this.kernelInitializer),recurrentInitializer:Fv(this.recurrentInitializer),biasInitializer:Fv(this.biasInitializer),kernelRegularizer:F$(this.kernelRegularizer),recurrentRegularizer:F$(this.recurrentRegularizer),biasRegularizer:F$(this.biasRegularizer),activityRegularizer:F$(this.activityRegularizer),kernelConstraint:Rw(this.kernelConstraint),recurrentConstraint:Rw(this.recurrentConstraint),biasConstraint:Rw(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1},e=super.getConfig();return Object.assign(t,e),t}}hI.className="GRUCell",ep(hI);class dI extends aI{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new hI(t),super(t)}call(t,e){return ip((()=>{null!=this.cell.dropoutMask&&(op(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(op(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}get units(){return this.cell.units}get activation(){return this.cell.activation}get recurrentActivation(){return this.cell.recurrentActivation}get useBias(){return this.cell.useBias}get kernelInitializer(){return this.cell.kernelInitializer}get recurrentInitializer(){return this.cell.recurrentInitializer}get biasInitializer(){return this.cell.biasInitializer}get kernelRegularizer(){return this.cell.kernelRegularizer}get recurrentRegularizer(){return this.cell.recurrentRegularizer}get biasRegularizer(){return this.cell.biasRegularizer}get kernelConstraint(){return this.cell.kernelConstraint}get recurrentConstraint(){return this.cell.recurrentConstraint}get biasConstraint(){return this.cell.biasConstraint}get dropout(){return this.cell.dropout}get recurrentDropout(){return this.cell.recurrentDropout}get implementation(){return this.cell.implementation}getConfig(){const t={units:this.units,activation:C$(this.activation),recurrentActivation:C$(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Fv(this.kernelInitializer),recurrentInitializer:Fv(this.recurrentInitializer),biasInitializer:Fv(this.biasInitializer),kernelRegularizer:F$(this.kernelRegularizer),recurrentRegularizer:F$(this.recurrentRegularizer),biasRegularizer:F$(this.biasRegularizer),activityRegularizer:F$(this.activityRegularizer),kernelConstraint:Rw(this.kernelConstraint),recurrentConstraint:Rw(this.recurrentConstraint),biasConstraint:Rw(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1},e=super.getConfig();return delete e.cell,Object.assign(t,e),t}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}dI.className="GRU",ep(dI);class pI extends lI{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,xw(this.units,"units"),this.activation=R$(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=R$(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=_v(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=_v(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=_v(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=O$(t.kernelRegularizer),this.recurrentRegularizer=O$(t.recurrentRegularizer),this.biasRegularizer=O$(t.biasRegularizer),this.kernelConstraint=Tw(t.kernelConstraint),this.recurrentConstraint=Tw(t.recurrentConstraint),this.biasConstraint=Tw(t.biasConstraint),this.dropout=jw([1,Xw([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=jw([1,Xw([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=Uv(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends gv{apply(e,r){const s=t.apply([n]),i=(new yv).apply([n]),o=t.apply([2*n]);return rv(rv(s,i),o)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return ip((()=>{const n=null!=e.training&&e.training;if(3!==(t=t).length)throw new tw(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=mI({ones:()=>Zf(t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=mI({ones:()=>Zf(r),rate:this.recurrentDropout,training:n,count:4}));const i=this.dropoutMask,o=this.recurrentDropoutMask;let a,l,u,c;0<this.dropout&&this.dropout<1&&(t=Rf(t,i[0]));let h=ov(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Rf(r,o[0])),h=dp(h,ov(r,this.recurrentKernel.read())),this.useBias&&(h=cv(h,this.bias.read()));const[d,p,f,g]=vg(h,4,h.rank-1);a=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=dp(Rf(l,s),Rf(a,this.activation.apply(f))),c=this.recurrentActivation.apply(g);const m=Rf(c,this.activation.apply(u));return[m,m,u]}))}getConfig(){const t={units:this.units,activation:C$(this.activation),recurrentActivation:C$(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Fv(this.kernelInitializer),recurrentInitializer:Fv(this.recurrentInitializer),biasInitializer:Fv(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:F$(this.kernelRegularizer),recurrentRegularizer:F$(this.recurrentRegularizer),biasRegularizer:F$(this.biasRegularizer),activityRegularizer:F$(this.activityRegularizer),kernelConstraint:Rw(this.kernelConstraint),recurrentConstraint:Rw(this.recurrentConstraint),biasConstraint:Rw(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation},e=super.getConfig();return Object.assign(t,e),t}}pI.className="LSTMCell",ep(pI);class fI extends aI{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new pI(t),super(t)}call(t,e){return ip((()=>{null!=this.cell.dropoutMask&&(op(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(op(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}get units(){return this.cell.units}get activation(){return this.cell.activation}get recurrentActivation(){return this.cell.recurrentActivation}get useBias(){return this.cell.useBias}get kernelInitializer(){return this.cell.kernelInitializer}get recurrentInitializer(){return this.cell.recurrentInitializer}get biasInitializer(){return this.cell.biasInitializer}get unitForgetBias(){return this.cell.unitForgetBias}get kernelRegularizer(){return this.cell.kernelRegularizer}get recurrentRegularizer(){return this.cell.recurrentRegularizer}get biasRegularizer(){return this.cell.biasRegularizer}get kernelConstraint(){return this.cell.kernelConstraint}get recurrentConstraint(){return this.cell.recurrentConstraint}get biasConstraint(){return this.cell.biasConstraint}get dropout(){return this.cell.dropout}get recurrentDropout(){return this.cell.recurrentDropout}get implementation(){return this.cell.implementation}getConfig(){const t={units:this.units,activation:C$(this.activation),recurrentActivation:C$(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Fv(this.kernelInitializer),recurrentInitializer:Fv(this.recurrentInitializer),biasInitializer:Fv(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:F$(this.kernelRegularizer),recurrentRegularizer:F$(this.recurrentRegularizer),biasRegularizer:F$(this.biasRegularizer),activityRegularizer:F$(this.activityRegularizer),kernelConstraint:Rw(this.kernelConstraint),recurrentConstraint:Rw(this.recurrentConstraint),biasConstraint:Rw(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation},e=super.getConfig();return delete e.cell,Object.assign(t,e),t}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}fI.className="LSTM",ep(fI);class gI extends lI{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return ip((()=>{let n=(t=t).slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let i;for(let o=0;o<this.cells.length;++o){const a=this.cells[o];n=r[o],i=0===o?[t[0]].concat(n):[i[0]].concat(n),i=a.call(i,e),s.push(i.slice(1))}n=[];for(const t of s.slice().reverse())n.push(...t);return[i[0]].concat(n)}))}build(t){let e;zv(t)&&(t=t[0]),t=t,this.cells.forEach(((n,r)=>{Ww(`RNNCell_${r}`,(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=[];for(const e of this.cells)t.push({className:e.getClassName(),config:e.getConfig()});const e={cells:t},n=super.getConfig();return Object.assign(e,n),e}static fromConfig(t,e,n={}){const r=[];for(const t of e.cells)r.push(dk(t,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return Hv(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,s=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],s[t]])}Kv(e)}}function mI(t){const{ones:e,rate:n,training:r=!1,count:s=1}=t,i=()=>hv(e(),n),o=()=>dv(i,e,r);return!s||s<=1?ap(o().clone()):Array(s).fill(void 0).map(o).map((t=>ap(t.clone())))}gI.className="StackedRNNCells",ep(gI);var yI,bI,xI,wI,vI=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(t);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(t,r[s])&&(n[r[s]]=t[r[s]])}return n};class kI extends aI{constructor(t){if(t.unroll)throw new ew("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new ew("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new qv({ndim:5})]}call(t,e){return ip((()=>{if(null!=this.cell.dropoutMask&&(op(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(op(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new tw("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return ip((()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),s=Pf([r[0],...r.slice(2)]);return Array.isArray(e)?Array(e.length).fill(s):[s]}))}resetStates(t,e=!1){ip((()=>{if(!this.stateful)throw new Zx("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new tw("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Pf(s))):this.states_=[Pf(s)];else if(null==t)op(this.states_),null!=this.keptStates&&(op(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Pf(s))):this.states_[0]=Pf(s);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new tw(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):op(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=s;if(!_c(n.shape,r))throw new tw(`State ${e} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map((t=>ap(t.clone())))}))}getConfig(){const t=super.getConfig(),{cell:e}=t,n=vI(t,["cell"]),r=this.cell.getConfig();return Object.assign({},r,n)}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:s,strides:i,dilationRate:o}=this.cell,a="channelsFirst"===e,l=t[a?3:2],u=t[a?4:3],c=V$(l,r[0],s,i[0],o[0]),h=V$(u,r[1],s,i[1],o[1]);return[...t.slice(0,2),...a?[n,c,h]:[c,h,n]]}}kI.className="ConvRNN2D";class $I extends pI{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:s,dataFormat:i,dilationRate:o}=t;super(Object.assign({},t,{units:e})),this.filters=e,xw(this.filters,"filters"),this.kernelSize=U$(n,2,"kernelSize"),this.kernelSize.map((t=>xw(t,"kernelSize"))),this.strides=U$(r||1,2,"strides"),this.strides.map((t=>xw(t,"strides"))),this.padding=s||"valid",Lw(this.padding),this.dataFormat=i||"channelsLast",Bw(this.dataFormat),this.dilationRate=U$(o||1,2,"dilationRate"),this.dilationRate.map((t=>xw(t,"dilationRate")))}build(t){var e;t=Uv(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new tw(`The channel dimension of the input should be defined. Found ${t[n]}`);const r=t[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new((e=class extends gv{apply(t,e){return nv([n.apply([r]),Wf([r]),n.apply([2*r])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return ip((()=>{if(3!==t.length)throw new tw(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,r=t[0],s=t[1],i=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=mI({ones:()=>Zf(r),rate:this.dropout,training:n,count:4}));const o=this.dropoutMask,a=(t,e,n)=>e&&e[n]?Rf(e[n],t):t;let l=a(r,o,0),u=a(r,o,1),c=a(r,o,2),h=a(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=mI({ones:()=>Zf(s),rate:this.recurrentDropout,training:n,count:4}));const d=this.recurrentDropoutMask;let p=a(s,d,0),f=a(s,d,1),g=a(s,d,2),m=a(s,d,3);const[y,b,x,w]=vg(this.kernel.read(),4,3),[v,k,$,I]=this.useBias?vg(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,v,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,x,$,this.padding),h=this.inputConv(h,w,I,this.padding);const[S,E,C,N]=vg(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,S),f=this.recurrentConv(f,E),g=this.recurrentConv(g,C),m=this.recurrentConv(m,N);const R=this.recurrentActivation.apply(dp(l,p)),A=this.recurrentActivation.apply(dp(u,f)),T=dp(Rf(A,i),Rf(R,this.activation.apply(dp(c,g)))),D=Rf(this.recurrentActivation.apply(dp(h,m)),this.activation.apply(T));return[D,D,T]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=vI(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate};return Object.assign({},n,r)}inputConv(t,e,n,r){const s=tf(t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?cv(s,n,this.dataFormat):s}recurrentConv(t,e){return tf(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}$I.className="ConvLSTM2DCell",ep($I);class II extends kI{constructor(t){const e=new $I(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}II.className="ConvLSTM2D",ep(II);class SI extends Zv{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return ip((()=>{this.invokeCallHook(t,e);const n=Wv(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return dv((()=>hv(n,this.rate,r,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}SI.className="Dropout",ep(SI);class EI extends SI{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}EI.className="SpatialDropout1D",ep(EI);class CI extends Zv{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,xw(this.units,"units"),this.activation=R$(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=_v(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=_v(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Tw(t.kernelConstraint),this.biasConstraint=Tw(t.biasConstraint),this.kernelRegularizer=O$(t.kernelRegularizer),this.biasRegularizer=O$(t.biasRegularizer),this.activityRegularizer=O$(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=Uv(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=Uv(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return ip((()=>{this.invokeCallHook(t,e);const n=Wv(t),r=vw(this.activation.getClassName());let s;return null!=r?s=ov(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=ov(n,this.kernel.read()),null!=this.bias&&(s=cv(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const t={units:this.units,activation:C$(this.activation),useBias:this.useBias,kernelInitializer:Fv(this.kernelInitializer),biasInitializer:Fv(this.biasInitializer),kernelRegularizer:F$(this.kernelRegularizer),biasRegularizer:F$(this.biasRegularizer),activityRegularizer:F$(this.activityRegularizer),kernelConstraint:Rw(this.kernelConstraint),biasConstraint:Rw(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}CI.className="Dense",ep(CI);class NI extends Zv{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Uv(t);for(const e of t.slice(1))if(null==e)throw new tw(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],Kw(t,1)]}call(t,e){return ip((()=>{this.invokeCallHook(t,e);let n=Wv(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new tw(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],Kw(t.shape,1)];return t.reshape(e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}NI.className="Flatten",ep(NI);class RI extends Zv{constructor(t){super(t),this.supportsMasking=!0,this.activation=R$(t.activation)}call(t,e){return ip((()=>{this.invokeCallHook(t,e);const n=Wv(t);return this.activation.apply(n)}))}getConfig(){const t={activation:C$(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}RI.className="Activation",ep(RI);class AI extends Zv{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return ip((()=>{return t=Wv(t),e=t,n=this.n,ip((()=>{if(2!==e.shape.length)throw new tw(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return sv(Zw(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}AI.className="RepeatVector",ep(AI);class TI extends Zv{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let s=1,i=null;for(let t=0;t<r.length;++t){const e=r[t];if(this.isUnknown(e)){if(null!==i)throw new tw("Can only specifiy one unknown dimension.");i=t}else s*=e}const o=Kw(t);if(null!==i){if(0===s||o%s!=0)throw new tw(n);r[i]=o/s}else if(o!==s)throw new tw(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return ip((()=>{this.invokeCallHook(t,e);const n=Wv(t),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}TI.className="Reshape",ep(TI);class DI extends Zv{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=Yw(1,t.dims.length+1);if(!_c(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new qv({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=Uv(t)).slice();return this.dims.forEach(((n,r)=>{e[r+1]=t[n]})),e}call(t,e){return kp(Wv(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}DI.className="Permute",ep(DI);class FI extends Zv{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=Wv(t);return Ip(jf(n,this.maskValue),-1)}call(t,e){return ip((()=>{this.invokeCallHook(t,e);const n=Wv(t),r=Ip(jf(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}}FI.className="Masking",ep(FI);class _I extends Zv{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(aw(t.inputLength))}this.inputDim=t.inputDim,xw(this.inputDim,"inputDim"),this.outputDim=t.outputDim,xw(this.outputDim,"outputDim"),this.embeddingsInitializer=_v(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=O$(t.embeddingsRegularizer),this.activityRegularizer=O$(t.activityRegularizer),this.embeddingsConstraint=Tw(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return ip((()=>this.maskZero?(t=Wv(t),jf(t,Jf(t))):null))}computeOutputShape(t){if(t=Uv(t),null==this.inputLength)return[...t,this.outputDim];const e=aw(this.inputLength);if(e.length!==t.length-1)throw new tw(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let r=0;r<e.length;++r){const s=e[r],i=t[r+1];if(null!=s&&null!=i&&s!==i)throw new tw(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==s&&(e[n]=i),n++}}return[t[0],...e,this.outputDim]}call(t,e){return ip((()=>{this.invokeCallHook(t,e);let n=Wv(t);return"int32"!==n.dtype&&(n=Jw(n,"int32")),av(this.embeddings.read(),n.as1D()).reshape(Uv(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Fv(this.embeddingsInitializer),embeddingsRegularizer:F$(this.embeddingsRegularizer),activityRegularizer:F$(this.activityRegularizer),embeddingsConstraint:Rw(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}_I.className="Embedding",ep(_I);class OI extends Zv{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new ew}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const s=t[t.length-e.length+r],i=e[r];if(null==s||null==i||s<0||i<0)n.push(null);else if(1===s)n.push(i);else if(1===i)n.push(s);else{if(s!==i)throw new tw("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Uv(t)]),(t=t).length<2)throw new tw(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=gw(e),e.length>1)throw new tw(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const r=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=t.map((t=>t.length));-1===t.indexOf(null)&&1===gw(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return ip((()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const r=Xw(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=Zw(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const r of t){const t=r.rank;if(null==t){const t=r.shape,s=t[0],i=t.slice(1).concat([s]);let o=r.reshape([s].concat(Kw(t.slice(1))));o=kp(o,[1,0]),o=o.reshape(i),e.push(o),n=!0}else if(t>1){const s=Yw(1,t).concat([0]);e.push(kp(r,s)),n=!0}else e.push(r)}let r=this.mergeFunction(e);const s=r.rank;if(n)if(null==s){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=kp(r.reshape([-1,e]),[1,0]).reshape(n)}else if(s>1){const t=[s-1].concat(Yw(0,s-1));r=kp(r,t)}return r}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const r=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=gw(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return ip((()=>{if(null==e)return null;if(!Array.isArray(e))throw new tw("`mask` should be an Array");if(!Array.isArray(t))throw new tw("`inputs` should be an Array");if(e.length!==t.length)throw new tw(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:ff(t,0))))[0];for(let t=1;t<e.length-1;++t)n=Bf(n,e[t]);return n}))}}class MI extends OI{constructor(t){super(t)}mergeFunction(t){return ip((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=dp(e,t[n]);return e}))}}MI.className="Add",ep(MI);class BI extends OI{constructor(t){super(t)}mergeFunction(t){return ip((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Rf(e,t[n]);return e}))}}BI.className="Multiply",ep(BI);class LI extends OI{constructor(t){super(t)}mergeFunction(t){return ip((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=dp(e,t[n]);return Rf(1/t.length,e)}))}}LI.className="Average",ep(LI);class zI extends OI{constructor(t){super(t)}mergeFunction(t){return ip((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Nf(e,t[n]);return e}))}}zI.className="Maximum",ep(zI);class PI extends OI{constructor(t){super(t)}mergeFunction(t){return ip((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Gf(e,t[n]);return e}))}}PI.className="Minimum",ep(PI);class WI extends OI{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new tw("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const r=t[e].slice();r.splice(this.axis,1);let s=!1;for(const t of n)if(_c(t,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new tw("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return ip((()=>nv(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new tw("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[r]||null==t[r]){n[r]=null;break}n[r]+=t[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new tw("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new tw("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new tw(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return ip((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const r=[];for(let n=0;n<t.length;++n)null==e[n]?r.push(Zf(t[n]).asType("bool")):e[n].rank<t[n].rank?r.push(ff(e[n],-1)):r.push(e[n]);const s=Xp(r,this.axis);return $p(s,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function UI(t,e){for(;t<0;)t+=e;return t}WI.className="Concatenate",ep(WI);class VI extends OI{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){Rc(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new ew("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new tw(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new tw(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>UI(e,t[n].shape.length))):[UI(this.axes,n.shape.length),UI(this.axes,r.shape.length)],this.normalize&&(n=pk(n,e[0]),r=pk(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new ew("batchDot is not implemented for tensors of 4D or higher rank yet");if(Rc(t.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`)),Rc(t.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new ew("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,s=e.shape.length;null==n&&(n=[r-1,s-2]);const i=n;return ip((()=>{let n,o;if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)o=i[0]===i[1]?t.mul(e).sum(i[0]):t.transpose([1,0]).mul(e).sum(i[1]);else{const n=i[0]!==t.shape.length-1,r=i[1]===e.shape.length-1;o=t.matMul(e,n,r)}if(n>0){let t;t=r>s?r+s-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);o=o.squeeze(e)}return 1===o.shape.length&&(o=o.expandDims(1)),o}))}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[UI(this.axes,t.length),UI(this.axes,e.length)],n}computeOutputShape(t){Rc(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new ew("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=e.concat(n);return 1===s.length&&s.push(1),s}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}VI.className="Dot",ep(VI);class GI extends Zv{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return ip((()=>{this.invokeCallHook(t,e);const n=Wv(t);return dv((()=>iv(n.shape,0,this.stddev).add(n)),(()=>n),e.training||!1)}))}}GI.className="GaussianNoise",ep(GI);class HI extends Zv{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return ip((()=>{this.invokeCallHook(t,e);const n=Wv(t);return this.rate>0&&this.rate<1?dv((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(iv(n.shape,1,t))}),(()=>n),e.training||!1):n}))}}HI.className="GaussianDropout",ep(HI);class KI extends Zv{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Wv(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return ip((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return dv((()=>{const e=Wv(t),r=-1.7580993408473766;let s=Ef(ig(n),this.rate);s=Jw(s,"float32");const i=((1-this.rate)*(1+this.rate*r**2))**-.5,o=-i*r*this.rate;return e.mul(s).add(s.add(-1).mul(r)).mul(i).add(o)}),(()=>Wv(t)),e.training||!1)}return t}))}}function qI(t,e,n,r,s,i=.001){let o;if(2===t.rank)o=Vp(t,e,n,r,s,i);else if(3===t.rank)o=Gp(t,e,n,r,s,i);else{if(4!==t.rank)throw new ew(`batchNormalization is not implemented for array of rank ${t.rank} yet`);o=Hp(t,e,n,r,s,i)}return o}KI.className="AlphaDropout",ep(KI);class jI extends Zv{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=_v(t.betaInitializer||"zeros"),this.gammaInitializer=_v(t.gammaInitializer||"ones"),this.movingMeanInitializer=_v(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=_v(t.movingVarianceInitializer||"ones"),this.betaConstraint=Tw(t.betaConstraint),this.gammaConstraint=Tw(t.gammaConstraint),this.betaRegularizer=O$(t.betaRegularizer),this.gammaRegularizer=O$(t.gammaRegularizer)}build(t){t=Uv(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new tw(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new qv({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return ip((()=>{const n=null!=e.training&&e.training,r=Wv(t),s=r.shape,i=s.length,o=Yw(0,i),a=this.axis>=0?this.axis:this.axis+i;o.splice(a,1);const l=rw(1,i);l[a]=s[a];const u=o.slice();u.sort();const c=!_c(u,Yw(0,i).slice(0,i-1));if(!n)return(()=>{if(c){const t=this.movingMean.read().reshape(l),e=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,s=this.scale?this.gamma.read().reshape(l):null;return qI(r,t,e,n,s,this.epsilon)}return qI(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(t,e,n,r,s=.001){return _c(r.slice().sort(),Yw(0,t.rank-1))?function(t,e,n,r,s=.001){return ip((()=>{const i=Kf(t,r),o=i.mean,a=i.variance;return[qI(t,o,a,n,e,s),o,a]}))}(t,e,n,r,s):function(t,e,n,r,s=.001){return ip((()=>{const i=Kf(t,r),o=i.mean,a=i.variance,l=[];for(const e of Yw(0,t.rank))-1!==r.indexOf(e)?l.push(1):l.push(t.shape[e]);const u=o.reshape(l),c=a.reshape(l),h=null==e?null:e.reshape(l),d=null==n?null:n.reshape(l);return[qI(t,u,c,d,h,s),o,a]}))}(t,e,n,r,s)}(r,this.gamma.read(),this.beta.read(),o,this.epsilon),f=(t,e,n)=>{ip((()=>{const r=1-n,s=t.read(),i=s.sub(e).mul(r);t.write(s.sub(i))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Fv(this.betaInitializer),gammaInitializer:Fv(this.gammaInitializer),movingMeanInitializer:Fv(this.movingMeanInitializer),movingVarianceInitializer:Fv(this.movingVarianceInitializer),betaRegularizer:F$(this.betaRegularizer),gammaRegularizer:F$(this.gammaRegularizer),betaConstraint:Rw(this.betaConstraint),gammaConstraint:Rw(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}jI.className="BatchNormalization",ep(jI);class XI extends Zv{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=_v(t.betaInitializer||"zeros"),this.gammaInitializer=_v(t.gammaInitializer||"ones"),this.betaRegularizer=O$(t.betaRegularizer),this.gammaRegularizer=O$(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=Uv(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error(`Invalid axis: ${t}`);if(this.axis.length!==gw(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=Wv(t),r=n.shape,s=r.length;return ip((()=>{let{mean:t,variance:e}=Kf(n,this.axis,!0);const i=rw(1,s);for(const t of this.axis)i[t]=r[t];const o=t=>null!=t&&t.shape.length!==s&&this.axis!==[s-1]?t.reshape(i):t;let a=o(this.gamma.read()),l=o(this.beta.read());const u=[],c=[];for(let t=0;t<s;++t)-1!==this.axis.indexOf(t)?(u.push(r[t]),c.push(1)):(u.push(1),c.push(r[t]));return t=t.tile(u),e=e.tile(u),a=a.tile(c),l=l.tile(c),qI(n,t,e,l,a,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Fv(this.betaInitializer),gammaInitializer:Fv(this.gammaInitializer),betaRegularizer:F$(this.betaRegularizer),gammaRegularizer:F$(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}XI.className="LayerNormalization",ep(XI);class YI extends Zv{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new tw(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new tw(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new tw(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new qv({ndim:4})]}computeOutputShape(t){let e,n;return t=Uv(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return ip((()=>{return e=Wv(t),n=this.padding,r=this.dataFormat,ip((()=>{if(4!==e.rank)throw new tw(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new tw("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new tw(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Qf(e,t)}));var e,n,r}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function JI(t,e,n,r,s,i){return ip((()=>{let o;Bw(s),zw(i),Lw(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),t=H$(t,s);const a="same"===r?"same":"valid";return o="max"===i?Lf(t,e,n,a):zp(t,e,n,a),"channelsFirst"===s&&(o=kp(o,[0,3,1,2])),o}))}function ZI(t,e,n,r,s,i){return ip((()=>{let o;Bw(s),zw(i),Lw(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),t=K$(t,s);const a="same"===r?"same":"valid";return o="max"===i?zf(t,e,n,a):Pp(t,e,n,a),"channelsFirst"===s&&(o=kp(o,[0,4,1,2,3])),o}))}YI.className="ZeroPadding2D",ep(YI);class QI extends Zv{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new tw(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(xw(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new tw(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}xw(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,Lw(this.padding),this.inputSpec=[new qv({ndim:3})]}computeOutputShape(t){const e=V$((t=Uv(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return ip((()=>{this.invokeCallHook(t,e),t=Zw(Wv(t),2);const n=this.poolingFunction(Wv(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return $g(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class tS extends QI{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Bw(s),Lw(r),JI(t,e,n,r,s,"max")}}tS.className="MaxPooling1D",ep(tS);class eS extends QI{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Bw(s),Lw(r),JI(t,e,n,r,s,"avg")}}eS.className="AveragePooling1D",ep(eS);class nS extends Zv{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new tw(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];xw(this.poolSize,"poolSize"),xw(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Bw(this.dataFormat),Lw(this.padding),this.inputSpec=[new qv({ndim:4})]}computeOutputShape(t){t=Uv(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=V$(e,this.poolSize[0],this.padding,this.strides[0]),n=V$(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return ip((()=>(this.invokeCallHook(t,e),this.poolingFunction(Wv(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class rS extends nS{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Bw(s),Lw(r),JI(t,e,n,r,s,"max")}}rS.className="MaxPooling2D",ep(rS);class sS extends nS{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Bw(s),Lw(r),JI(t,e,n,r,s,"avg")}}sS.className="AveragePooling2D",ep(sS);class iS extends Zv{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new tw(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];xw(this.poolSize,"poolSize"),xw(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Bw(this.dataFormat),Lw(this.padding),this.inputSpec=[new qv({ndim:5})]}computeOutputShape(t){t=Uv(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=V$(e,this.poolSize[0],this.padding,this.strides[0]),n=V$(n,this.poolSize[1],this.padding,this.strides[1]),r=V$(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return ip((()=>(this.invokeCallHook(t,e),this.poolingFunction(Wv(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class oS extends iS{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Bw(s),Lw(r),ZI(t,e,n,r,s,"max")}}oS.className="MaxPooling3D",ep(oS);class aS extends iS{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Bw(s),Lw(r),ZI(t,e,n,r,s,"avg")}}aS.className="AveragePooling3D",ep(aS);class lS extends Zv{constructor(t){super(t),this.inputSpec=[new qv({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new ew}}class uS extends lS{constructor(t){super(t||{})}call(t,e){return ip((()=>{const e=Wv(t);return Uf(e,1)}))}}uS.className="GlobalAveragePooling1D",ep(uS);class cS extends lS{constructor(t){super(t||{})}call(t,e){return ip((()=>{const e=Wv(t);return Ff(e,1)}))}}cS.className="GlobalMaxPooling1D",ep(cS);class hS extends Zv{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Bw(this.dataFormat),this.inputSpec=[new qv({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new ew}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class dS extends hS{call(t,e){return ip((()=>{const e=Wv(t);return"channelsLast"===this.dataFormat?Uf(e,[1,2]):Uf(e,[2,3])}))}}dS.className="GlobalAveragePooling2D",ep(dS);class pS extends hS{call(t,e){return ip((()=>{const e=Wv(t);return"channelsLast"===this.dataFormat?Ff(e,[1,2]):Ff(e,[2,3])}))}}pS.className="GlobalMaxPooling2D",ep(pS);class fS extends Zv{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=dk(e.layer,n);delete e.layer;const s={layer:r};return Object.assign(s,e),new t(s)}}class gS extends fS{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=Uv(t)).length<3)throw new tw(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=Uv(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return ip((()=>oI(((t,n)=>[Wv(this.layer.call(t,e)),[]]),t=Wv(t),[],!1,null,null,!1,!0)[1]))}}gS.className="TimeDistributed",ep(gS);class mS extends fS{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=dk(n),e.goBackwards=!0!==e.goBackwards;const r={};var s;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=dk(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,s=this.mergeMode,yw(Ow,"BidirectionalMergeMode",s),t.weights)throw new ew("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,s=this.forwardLayer.computeOutputShape(t);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(r=s.slice(1),e=s[0]):e=s[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):ow(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=iI(t,n,r,this.numConstants);if(t=s.inputs,n=s.initialState,r=s.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const i=[],o=[];if(null!=n){const t=n.length;if(t%2>0)throw new tw("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,i.push(...n);const r=n.map((t=>new qv({shape:t.shape})));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),o.push(...r)}if(null!=r)throw new ew("Support for constants in Bidirectional layers is not implemented yet.");const a=i[0]instanceof jv;for(const t of i)if(t instanceof jv!==a)throw new tw("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(a){const n=[t].concat(i),r=this.inputSpec.concat(o),s=this.inputSpec;this.inputSpec=r;const a=super.apply(n,e);return this.inputSpec=s,a}return super.apply(t,e)}call(t,e){return ip((()=>{const n=e.initialState;let r,s,i,o;if(null==n)r=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{const i=n.slice(0,n.length/2),o=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:i})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:o}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=ug(s,1)),"concat"===this.mergeMode?o=nv([r,s]):"sum"===this.mergeMode?o=dp(r,s):"ave"===this.mergeMode?o=Rf(.5,dp(r,s)):"mul"===this.mergeMode?o=Rf(r,s):null==this.mergeMode&&(o=[r,s]),this.returnState?null==this.mergeMode?o.concat(i):[o].concat(i):o}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Ww(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),Ww(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=dk(e.layer);if(delete e.layer,null!=e.numConstants)throw new ew("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}function yS(t,e,n=new Map,r=new Set){if(null==t)return null;if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(vS(t)){const s=Array.isArray(t)?[]:{};r.add(t);for(const i in t){const o=yS(t[i],e,n,r);s[i]=o}return r.delete(t),s}throw new Error(`Can't recurse into non-iterable type: ${t}`)}return n.set(t,s.value),s.value}function bS(t,e=wS){return xS(t,e)}function xS(t,e,n=new Set){const r=t[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(vS(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const i in r){const r=xS(t.map((t=>t[i])),e,n);s[i]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function wS(t){return null===t?null:vS(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function vS(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof xh))}function kS(t){return yS(t,$S)}function $S(t){return t instanceof xh?{value:t.clone(),recurse:!1}:vS(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}mS.className="Bidirectional",ep(mS),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(yI||(yI={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(bI||(bI={}));class IS{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class SS extends IS{constructor(){super(SS.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let t=0;t<n;t++)e[t]=this.get(this.wrap(this.begin+t));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}SS.INITIAL_CAPACITY=32;class ES{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new OS(this,t)}filter(t){return new FS(this,t)}map(t){return new _S(this,t)}mapAsync(t){return new MS(this,t)}serialMapAsync(t){return new MS(this,t).serial()}flatmap(t){return new LS(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t,e=!0){return new DS(this,t,e)}columnMajorBatch(t,e=!0,n=wS){return this.rowMajorBatch(t,e).map((t=>bS(t,n)))}concatenate(t,e){return new zS(new CS([this,t]),e)}take(t){return t<0||null==t?this:new TS(this,t)}skip(t){return t<0||null==t?this:new AS(this,t)}prefetch(t){return new PS(this,t)}shuffle(t,e){return new WS(this,t,e)}serial(){return new RS(this)}}class CS extends ES{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:kS(t),done:!1}}}class NS extends ES{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class RS extends ES{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class AS extends ES{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;op(t.value)}return this.upstream.next()}}class TS extends ES{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class DS extends ES{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class FS extends ES{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;op(t.value)}}}class _S extends ES{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=Th(t.value),n=this.transform(t.value),r=Th(n);for(const t of e)Ah(t,r)||t.dispose();return{value:n,done:!1}}}class OS extends ES{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class MS extends ES{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=Th(t.value),n=await this.transform(t.value),r=Th(n);for(const t of e)Ah(t,r)||t.dispose();return{value:n,done:!1}}}class BS extends ES{constructor(){super(),this.outputQueue=new SS,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class LS extends BS{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=Th(t.value),n=this.transform(t.value),r=Th(n);this.outputQueue.pushAll(n);for(const t of e)Ah(t,r)||t.dispose();return!0}}class zS extends ES{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}(wI=xI||(xI={}))[wI.FAIL=0]="FAIL",wI[wI.SHORTEST=1]="SHORTEST",wI[wI.LONGEST=2]="LONGEST";class PS extends ES{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new IS(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class WS extends PS{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=eg.alea(n||nh().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class US{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return Rc(t>0,(()=>`batchSize needs to be positive, but it is\n      ${t}`)),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),VS((async()=>(await n.iterator()).columnMajorBatch(t,e,GS)),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,VS((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,VS((async()=>(await e.iterator()).filter((e=>ip((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return VS((async()=>(await e.iterator()).map((e=>ip((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return VS((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return VS((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,VS((async()=>{return n=(s=async()=>({value:await e.iterator(),done:!1}),new NS(s)).take(t),new zS(n,r);var n,r,s}),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,VS((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=eg.alea(e||nh().toString());return VS((async()=>{let e=s.int32();return n&&(e+=s.int32()),(await r.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,VS((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function VS(t,e=null){return new class extends US{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function GS(t){if(null===t)return null;return null==(e=t[0])||null===(n=e)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(e)||"object"==typeof e&&e instanceof xh||Vc(e)?{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof xh?Ig(t):jh(t)}(t),recurse:!1}:{value:null,recurse:!0};var e,n}function HS(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&jt("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the CPU backend.`))}))}function KS(t,e,n,r,s,i){const o=s.strideHeight,a=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=Cn(s.outShape,n),m=g.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let e=0;e<s.batchSize;++e){const n=e*y,g=e*r[0];for(let e=0;e<s.inChannels;++e)for(let y=0;y<s.outHeight;++y){const w=y*o-d,v=Math.max(0,w),k=Math.min(s.inHeight,c+w),$=n+y*b;for(let n=0;n<s.outWidth;++n){const o=n*a-p,c=Math.max(0,o),d=Math.min(s.inWidth,h+o);let y=f,b=0,w=0;for(let n=v;n<k;n+=l){const s=g+n*r[1];for(let n=c;n<d;n+=u){const o=t[s+n*r[2]+e];"max"===i&&o>y?y=o:"avg"===i&&(b+=o,w++)}if(isNaN(y))break}m[$+n*x+e]="avg"===i?b/w:y}}}return g}function qS(t,e,n,r,s=!1,i=!1){const o=Cn(r.outShape,"int32"),a=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,g=Cn(e,n,t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.outHeight;++n){const m=n*a-p;let y=m;for(;y<0;)y+=u;const b=Math.min(r.inHeight,h+m);for(let a=0;a<r.outWidth;++a){const h=a*l-f;let p=h;for(;p<0;)p+=c;const x=Math.min(r.inWidth,d+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=u){const o=n-m;for(let a=p;a<x;a+=c){const l=a-h,u=g.get(t,n,a,e);u>w&&(w=u,v=s?i?((t*r.inHeight+n)*r.inWidth+a)*r.inChannels+e:(n*r.inWidth+a)*r.inChannels+e:o*d+l)}}o.set(v,t,n,a,e)}}return o}US.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const jS=function(t,e,n,r,s){return Zr(t,e,n,r,s,0).selectedIndices};function XS(t,e,n,r){if("linear"===n)return t.linear(e);if("relu"===n)return t.relu(e);if("elu"===n)return t.elu(e);if("relu6"===n)return t.relu6(e);if("prelu"===n)return t.prelu(e,r);throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}class YS extends class{time(t){return ai("time")}read(t){return ai("read")}readSync(t){return ai("readSync")}numDataIds(){return ai("numDataIds")}disposeData(t){return ai("disposeData")}write(t,e,n){return ai("write")}move(t,e,n,r){return ai("move")}memory(){return ai("memory")}floatPrecision(){return ai("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(t,e,n,r){return ai("batchMatMul")}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:i,preluActivationWeights:o}){return ai("fusedBatchMatMul")}slice(t,e,n){return ai("slice")}stridedSlice(t,e,n,r){return ai("stridedSlice")}unstack(t,e){return ai("unstack")}reverse(t,e){return ai("reverse")}concat(t,e){return ai("concat")}neg(t){return ai("neg")}add(t,e){return ai("add")}addN(t){return ai("addN")}subtract(t,e){return ai("subtract")}multiply(t,e){return ai("multiply")}realDivide(t,e){return ai("realDivide")}floorDiv(t,e){return ai("floorDiv")}sum(t,e){return ai("sum")}prod(t,e){return ai("prod")}unsortedSegmentSum(t,e,n){return ai("unsortedSegmentSum")}argMin(t,e){return ai("argMin")}argMax(t,e){return ai("argMax")}equal(t,e){return ai("equal")}notEqual(t,e){return ai("notEqual")}less(t,e){return ai("less")}lessEqual(t,e){return ai("lessEqual")}greater(t,e){return ai("greater")}greaterEqual(t,e){return ai("greaterEqual")}logicalNot(t){return ai("logicalNot")}logicalAnd(t,e){return ai("logicalAnd")}logicalOr(t,e){return ai("logicalOr")}where(t){return ai("where")}select(t,e,n){return ai("select")}topk(t,e,n){return ai("topk")}min(t,e){return ai("min")}minimum(t,e){return ai("minimum")}mod(t,e){return ai("mod")}max(t,e){return ai("max")}maximum(t,e){return ai("maximum")}all(t,e){return ai("all")}any(t,e){return ai("any")}squaredDifference(t,e){return ai("squaredDifference")}ceil(t){return ai("ceil")}floor(t){return ai("floor")}round(t){return ai("round")}sign(t){return ai("sign")}isNaN(t){return ai("isNaN")}isInf(t){return ai("isInf")}isFinite(t){return ai("isFinite")}pow(t,e){return ai("pow")}exp(t){return ai("exp")}expm1(t){return ai("expm1")}softmax(t,e){return ai("softmax")}log(t){return ai("log")}log1p(t){return ai("log1p")}sqrt(t){return ai("sqrt")}rsqrt(t){return ai("rsqrt")}square(t){return ai("square")}reciprocal(t){return ai("reciprocal")}relu(t){return ai("relu")}relu6(t){return ai("relu6")}prelu(t,e){return ai("prelu")}elu(t){return ai("elu")}eluDer(t,e){return ai("eluDer")}selu(t){return ai("selu")}int(t){return ai("int")}clip(t,e,n){return ai("clip")}abs(t){return ai("abs")}complexAbs(t){return ai("complexAbs")}sigmoid(t){return ai("sigmoid")}softplus(t){return ai("softplus")}sin(t){return ai("sin")}cos(t){return ai("cos")}tan(t){return ai("tan")}asin(t){return ai("asin")}acos(t){return ai("acos")}atan(t){return ai("atan")}atan2(t,e){return ai("atan2")}sinh(t){return ai("sinh")}cosh(t){return ai("cosh")}tanh(t){return ai("tanh")}asinh(t){return ai("asinh")}acosh(t){return ai("acosh")}atanh(t){return ai("atanh")}erf(t){return ai("erf")}step(t,e){return ai("step")}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){return ai("fusedConv2d")}conv2d(t,e,n){return ai("conv2d")}conv2dDerInput(t,e,n){return ai("conv2dDerInput")}conv2dDerFilter(t,e,n){return ai("conv2dDerFilter")}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){return ai("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return ai("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return ai("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return ai("depthwiseConv2DDerFilter")}conv3d(t,e,n){return ai("conv3d")}conv3dDerInput(t,e,n){return ai("conv3dDerInput")}conv3dDerFilter(t,e,n){return ai("conv3dDerFilter")}maxPool(t,e){return ai("maxPool")}maxPoolBackprop(t,e,n,r){return ai("maxPoolBackprop")}avgPool(t,e){return ai("avgPool")}avgPoolBackprop(t,e,n){return ai("avgPoolBackprop")}avgPool3d(t,e){return ai("avgPool3d")}avgPool3dBackprop(t,e,n){return ai("avgPool3dBackprop")}maxPool3d(t,e){return ai("maxPool3d")}maxPool3dBackprop(t,e,n,r){return ai("maxPool3dBackprop")}reshape(t,e){return ai("reshape")}cast(t,e){return ai("cast")}tile(t,e){return ai("tile")}pad(t,e,n){return ai("pad")}transpose(t,e){return ai("transpose")}gather(t,e,n){return ai("gather")}gatherND(t,e){return ai("gatherND")}scatterND(t,e,n){return ai("scatterND")}batchToSpaceND(t,e,n){return ai("batchToSpaceND")}spaceToBatchND(t,e,n){return ai("spaceToBatchND")}resizeBilinear(t,e,n,r){return ai("resizeBilinear")}resizeBilinearBackprop(t,e,n){return ai("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,r){return ai("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return ai("resizeNearestNeighborBackprop")}batchNorm(t,e,n,r,s,i){return ai("batchNorm")}localResponseNormalization4D(t,e,n,r,s){return ai("localResponseNormalization4D")}LRNGrad(t,e,n,r,s,i,o){return ai("LRNGrad")}multinomial(t,e,n,r){return ai("multinomial")}oneHot(t,e,n,r){return ai("oneHot")}cumsum(t,e,n,r){return ai("cumsum")}nonMaxSuppression(t,e,n,r,s){return ai("nonMaxSuppression")}fft(t){return ai("fft")}ifft(t){return ai("ifft")}complex(t,e){return ai("complex")}real(t){return ai("real")}imag(t){return ai("imag")}cropAndResize(t,e,n,r,s,i){return ai("cropAndResize")}depthToSpace(t,e,n){return ai("depthToSpace")}split(t,e,n){return ai("split")}sparseToDense(t,e,n,r){return ai("sparseToDense")}diag(t){return ai("diag")}fill(t,e,n){return ai("fill")}onesLike(t){return ai("onesLike")}zerosLike(t){return ai("zerosLike")}linspace(t,e,n){return ai("linspace")}dispose(){return ai("dispose")}}{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new oi(this,bs())}write(t,e,n){this.firstUse&&(this.firstUse=!1,o().get("IS_NODE")&&function(...t){o().getBool("IS_TEST")||console.warn(...t)}("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,n,r){this.data.set(t,{values:e,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensors:n}=this.data.get(t);return"complex64"===e?function(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>xe(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Cn(t.shape,t.dtype,n)}makeOutput(t,e,n){const r=this.write(t,e,n);return bs().makeTensorFromDataId(r,e,n,this)}disposeData(t){if(this.data.has(t)){const{complexTensors:e}=this.data.get(t);null!=e&&(e.real.dispose(),e.imag.dispose()),this.data.delete(t)}}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.data.has(e)){const t=this.data.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}async time(t){const e=ye();return t(),{kernelMs:ye()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}complex(t,e){const n=this.makeOutput(null,t.shape,"complex64");return this.data.get(n.dataId).complexTensors={real:bs().keep(t.clone()),imag:bs().keep(e.clone())},n}real(t){return this.data.get(t.dataId).complexTensors.real.clone()}imag(t){return this.data.get(t.dataId).complexTensors.imag.clone()}slice(t,e,n){if(HS(t,"slice"),function(t,e,n){let r=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){r=t;break}for(let s=r+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}(t.shape,e,n)){const r=function(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}(e,t.strides),s=Zt(n);return Rr(this.readSync(t.dataId).subarray(r,r+s),n,t.dtype)}const r=Cn(n,t.dtype),s=this.bufferSync(t);for(let t=0;t<r.size;++t){const n=r.indexToLoc(t).map(((t,n)=>t+e[n]));r.values[t]=s.get(...n)}return r.toTensor()}stridedSlice(t,e,n,r){HS(t,"stridedSlice");const s=Gn(e,n,r);if(s.some((t=>0===t)))return Rr([],s);const i=Cn(s,t.dtype),o=this.bufferSync(t);for(let t=0;t<i.size;t++){const n=i.indexToLoc(t),s=new Array(n.length);for(let t=0;t<s.length;t++)s[t]=n[t]*r[t]+e[t];i.set(o.get(...s),...n)}return i.toTensor()}diag(t){const e=this.readSync(t.dataId),n=Cn([t.size,t.size],t.dtype),r=n.values;for(let n=0;n<e.length;n++)r[n*t.size+n]=e[n];return n.toTensor()}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let s=0;for(let n=0;n<t.rank;n++)n!==e&&(r[s++]=t.shape[n]);const i=new Array(t.rank).fill(0),o=t.shape.slice();o[e]=1;const a=new Array(n);for(let n=0;n<a.length;n++)i[e]=n,a[n]=this.slice(t,i,o).reshape(r);return a}reverse(t,e){HS(t,"reverse");const n=Cn(t.shape,t.dtype),r=this.bufferSync(t);for(let s=0;s<n.size;s++){const i=n.indexToLoc(s),o=i.slice();e.forEach((e=>o[e]=t.shape[e]-1-o[e])),n.set(r.get(...o),...i)}return n.toTensor()}concat(t,e){if("complex64"===t[0].dtype){const n=t.map((t=>Er(t))),r=t.map((t=>fr(t)));return ar(this.concat(n,e),this.concat(r,e))}const n=t.map((t=>{const n=Zt(t.shape.slice(e));return t.as2D(-1,n)})),r=Nr(n.map((t=>t.shape)),1),s=Cn(r,t[0].dtype).values;if(1===n[0].shape[0]){let t=0;n.forEach((e=>{s.set(this.readSync(e.dataId),t),t+=e.size}))}else{let t=0;n.forEach((e=>{const n=this.readSync(e.dataId);let i=0;for(let o=0;o<e.shape[0];++o){const a=o*r[1]+t;for(let t=0;t<e.shape[1];++t)s[a+t]=n[i++]}t+=e.shape[1]}))}const i=Nr(t.map((t=>t.shape)),e);return Rr(s,i,t[0].dtype)}neg(t){return HS(t,"neg"),this.multiply(kr(-1),t)}add(t,e){return"complex64"===t.dtype||"complex64"===e.dtype?this.broadcastedBinaryComplexOp(t.cast("complex64"),e.cast("complex64"),((t,e,n,r)=>({real:t+n,imag:e+r}))):this.broadcastedBinaryOp(t,e,Ue(t.dtype,e.dtype),((t,e)=>t+e))}addN(t){HS(t,"addN");const e=t.map((t=>this.readSync(t.dataId))),n=Cn(t[0].shape,t[0].dtype),r=n.values;for(let n=0;n<t.length;n++){const t=e[n];for(let e=0;e<r.length;e++)r[e]+=t[e]}return n.toTensor()}softmax(t,e){const n=re([e],t.shape),r=mr(t,n),s=tr(r.shape,n),i=this.subtract(t,r.reshape(s)),o=this.exp(i),a=this.sum(o,n).reshape(s);return ur(o,a)}subtract(t,e){return"complex64"===t.dtype||"complex64"===e.dtype?this.broadcastedBinaryComplexOp(t.cast("complex64"),e.cast("complex64"),((t,e,n,r)=>({real:t-n,imag:e-r}))):this.broadcastedBinaryOp(t,e,Ue(t.dtype,e.dtype),((t,e)=>t-e))}pow(t,e){return HS([t,e],"pow"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.pow(t,e)))}batchMatMul(t,e,n,r){HS([t,e],"matMul");const s=n?t.shape[1]:t.shape[2],i=n?t.shape[2]:t.shape[1],o=r?e.shape[1]:e.shape[2],a=t.shape[0],l=this.readSync(t.dataId),u=this.readSync(e.dataId),[c,h,d]=n?[t.strides[0],1,t.strides[1]]:[t.strides[0],t.strides[1],1],[p,f,g]=r?[1,e.strides[1],e.strides[0]]:[e.strides[1],1,e.strides[0]],m=i*o,y=Cn([a,i,o],t.dtype),b=y.values,x=this.blockSize;for(let t=0;t<a;t++)for(let e=0;e<i;e+=x)for(let n=0;n<o;n+=x)for(let r=0;r<s;r+=x){const a=Math.min(e+x,i),y=Math.min(n+x,o),w=Math.min(r+x,s);for(let s=e;s<a;s++)for(let e=n;e<y;e++){let n=0;for(let i=r;i<w;i++)n+=l[t*c+s*h+i*d]*u[i*p+e*f+t*g];b[t*m+(s*o+e)]+=n}}return y.toTensor()}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:i,preluActivationWeights:o}){let a=this.batchMatMul(t,e,n,r);return s&&(a=this.add(a,s)),i&&(a=XS(this,a,i,o)),a}multiply(t,e){return"complex64"===t.dtype||"complex64"===e.dtype?this.broadcastedBinaryComplexOp(t.cast("complex64"),e.cast("complex64"),((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n}))):this.broadcastedBinaryOp(t,e,Ue(t.dtype,e.dtype),((t,e)=>t*e))}floorDiv(t,e){return HS([t,e],"floorDiv"),this.broadcastedBinaryOp(t,e,"int32",((t,e)=>Math.floor(t/e)))}sum(t,e){HS(t,"sum"),er("sum",e,t.rank);const[n,r]=Qn(t.shape,e),s=xr(n,Ue(t.dtype,"int32")),i=Zt(r),o=this.readSync(s.dataId),a=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*i;let n=0;for(let t=0;t<i;++t)n+=a[e+t];o[t]=n}return s}prod(t,e){HS(t,"sum");const[n,r]=Qn(t.shape,e),s=xr(n,Ue(t.dtype,"int32")),i=Zt(r),o=this.readSync(s.dataId),a=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*i;let n=1;for(let t=0;t<i;++t)n*=a[e+t];o[t]=n}return s}unsortedSegmentSum(t,e,n){HS(t,"unsortedSegmentSum");const r=[],s=t.rank-e.rank;for(let t=0;t<s;++t)e=e.expandDims(t+1);for(let s=0;s<n;++s){const n=kr(s,"int32"),i=pr(n,e).asType("float32").mul(t).sum(0);r.push(i)}return Dr(r)}argMin(t,e){HS(t,"argMin");const n=[e];er("argMin",n,t.rank);const[r,s]=Qn(t.shape,n),i=xr(r,"int32"),o=Zt(s),a=this.readSync(i.dataId),l=this.readSync(t.dataId);for(let t=0;t<a.length;++t){const e=t*o;let n=l[e],r=0;for(let t=0;t<o;++t){const s=l[e+t];s<n&&(n=s,r=t)}a[t]=r}return i}argMax(t,e){HS(t,"argMax");const n=[e];er("argMax",n,t.rank);const[r,s]=Qn(t.shape,n),i=xr(r,"int32"),o=Zt(s),a=this.readSync(i.dataId),l=this.readSync(t.dataId);for(let t=0;t<a.length;++t){const e=t*o;let n=l[e],r=0;for(let t=0;t<o;++t){const s=l[e+t];s>n&&(n=s,r=t)}a[t]=r}return i}cumsum(t,e,n,r){if(HS(t,"cumsum"),e!==t.rank-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${t.rank-1} but got axis=${e}`);const s=Ue(t.dtype,"int32"),i=xr(t.shape,s),o=this.readSync(i.dataId),a=this.readSync(t.dataId),l=t.shape[t.rank-1],u=r?(t,e)=>t+l-e-1:(t,e)=>t+e;for(let t=0;t<a.length;t+=l)for(let e=0;e<l;e++){const r=u(t,e);if(0===e)o[r]=n?0:a[r];else{const s=u(t,e-1);o[r]=n?a[s]+o[s]:a[r]+o[s]}}return i}equal(t,e){return HS([t,e],"equal"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t===e?1:0))}notEqual(t,e){return HS([t,e],"notEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t!==e?1:0))}less(t,e){return HS([t,e],"less"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t<e?1:0))}lessEqual(t,e){return HS([t,e],"lessEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t<=e?1:0))}greater(t,e){return HS([t,e],"greater"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t>e?1:0))}greaterEqual(t,e){return HS([t,e],"greaterEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t>=e?1:0))}logicalNot(t){HS(t,"logicalNot");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n[t]=e[t]?0:1;return this.makeOutput(n,t.shape,"bool")}logicalAnd(t,e){return HS([t,e],"logicalAnd"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t&&e))}logicalOr(t,e){return HS([t,e],"logicalOr"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t||e))}select(t,e,n){HS([t,e,n],"select");const r=this.readSync(t.dataId),s=this.readSync(e.dataId),i=this.readSync(n.dataId),o=xr(e.shape,Ue(e.dtype,n.dtype)),a=this.readSync(o.dataId);let l=0;const u=0===t.rank||t.rank>1||1===e.rank?1:Zt(e.shape.slice(1));for(let t=0;t<r.length;t++)for(let e=0;e<u;e++)1===r[t]?a[l++]=s[t]:a[l++]=i[t];return o}where(t){HS([t],"where");const e=this.readSync(t.dataId);return function(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const r=Cn(t,"int32"),s=Cn([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const i=r.indexToLoc(n[e]),o=e*t.length;s.values.set(i,o)}return s.toTensor()}(t.shape,e)}topk(t,e,n){HS(t,"topk");return function(t,e,n,r,s){const i=e[e.length-1],[o,a]=[t.length/i,i],l=se(n,o*r),u=se("int32",o*r);for(let e=0;e<o;e++){const n=e*a,s=t.subarray(n,n+a),i=[];for(let t=0;t<s.length;t++)i.push({value:s[t],index:t});i.sort(((t,e)=>e.value-t.value));const o=e*r,c=l.subarray(o,o+r),h=u.subarray(o,o+r);for(let t=0;t<r;t++)c[t]=i[t].value,h[t]=i[t].index}const c=e.slice();return c[c.length-1]=r,[Rr(l,c,n),Rr(u,c,"int32")]}(this.readSync(t.dataId),t.shape,t.dtype,e)}min(t,e){HS(t,"min"),er("min",e,t.rank);const[n,r]=Qn(t.shape,e),s=xr(n,t.dtype),i=Zt(r),o=this.readSync(s.dataId),a=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*i;let n=a[e];for(let t=0;t<i;++t){const r=a[e+t];r<n&&(n=r)}o[t]=n}return s}minimum(t,e){return HS([t,e],"minimum"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.min(t,e)))}mod(t,e){return HS([t,e],"mod"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e}))}maximum(t,e){return HS([t,e],"maximum"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.max(t,e)))}all(t,e){HS(t,"all"),er("all",e,t.rank);const[n,r]=Qn(t.shape,e),s=xr(n,t.dtype),i=Zt(r),o=this.readSync(s.dataId),a=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*i;let n=a[e];for(let t=0;t<i;++t){const r=a[e+t];n=n&&r}o[t]=n}return s}any(t,e){HS(t,"any"),er("any",e,t.rank);const[n,r]=Qn(t.shape,e),s=xr(n,t.dtype),i=Zt(r),o=this.readSync(s.dataId),a=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*i;let n=a[e];for(let t=0;t<i;++t){const r=a[e+t];n=n||r}o[t]=n}return s}squaredDifference(t,e){return HS([t,e],"squaredDifference"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>{const n=t-e;return n*n}))}ceil(t){HS(t,"ceil");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=Math.ceil(e[t]);return this.makeOutput(n,t.shape,"float32")}floor(t){HS(t,"floor");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=Math.floor(e[t]);return this.makeOutput(n,t.shape,"float32")}sign(t){HS(t,"x");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)e[t]<0?n[t]=-1:e[t]>0?n[t]=1:n[t]=0;return this.makeOutput(n,t.shape,"float32")}isNaN(t){HS(t,"x");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)Number.isNaN(e[t])&&(n[t]=1);return this.makeOutput(n,t.shape,"bool")}isInf(t){HS(t,"x");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)Math.abs(e[t])===1/0&&(n[t]=1);return this.makeOutput(n,t.shape,"bool")}isFinite(t){HS(t,"x");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)Number.isFinite(e[t])&&(n[t]=1);return this.makeOutput(n,t.shape,"bool")}round(t){HS(t,"round");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const r=Math.floor(e[t]);e[t]-r<.5?n[t]=Math.floor(e[t]):e[t]-r>.5?n[t]=Math.ceil(e[t]):n[t]=r%2==0?r:r+1}return this.makeOutput(n,t.shape,"float32")}exp(t){HS(t,"exp");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=Math.exp(e[t]);return this.makeOutput(n,t.shape,"float32")}expm1(t){HS(t,"expm1");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=Math.expm1(e[t]);return this.makeOutput(n,t.shape,"float32")}log(t){HS(t,"log");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const r=e[t];n[t]=Math.log(r)}return this.makeOutput(n,t.shape,"float32")}log1p(t){HS(t,"log1p");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const r=e[t];n[t]=Math.log1p(r)}return this.makeOutput(n,t.shape,"float32")}sqrt(t){HS(t,"sqrt");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const r=e[t];n[t]=Math.sqrt(r)}return this.makeOutput(n,t.shape,"float32")}rsqrt(t){HS(t,"rsqrt");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const r=e[t];n[t]=1/Math.sqrt(r)}return this.makeOutput(n,t.shape,"float32")}reciprocal(t){HS(t,"reciprocal");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=1/e[t];return this.makeOutput(n,t.shape,"float32")}linear(t){return t}relu(t){HS(t,"relu");const e=xr(t.shape,t.dtype),n=this.readSync(e.dataId),r=this.readSync(t.dataId);for(let t=0;t<r.length;++t)n[t]=Math.max(0,r[t]);return e}relu6(t){HS(t,"relu");const e=xr(t.shape,t.dtype),n=this.readSync(e.dataId),r=this.readSync(t.dataId);for(let t=0;t<r.length;++t)n[t]=Math.min(Math.max(0,r[t]),6);return e}prelu(t,e){return HS([t,e],"prelu"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>t<0?e*t:t))}elu(t){HS(t,"elu");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t){const r=n[t];e[t]=r>=0?r:Math.exp(r)-1}return this.makeOutput(e,t.shape,"float32")}eluDer(t,e){HS([t,e],"eluDer");const n=new Float32Array(e.size),r=this.readSync(e.dataId),s=this.readSync(t.dataId);for(let t=0;t<r.length;++t){const e=r[t];n[t]=e>=1?s[t]:s[t]*(e+1)}return this.makeOutput(n,e.shape,"float32")}selu(t){HS(t,"selu");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t){const r=n[t];e[t]=r>=0?1.0507009873554805*r:1.7580993408473768*(Math.exp(r)-1)}return this.makeOutput(e,t.shape,"float32")}clip(t,e,n){HS(t,"clip");const r=new Float32Array(t.size),s=this.readSync(t.dataId);for(let t=0;t<s.length;++t){const i=s[t];r[t]=i>n?n:i<e?e:i}return this.makeOutput(r,t.shape,t.dtype)}abs(t){const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return this.makeOutput(e,t.shape,"float32")}complexAbs(t){const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<t.size;++r){const t=n[2*r],s=n[2*r+1];e[r]=Math.hypot(t,s)}return this.makeOutput(e,t.shape,"float32")}int(t){HS(t,"int");const e=new Int32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=n[t];return this.makeOutput(e,t.shape,"int32")}sigmoid(t){HS(t,"sigmoid");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=1/(1+Math.exp(-n[t]));return this.makeOutput(e,t.shape,"float32")}softplus(t){HS(t,"softplus");const e=Math.log(1.1920928955078125e-7)+2,n=new Float32Array(t.size),r=this.readSync(t.dataId);for(let t=0;t<r.length;++t){const s=r[t]>-e,i=r[t]<e,o=Math.exp(r[t]);let a;a=i?o:s?r[t]:Math.log(1+o),n[t]=a}return this.makeOutput(n,t.shape,"float32")}sin(t){HS(t,"sin");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.sin(n[t]);return this.makeOutput(e,t.shape,"float32")}tan(t){HS(t,"tan");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.tan(n[t]);return this.makeOutput(e,t.shape,"float32")}asin(t){HS(t,"asin");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.asin(n[t]);return this.makeOutput(e,t.shape,"float32")}acos(t){HS(t,"acos");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.acos(n[t]);return this.makeOutput(e,t.shape,"float32")}atan(t){HS(t,"atan");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.atan(n[t]);return this.makeOutput(e,t.shape,"float32")}atan2(t,e){return HS([t,e],"atan2"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.atan2(t,e)))}sinh(t){HS(t,"sinh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.sinh(n[t]);return this.makeOutput(e,t.shape,"float32")}cosh(t){HS(t,"cosh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.cosh(n[t]);return this.makeOutput(e,t.shape,"float32")}tanh(t){HS(t,"tanh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=ee(n[t]);return this.makeOutput(e,t.shape,"float32")}asinh(t){HS(t,"asinh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.asinh(n[t]);return this.makeOutput(e,t.shape,"float32")}acosh(t){HS(t,"acosh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.acosh(n[t]);return this.makeOutput(e,t.shape,"float32")}atanh(t){HS(t,"atanh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.atanh(n[t]);return this.makeOutput(e,t.shape,"float32")}erf(t){HS(t,"erf");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t){const r=Math.sign(n[t]),s=Math.abs(n[t]),i=1/(1+.3275911*s);e[t]=r*(1-((((1.061405429*i-1.453152027)*i+1.421413741)*i-.284496736)*i+.254829592)*i*Math.exp(-s*s))}return this.makeOutput(e,t.shape,"float32")}step(t,e=0){HS(t,"step");const n=new Float32Array(t.size),r=this.readSync(t.dataId);for(let t=0;t<r.length;++t){const s=r[t];isNaN(s)?n[t]=NaN:n[t]=s>0?1:e}return this.makeOutput(n,t.shape,"float32")}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){let o=this.conv2d(t,e,n);return r&&(o=this.add(o,r)),s&&(o=XS(this,o,s,i)),o}conv2d(t,e,n){HS([t,e],"conv2d");const r=n.filterHeight,s=n.filterWidth,i=n.dilationHeight,o=n.dilationWidth,a=n.padInfo.left,l=n.padInfo.top,u="channelsLast"===n.dataFormat,c=Cn(n.outShape,t.dtype),h=t.strides[0],d=u?t.strides[1]:t.strides[2],p=u?t.strides[2]:1,f=u?1:t.strides[1],g=c.strides[0],m=u?c.strides[1]:c.strides[2],y=u?c.strides[2]:1,b=u?1:c.strides[1],x=this.readSync(t.dataId),w=this.readSync(e.dataId),v=c.values;for(let t=0;t<n.batchSize;++t){const u=t*h,c=t*g;for(let t=0;t<n.outHeight;++t){const h=c+t*m,g=t*n.strideHeight-l;for(let t=0;t<r;t++){const r=g+t*i;if(r<0||r>=n.inHeight)continue;const l=t*e.strides[0],c=u+r*d;for(let t=0;t<n.outWidth;++t){const r=h+t*y,i=t*n.strideWidth-a;for(let t=0;t<s;t++){const s=i+t*o;if(s<0||s>=n.inWidth)continue;const a=c+s*p;let u=l+t*e.strides[1];for(let t=0;t<n.inChannels;++t){const e=x[a+t*f];for(let t=0;t<n.outChannels;++t)v[r+t*b]+=e*w[u+t];u+=n.outChannels}}}}}}return c.toTensor()}conv3d(t,e,n){const r=n.filterDepth,s=n.filterHeight,i=n.filterWidth,o=n.dilationDepth,a=n.dilationHeight,l=n.dilationWidth,u=n.padInfo.front,c=n.padInfo.left,h=n.padInfo.top,d=Cn(n.outShape,t.dtype),p=this.readSync(t.dataId),f=this.readSync(e.dataId),g=d.values;for(let m=0;m<n.batchSize;++m){const y=m*t.strides[0],b=m*d.strides[0];for(let m=0;m<n.outDepth;++m){const x=b+m*d.strides[1],w=m*n.strideDepth-u;for(let u=0;u<r;u++){const r=w+u*o;if(r<0||r>=n.inDepth)continue;const m=u*e.strides[0],b=y+r*t.strides[1];for(let r=0;r<n.outHeight;++r){const o=x+r*d.strides[2],u=r*n.strideHeight-h;for(let r=0;r<s;r++){const s=u+r*a;if(s<0||s>=n.inHeight)continue;const h=m+r*e.strides[1],d=b+s*t.strides[2];for(let t=0;t<n.outWidth;++t){const r=o+t*n.outChannels,s=t*n.strideWidth-c;for(let t=0;t<i;t++){const i=s+t*l;if(i<0||i>=n.inWidth)continue;const o=h+t*e.strides[2],a=d+i*n.inChannels;let u=o;for(let t=0;t<n.inChannels;++t){const e=p[a+t];for(let t=0;t<n.outChannels;++t)g[r+t]+=e*f[u+t];u+=n.outChannels}}}}}}}}return d.toTensor()}conv2dDerInput(t,e,n){HS([t,e],"conv2dDerInput");const r=Cn(n.inShape,"float32"),s=r.values,i=this.readSync(t.dataId),o=this.readSync(e.dataId),[a,l,u]=e.strides,{batchSize:c,filterHeight:h,filterWidth:d,inChannels:p,inHeight:f,inWidth:g,outChannels:m,outHeight:y,outWidth:b,strideHeight:x,strideWidth:w,dataFormat:v}=n,k=h-1-n.padInfo.top,$=d-1-n.padInfo.left,I="channelsLast"===v,S=r.strides[0],E=I?r.strides[1]:r.strides[2],C=I?r.strides[2]:1,N=I?1:r.strides[1],R=t.strides[0],A=I?t.strides[1]:t.strides[2],T=I?t.strides[2]:1,D=I?1:t.strides[1];for(let t=0;t<c;++t)for(let e=0;e<p;++e)for(let n=0;n<f;++n){const r=n-k,c=Math.max(0,Math.ceil(r/x)),p=Math.min(y,(h+r)/x);for(let f=0;f<g;++f){const g=f-$,y=Math.max(0,Math.ceil(g/w)),v=Math.min(b,(d+g)/w);let k=0;for(let n=c;n<p;++n){const s=n*x-r;for(let r=y;r<v;++r){const c=R*t+A*n+T*r,p=a*(h-1-s)+l*(d-1-(r*w-g))+u*e;for(let t=0;t<m;++t)k+=i[c+D*t]*o[p+t]}}s[S*t+E*n+C*f+N*e]=k}}return r.toTensor()}conv3dDerInput(t,e,n){const r=Cn(n.inShape,"float32"),s=r.values,[i,o,a,l]=r.strides,u=this.readSync(t.dataId),[c,h,d,p]=t.strides,f=this.readSync(e.dataId),[g,m,y,b]=e.strides,{batchSize:x,filterDepth:w,filterHeight:v,filterWidth:k,inChannels:$,inDepth:I,inHeight:S,inWidth:E,outChannels:C,outDepth:N,outHeight:R,outWidth:A,strideDepth:T,strideHeight:D,strideWidth:F}=n,_=w-1-n.padInfo.front,O=v-1-n.padInfo.top,M=k-1-n.padInfo.left;for(let t=0;t<x;++t)for(let e=0;e<$;++e)for(let n=0;n<I;++n){const r=n-_,x=Math.max(0,Math.ceil(r/T)),$=Math.min(N,(w+r)/T);for(let I=0;I<S;++I){const S=I-O,N=Math.max(0,Math.ceil(S/D)),_=Math.min(R,(v+S)/D);for(let R=0;R<E;++R){const E=R-M,O=Math.max(0,Math.ceil(E/F)),B=Math.min(A,(k+E)/F);let L=0;for(let n=x;n<$;++n){const s=n*T-r;for(let r=N;r<_;++r){const i=r*D-S;for(let o=O;o<B;++o){const a=c*t+h*n+d*r+p*o,l=g*(w-1-s)+m*(v-1-i)+y*(k-1-(o*F-E))+b*e;for(let t=0;t<C;++t)L+=u[a+t]*f[l+t]}}}s[i*t+o*n+a*I+l*R+e]=L}}}return r.toTensor()}conv2dDerFilter(t,e,n){HS([t,e],"conv2dDerFilter");const r=n.strideHeight,s=n.strideWidth,i=n.filterHeight,o=n.filterWidth,a="channelsLast"===n.dataFormat,l=Cn(n.filterShape,"float32"),u=n.padInfo.left,c=n.padInfo.top,h=this.bufferSync(t),d=this.bufferSync(e);for(let t=0;t<i;++t){const e=Math.max(0,Math.ceil((c-t)/r)),i=Math.min(n.outHeight,(n.inHeight+c-t)/r);for(let p=0;p<o;++p){const o=Math.max(0,Math.ceil((u-p)/s)),f=Math.min(n.outWidth,(n.inWidth+u-p)/s);for(let g=0;g<n.inChannels;++g)for(let m=0;m<n.outChannels;++m){let y=0;for(let l=0;l<n.batchSize;++l)for(let n=e;n<i;++n){const e=t+n*r-c;for(let t=o;t<f;++t){const r=p+t*s-u;y+=a?h.get(l,e,r,g)*d.get(l,n,t,m):h.get(l,g,e,r)*d.get(l,m,n,t)}}l.set(y,t,p,g,m)}}}return l.toTensor()}conv3dDerFilter(t,e,n){const r=n.strideDepth,s=n.strideHeight,i=n.strideWidth,o=n.filterDepth,a=n.filterHeight,l=n.filterWidth,u=Cn(n.filterShape,"float32"),c=u.values,[h,d,p,f]=u.strides,g=this.readSync(e.dataId),[m,y,b,x]=e.strides,w=this.readSync(t.dataId),[v,k,$,I]=t.strides,S=n.padInfo.front,E=n.padInfo.left,C=n.padInfo.top;for(let t=0;t<o;++t){const e=Math.max(0,Math.ceil((S-t)/r)),o=Math.min(n.outDepth,(n.inDepth+S-t)/r),u=t*h;for(let h=0;h<a;++h){const a=Math.max(0,Math.ceil((C-h)/s)),N=Math.min(n.outHeight,(n.inHeight+C-h)/s),R=h*d+u;for(let u=0;u<l;++u){const l=Math.max(0,Math.ceil((E-u)/i)),d=Math.min(n.outWidth,(n.inWidth+E-u)/i),A=u*p+R;for(let p=0;p<n.inChannels;++p){const R=p*f+A;for(let f=0;f<n.outChannels;++f){let A=0;for(let c=0;c<n.batchSize;++c){const n=c*v,R=c*m;for(let c=e;c<o;++c){const e=(t+c*r-S)*k+n,o=c*y+R;for(let t=a;t<N;++t){const n=(h+t*s-C)*$+e,r=t*b+o;for(let t=l;t<d;++t){const e=t*x+r;A+=w[(u+t*i-E)*I+n+p]*g[e+f]}}}}c[R+f]=A}}}}}return u.toTensor()}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){let o=this.depthwiseConv2D(t,e,n);return r&&(o=this.add(o,r)),s&&(o=XS(this,o,s,i)),o}depthwiseConv2D(t,e,n){HS([t,e],"depthwiseConv2D");const r=n.filterHeight,s=n.filterWidth,i=n.dilationHeight,o=n.dilationWidth,a=n.padInfo.left,l=n.padInfo.top,u=n.outChannels/n.inChannels,c=Cn(n.outShape,t.dtype),h=this.readSync(t.dataId),d=this.readSync(e.dataId),p=c.values;for(let f=0;f<n.batchSize;++f){const g=f*t.strides[0],m=f*c.strides[0];for(let f=0;f<n.outHeight;++f){const y=m+f*c.strides[1],b=f*n.strideHeight-a;for(let a=0;a<r;++a){const r=b+a*i;if(r<0||r>=n.inHeight)continue;const f=a*e.strides[0],m=g+r*t.strides[1];for(let t=0;t<n.outWidth;++t){const r=y+t*c.strides[2],i=t*n.strideWidth-l;for(let t=0;t<s;++t){const s=i+t*o;if(s<0||s>=n.inWidth)continue;const a=f+t*e.strides[1],l=m+s*n.inChannels;let c=r,g=a;for(let t=0;t<n.inChannels;++t){const e=h[l+t];for(let t=0;t<u;++t)p[c+t]+=e*d[g+t];c+=u,g+=u}}}}}}return c.toTensor()}depthwiseConv2DDerInput(t,e,n){HS([t,e],"depthwiseConv2DDerInput");const r=Cn(n.inShape,"float32"),s=r.values,[i,o,a]=r.strides,l=this.readSync(t.dataId),[u,c,h]=t.strides,d=this.readSync(e.dataId),[p,f,g]=e.strides,{batchSize:m,filterHeight:y,filterWidth:b,inChannels:x,inHeight:w,inWidth:v,outChannels:k,outHeight:$,outWidth:I,strideHeight:S,strideWidth:E}=n,C=y-1-n.padInfo.top,N=b-1-n.padInfo.left,R=k/x;for(let t=0;t<m;++t)for(let e=0;e<x;++e)for(let n=0;n<w;++n){const r=n-C,m=Math.max(0,Math.ceil(r/S)),x=Math.min($,(y+r)/S);for(let w=0;w<v;++w){const v=w-N,k=Math.max(0,Math.ceil(v/E)),$=Math.min(I,(b+v)/E);let C=0;for(let n=m;n<x;++n){const s=n*S-r;for(let r=k;r<$;++r){const i=u*t+c*n+h*r,o=p*(y-1-s)+f*(b-1-(r*E-v))+g*e;for(let t=0;t<R;++t)C+=l[i+(e*R+t)]*d[o+t]}}s[i*t+o*n+a*w+e]=C}}return r.toTensor()}depthwiseConv2DDerFilter(t,e,n){HS([t,e],"depthwiseConv2DDerFilter");const r=n.strideHeight,s=n.strideWidth,i=n.filterHeight,o=n.filterWidth,a=Cn(n.filterShape,"float32"),l=n.padInfo.left,u=n.padInfo.top,c=n.outChannels/n.inChannels,h=this.bufferSync(t),d=this.bufferSync(e);for(let t=0;t<i;++t){const e=Math.max(0,Math.ceil((u-t)/r)),i=Math.min(n.outHeight,(n.inHeight+u-t)/r);for(let p=0;p<o;++p){const o=Math.max(0,Math.ceil((l-p)/s)),f=Math.min(n.outWidth,(n.inWidth+l-p)/s);for(let g=0;g<n.outChannels;++g){const m=Math.trunc(g/c),y=g%c;let b=0;for(let a=0;a<n.batchSize;++a)for(let n=e;n<i;++n){const e=t+n*r-u;for(let t=o;t<f;++t){const r=p+t*s-l;b+=h.get(a,e,r,m)*d.get(a,n,t,g)}}a.set(b,t,p,m,y)}}}return a.toTensor()}tile(t,e){return HS(t,"tile"),function(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const r=Cn(n,t.dtype);for(let e=0;e<r.values.length;++e){const n=r.indexToLoc(e),s=new Array(t.rank);for(let e=0;e<s.length;e++)s[e]=n[e]%t.shape[e];const i=t.locToIndex(s);r.values[e]=t.values[i]}return r.toTensor()}(this.bufferSync(t),e)}gather(t,e,n){HS([t,e],"gather");const r=t.shape.slice(),s=this.readSync(e.dataId);r[n]=s.length;const i=Cn(r,t.dtype),o=this.bufferSync(t);for(let t=0;t<i.size;++t){const e=i.indexToLoc(t),r=e.slice();r[n]=s[e[n]];const a=o.locToIndex(r);i.values[t]=o.values[a]}return i.toTensor()}batchToSpaceND(t,e,n){HS([t],"batchToSpaceND");const r=e.reduce(((t,e)=>t*e)),s=Qs(t.shape,e,r),i=ti(s.length,e.length),o=ei(t.shape,e,r),a=function(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}(n,e.length),l=function(t,e,n){const r=t.slice(0,1);for(let s=0;s<n;++s)r.push(t[s+1]-e[s][0]-e[s][1]);return r}(o,n,e.length);return ir(t.reshape(s),i).reshape(o).slice(a,l)}maxPool(t,e){return HS(t,"maxPool"),KS(this.readSync(t.dataId),t.shape,t.dtype,t.strides,e,"max").toTensor()}maxPoolBackprop(t,e,n,r){HS([e,n],"maxPoolBackprop");const s=this.readSync(e.dataId),i=Cn(r.outShape,e.dtype,qS(s,e.shape,e.dtype,r).values),o=r.strideHeight,a=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=h-1-r.padInfo.left,p=c-1-r.padInfo.top,f=Cn(e.shape,"float32"),g=this.bufferSync(t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.inHeight;++n)for(let s=0;s<r.inWidth;++s){const m=n-p,y=s-d;let b=0;for(let n=0;n<c;n+=l){const s=(m+n)/o;if(!(s<0||s>=r.outHeight||Math.floor(s)!==s))for(let o=0;o<h;o+=u){const l=(y+o)/a;if(l<0||l>=r.outWidth||Math.floor(l)!==l)continue;const u=c*h-1-i.get(t,s,l,e)===n*h+o?1:0;0!==u&&(b+=g.get(t,s,l,e)*u)}}f.set(b,t,n,s,e)}return f.toTensor()}avgPoolBackprop(t,e,n){HS([t,e],"avgPoolBackprop");const r=n.strideHeight,s=n.strideWidth,i=n.filterHeight,o=n.filterWidth,a=n.dilationHeight,l=n.dilationWidth,u=n.effectiveFilterHeight,c=n.effectiveFilterWidth,h=c-1-n.padInfo.left,d=u-1-n.padInfo.top,p=Cn(e.shape,"float32"),f=1/(i*o),g=this.bufferSync(t);for(let t=0;t<n.batchSize;++t)for(let e=0;e<n.inChannels;++e)for(let i=0;i<n.inHeight;++i)for(let o=0;o<n.inWidth;++o){const m=i-d,y=o-h;let b=0;for(let i=0;i<u;i+=a){const o=(m+i)/r;if(!(o<0||o>=n.outHeight||Math.floor(o)!==o))for(let r=0;r<c;r+=l){const i=(y+r)/s;i<0||i>=n.outWidth||Math.floor(i)!==i||(b+=g.get(t,o,i,e))}}p.set(b*f,t,i,o,e)}return p.toTensor()}pool3d(t,e,n){HS(t,"pool3d");const r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,a=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left,g="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=this.readSync(t.dataId),y=Cn(e.outShape,t.dtype),b=y.values,x=e.outShape[1]*e.outShape[2]*e.outShape[3]*e.outShape[4],w=e.outShape[2]*e.outShape[3]*e.outShape[4],v=e.outShape[3]*e.outShape[4],k=e.outShape[4];for(let y=0;y<e.batchSize;++y){const $=y*x,I=y*t.strides[0];for(let y=0;y<e.inChannels;++y)for(let x=0;x<e.outDepth;++x){const S=x*r-d;let E=S;for(;E<0;)E+=o;const C=Math.min(e.inDepth,u+S),N=$+x*w;for(let r=0;r<e.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=a;const x=Math.min(e.inHeight,c+u),w=N+r*v;for(let r=0;r<e.outWidth;++r){const s=r*i-f;let u=s;for(;u<0;)u+=l;const c=Math.min(e.inWidth,h+s),p=w+r*k;let v=g,$=0,S=0;for(let e=E;e<C;e+=o){const r=I+e*t.strides[1];for(let e=d;e<x;e+=a){const s=r+e*t.strides[2];for(let e=u;e<c;e+=l){const r=m[s+e*t.strides[3]+y];if("max"===n&&r>v?v=r:"avg"===n&&($+=r,S++),isNaN(v))break}if(isNaN(v))break}if(isNaN(v))break}b[p+y]="avg"===n?$/S:v}}}}return y.toTensor()}avgPool3d(t,e){return HS(t,"avgPool3d"),this.pool3d(t,e,"avg").toFloat()}avgPool3dBackprop(t,e,n){HS([t,e],"avgPool3dBackprop");const r=n.strideDepth,s=n.strideHeight,i=n.strideWidth,o=n.filterDepth,a=n.filterHeight,l=n.filterWidth,u=n.dilationDepth,c=n.dilationHeight,h=n.dilationWidth,d=n.effectiveFilterDepth,p=n.effectiveFilterHeight,f=n.effectiveFilterWidth,g=d-1-n.padInfo.front,m=f-1-n.padInfo.left,y=p-1-n.padInfo.top,b=Cn(e.shape,"float32"),x=1/(o*a*l),w=this.bufferSync(t);for(let t=0;t<n.batchSize;++t)for(let e=0;e<n.inChannels;++e)for(let o=0;o<n.inDepth;++o)for(let a=0;a<n.inHeight;++a)for(let l=0;l<n.inWidth;++l){const v=o-g,k=a-y,$=l-m;let I=0;for(let o=0;o<d;o+=u){const a=(v+o)/r;if(!(a<0||a>=n.outDepth||Math.floor(a)!==a))for(let r=0;r<p;r+=c){const o=(k+r)/s;if(!(o<0||o>=n.outHeight||Math.floor(o)!==o))for(let r=0;r<f;r+=h){const s=($+r)/i;s<0||s>=n.outWidth||Math.floor(s)!==s||(I+=w.get(t,a,o,s,e))}}}b.set(I*x,t,o,a,l,e)}return b.toTensor()}maxPool3d(t,e){return HS(t,"maxPool3d"),this.pool3d(t,e,"max").toFloat()}maxPool3dPositions(t,e){const n=Cn(e.outShape,"int32"),r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,a=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left,g=this.bufferSync(t);for(let t=0;t<e.batchSize;++t)for(let m=0;m<e.inChannels;++m)for(let y=0;y<e.outDepth;++y){const b=y*r-d;let x=b;for(;x<0;)x+=o;const w=Math.min(e.inDepth,u+b);for(let r=0;r<e.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=a;const v=Math.min(e.inHeight,c+u);for(let s=0;s<e.outWidth;++s){const p=s*i-f;let k=p;for(;k<0;)k+=l;const $=Math.min(e.inWidth,h+p);let I=Number.NEGATIVE_INFINITY,S=-1;for(let e=x;e<w;e+=o){const n=e-b;for(let r=d;r<v;r+=a){const s=r-u;for(let i=k;i<$;i+=l){const o=i-p,a=g.get(t,e,r,i,m);a>=I&&(I=a,S=n*c*h+s*c+o)}}}n.set(S,t,y,r,s,m)}}}return n.toTensor()}maxPool3dBackprop(t,e,n,r){HS([e,n],"maxPool3dBackprop");const s=this.maxPool3dPositions(e,r),i=r.strideDepth,o=r.strideHeight,a=r.strideWidth,l=r.dilationDepth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterDepth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=h-1-r.padInfo.front,g=p-1-r.padInfo.left,m=d-1-r.padInfo.top,y=Cn(e.shape,"float32"),b=this.bufferSync(s),x=this.bufferSync(t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.inDepth;++n)for(let s=0;s<r.inHeight;++s)for(let w=0;w<r.inWidth;++w){const v=n-f,k=s-m,$=w-g;let I=0;for(let n=0;n<h;n+=l){const s=(v+n)/i;if(!(s<0||s>=r.outDepth||Math.floor(s)!==s))for(let i=0;i<d;i+=u){const l=(k+i)/o;if(!(l<0||l>=r.outHeight||Math.floor(l)!==l))for(let o=0;o<p;o+=c){const u=($+o)/a;if(u<0||u>=r.outWidth||Math.floor(u)!==u)continue;const c=h*d*p-1-b.get(t,s,l,u,e)===n*d*p+i*p+o?1:0;0!==c&&(I+=x.get(t,s,l,u,e)*c)}}}y.set(I,t,n,s,w,e)}return y.toTensor()}cast(t,e){return function(t,e,n){if("complex64"===e){if("complex64"===t.dtype)return t.clone();const e=xr(t.shape),r=_n(t,"float32"),s=n.complex(r,e);return e.dispose(),r.dispose(),s}if(r=t.dtype,"complex64"===(s=e)||"float32"===s&&"complex64"!==r||"int32"===s&&"float32"!==r&&"complex64"!==r||"bool"===s&&"bool"===r)return Xe.makeTensorFromDataId(t.dataId,t.shape,e);var r,s;if("complex64"===t.dtype){const r=n.real(t),s=_n(r,e);return r.dispose(),s}if("int32"===e)return n.int(t);if("bool"===e){const e=kr(0,t.dtype),r=n.notEqual(t,e);return e.dispose(),r}throw new Error(`Error in Cast: failed to cast ${t.dtype} to ${e}`)}(t,e,this)}avgPool(t,e){return HS(t,"avgPool"),HS(t,"maxPool"),KS(this.readSync(t.dataId),t.shape,t.dtype,t.strides,e,"avg").toTensor().toFloat()}resizeBilinear(t,e,n,r){HS(t,"resizeBilinear");const[s,i,o,a]=t.shape,l=this.readSync(t.dataId),u=new Float32Array(Zt([s,e,n,a])),c=[r&&e>1?i-1:i,r&&n>1?o-1:o],h=[r&&e>1?e-1:e,r&&n>1?n-1:n];let d=0;const p=c[0]/h[0],f=c[1]/h[1];for(let r=0;r<s;r++)for(let s=0;s<e;s++){const e=p*s,c=Math.floor(e),h=e-c,g=Math.min(i-1,Math.ceil(e)),m=r*t.strides[0]+c*t.strides[1],y=r*t.strides[0]+g*t.strides[1];for(let e=0;e<n;e++){const n=f*e,r=Math.floor(n),s=n-r,i=Math.min(o-1,Math.ceil(n)),c=m+r*t.strides[2],p=y+r*t.strides[2],g=m+i*t.strides[2],b=y+i*t.strides[2];for(let t=0;t<a;t++){const e=l[c+t],n=l[p+t],r=e+(l[g+t]-e)*s,i=r+(n+(l[b+t]-n)*s-r)*h;u[d++]=i}}}return Rr(u,[s,e,n,a])}resizeBilinearBackprop(t,e,n){HS([t,e],"resizeBilinearBackprop");const[r,s,i,o]=e.shape,[,a,l]=t.shape,u=new Float32Array(r*s*i*o),c=[n&&a>1?s-1:s,n&&l>1?i-1:i],h=[n&&a>1?a-1:a,n&&l>1?l-1:l],d=c[0]/h[0],p=c[1]/h[1],f=this.readSync(t.dataId);let g=0;for(let t=0;t<r;t++){const n=t*e.strides[0];for(let t=0;t<a;t++){const r=t*d,a=Math.floor(r),c=Math.min(Math.ceil(r),s-1),h=n+a*e.strides[1],m=n+c*e.strides[1],y=r-a,b=1-y;for(let t=0;t<l;t++){const n=t*p,r=Math.floor(n),s=Math.min(Math.ceil(n),i-1),a=n-r,l=1-a,c=h+r*e.strides[2],d=h+s*e.strides[2],x=m+r*e.strides[2],w=m+s*e.strides[2],v=b*l,k=b*a,$=y*l,I=y*a;for(let t=0;t<o;t++){const e=f[g++];u[c+t]+=e*v,u[d+t]+=e*k,u[x+t]+=e*$,u[w+t]+=e*I}}}}return Or(u,[r,i,s,o],e.dtype)}resizeNearestNeighbor(t,e,n,r){HS(t,"resizeNearestNeighbor");const[s,i,o,a]=t.shape,l=this.readSync(t.dataId),u=new Float32Array(s*e*n*a),c=[r&&e>1?i-1:i,r&&n>1?o-1:o],h=[r&&e>1?e-1:e,r&&n>1?n-1:n],d=c[0]/h[0],p=c[1]/h[1];let f=0;for(let c=0;c<s;c++){const s=c*t.strides[0];for(let c=0;c<e;c++){const e=d*c,h=s+Math.min(i-1,r?Math.round(e):Math.floor(e))*t.strides[1];for(let e=0;e<n;e++){const n=p*e,s=h+Math.min(o-1,r?Math.round(n):Math.floor(n))*t.strides[2];for(let t=0;t<a;t++){const e=l[s+t];u[f++]=e}}}}return Rr(u,[s,e,n,a],t.dtype)}resizeNearestNeighborBackprop(t,e,n){HS([t,e],"resizeNearestNeighborBackprop");const[r,s,i,o]=e.shape,[,a,l]=t.shape,u=new Float32Array(r*s*i*o),c=this.readSync(t.dataId),h=[n&&a>1?s-1:s,n&&l>1?i-1:i],d=[n&&a>1?a-1:a,n&&l>1?l-1:l],p=h[0]/d[0],f=h[1]/d[1],g=1/p,m=1/f,y=2*Math.ceil(g)+2,b=2*Math.ceil(m)+2;for(let h=0;h<r;h++){const r=h*e.strides[0];for(let h=0;h<s;h++){const d=r+h*e.strides[1],x=Math.floor(h*g),w=Math.floor(x-y/2);for(let g=0;g<i;g++){const x=d+g*e.strides[2],v=Math.floor(g*m),k=Math.floor(v-b/2);for(let e=0;e<o;e++){let o=0;for(let u=0;u<y;u++){const d=u+w;if(d<0||d>=a)continue;const m=r+d*t.strides[1],y=d*p;if(h===Math.min(s-1,n?Math.round(y):Math.floor(y)))for(let r=0;r<b;r++){const s=r+k;if(s<0||s>=l)continue;const a=m+s*t.strides[2],u=s*f;g===Math.min(i-1,n?Math.round(u):Math.floor(u))&&(o+=c[a+e])}}u[x+e]=o}}}}return Or(u,e.shape,e.dtype)}batchNorm(t,e,n,r,s,i){HS([t,e,n,s,r],"batchNorm");const o=this.readSync(t.dataId),a=this.readSync(e.dataId),l=this.readSync(n.dataId),u=s?this.readSync(s.dataId):new Float32Array([1]),c=r?this.readSync(r.dataId):new Float32Array([0]),h=new Float32Array(o.length),d=c.length,p=u.length,f=l.length,g=a.length;let m=0,y=0,b=0,x=0;for(let t=0;t<o.length;++t)h[t]=c[m++]+(o[t]-a[y++])*u[b++]/Math.sqrt(l[x++]+i),m>=d&&(m=0),y>=g&&(y=0),b>=p&&(b=0),x>=f&&(x=0);return Or(h,t.shape)}localResponseNormalization4D(t,e,n,r,s){HS(t,"localResponseNormalization4D");const i=t.shape[3],o=i-1,a=this.readSync(t.dataId),l=t.size,u=new Float32Array(l);function c(t){const n=t%i;let r=t-n+Math.max(0,n-e);const s=t-n+Math.min(n+e,o);let l=0;for(;r<=s;r++){const t=a[r];l+=t*t}return l}for(let t=0;t<l;t++){const e=c(t),i=a[t]*Math.pow(n+r*e,-s);u[t]=i}return Or(u,t.shape)}LRNGrad(t,e,n,r,s,i,o){HS(t,"LRNGrad");const a=t.shape[3],l=this.readSync(t.dataId),u=this.readSync(e.dataId),c=this.readSync(n.dataId),h=new Float32Array(t.size),d=t.size;for(let t=0;t<d;t++){const e=t%a,n=t-e+Math.max(0,e-r),d=t-e+Math.min(a,e+r+1);let p=0;for(let t=n;t<d;t++)p+=Math.pow(u[t],2);p=i*p+s;for(let e=n;e<d;e++){let n=-2*i*o*u[e]*c[t]/p;t===e&&(n+=Math.pow(p,-o)),n*=l[t],h[e]+=n}}return Or(h,t.shape)}multinomial(t,e,n,r){HS(t,"multinomial");const s=e?t:Cr(t),i=s.shape[0],o=s.shape[1],a=xr([i,n],"int32"),l=this.readSync(a.dataId),u=this.readSync(s.dataId);for(let t=0;t<i;++t){const e=t*o,s=new Float32Array(o-1);s[0]=u[e];for(let t=1;t<s.length;++t)s[t]=s[t-1]+u[e+t];const i=eg.alea(r.toString()),a=t*n;for(let t=0;t<n;++t){const e=i();l[a+t]=s.length;for(let n=0;n<s.length;n++)if(e<s[n]){l[a+t]=n;break}}}return a}oneHot(t,e,n,r){HS(t,"oneHot");const s=new Float32Array(t.size*e);s.fill(r);const i=this.readSync(t.dataId);for(let r=0;r<t.size;++r)i[r]>=0&&i[r]<e&&(s[r*e+i[r]]=n);return _r(s,[t.size,e],"int32")}nonMaxSuppression(t,e,n,r,s){HS(t,"nonMaxSuppression");const i=this.readSync(t.dataId),o=this.readSync(e.dataId);return jS(i,o,n,r,s)}fft(t){return this.fftBatch(t,!1)}ifft(t){return this.fftBatch(t,!0)}fftBatch(t,e){const n=t.shape[0],r=t.shape[1],s=Cn(t.shape,"float32"),i=Cn(t.shape,"float32"),o=Er(t).as2D(n,r),a=fr(t).as2D(n,r);for(let t=0;t<n;t++){const n=o.slice([t,0],[1,r]),l=a.slice([t,0],[1,r]),u=ar(n,l),c=this.readSync(this.fftImpl(u,e).dataId);for(let e=0;e<r;e++){const n=ri(c,e);s.values[t*r+e]=n.real,i.values[t*r+e]=n.imag}}return ar(s.toTensor(),i.toTensor()).as2D(n,r)}fftImpl(t,e){const n=t.as1D(),r=n.size;if(this.isExponentOf2(r)){let s=this.fftRadix2(n,r,e).as2D(t.shape[0],t.shape[1]);return e&&(s=ar(Er(s).div(kr(r)),fr(s).div(kr(r)))),s}{const n=this.readSync(t.dataId),s=function(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}(this.fourierTransformByMatmul(n,r,e));return ar(s.real,s.imag).as2D(t.shape[0],t.shape[1])}}isExponentOf2(t){return 0==(t&t-1)}fftRadix2(t,e,n){if(1===e)return t;const r=this.readSync(t.dataId),s=e/2,i=function(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}(r);let o=ar(i.real,i.imag).as1D();const a=function(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}(r);let l=ar(a.real,a.imag).as1D();o=this.fftRadix2(o,s,n),l=this.fftRadix2(l,s,n);const u=function(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const i=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(i),r[s]=Math.sin(i)}return{real:n,imag:r}}(e,n),c=ar(u.real,u.imag).mul(l),h=o.add(c),d=o.sub(c),p=Er(h).concat(Er(d)),f=fr(h).concat(fr(d));return ar(p,f).as1D()}fourierTransformByMatmul(t,e,n){const r=new Float32Array(2*e);for(let s=0;s<e;s++){let i=0,o=0;for(let r=0;r<e;r++){const a=ii(s*r,e,n),l=ri(t,r);i+=l.real*a.real-l.imag*a.imag,o+=l.real*a.imag+l.imag*a.real}n&&(i/=e,o/=e),si(r,i,o,s)}return r}depthToSpace(t,e,n){jt("NHWC"===n,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${n}`)),jt(e>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`));const r=t.shape[0],s=t.shape[1],i=t.shape[2],o=t.shape[3],a=s*e,l=i*e,u=o/(e*e),c=this.readSync(t.dataId),h=new Float32Array(r*a*l*u);let d=0;for(let t=0;t<r;++t)for(let n=0;n<a;++n){const r=Math.floor(n/e),a=n%e;for(let n=0;n<l;++n){const l=Math.floor(n/e),p=(a*e+n%e)*u;for(let e=0;e<u;++e){const n=e+p+o*(l+i*(r+s*t));h[d++]=c[n]}}}return Or(h,[r,a,l,u])}broadcastedBinaryOp(t,e,n,r){const s=dr(t.shape,e.shape),i=Cn(s,n),o=this.readSync(t.dataId),a=this.readSync(e.dataId),l=cr(t.shape,s),u=cr(e.shape,s),c=i.values;if(l.length+u.length===0)for(let t=0;t<c.length;++t)c[t]=r(o[t%o.length],a[t%a.length]);else{const n=this.bufferSync(t),s=this.bufferSync(e);for(let h=0;h<c.length;++h){const d=i.indexToLoc(h),p=d.slice(-t.rank);l.forEach((t=>p[t]=0));const f=n.locToIndex(p),g=d.slice(-e.rank);u.forEach((t=>g[t]=0));const m=s.locToIndex(g);c[h]=r(o[f],a[m])}}return i.toTensor()}broadcastedBinaryComplexOp(t,e,n){const r=dr(t.shape,e.shape),s=Cn(r,"float32"),i=Cn(r,"float32"),o=this.readSync(t.dataId),a=this.readSync(e.dataId),l=cr(t.shape,r),u=cr(e.shape,r),c=s.values,h=i.values;if(l.length+u.length===0)for(let t=0;t<c.length;t++){const e=t%o.length,r=t%a.length,s=n(o[2*e],o[2*e+1],a[2*r],a[2*r+1]);c[t]=s.real,h[t]=s.imag}else{const r=this.bufferSync(this.data.get(t.dataId).complexTensors.real),i=this.bufferSync(this.data.get(e.dataId).complexTensors.real);for(let d=0;d<c.length;d++){const p=s.indexToLoc(d),f=p.slice(-t.rank);l.forEach((t=>f[t]=0));const g=r.locToIndex(f),m=p.slice(-e.rank);u.forEach((t=>m[t]=0));const y=i.locToIndex(m),b=n(o[2*g],o[2*g+1],a[2*y],a[2*y+1]);c[d]=b.real,h[d]=b.imag}}return this.complex(s.toTensor(),i.toTensor())}split(t,e,n){return function(t,e,n){const r=new Array(t.rank).fill(0),s=t.shape.slice();return e.map((e=>{const i=[...s];i[n]=e;const o=Mr(t,r,i);return r[n]+=e,o}))}(t,e,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}cropAndResize(t,e,n,r,s,i){const[o,a,l,u]=t.shape,c=e.shape[0],[h,d]=r,p=Cn([c,h,d,u],"float32"),f=this.readSync(e.dataId),g=this.readSync(n.dataId),m=this.readSync(t.dataId),y=t.strides,b=p.strides;for(let t=0;t<c;t++){const e=4*t,n=f[e],r=f[e+1],c=f[e+2],x=f[e+3],w=g[t];if(w>=o)continue;const v=h>1?(c-n)*(a-1)/(h-1):0,k=d>1?(x-r)*(l-1)/(d-1):0;for(let e=0;e<h;e++){const o=h>1?n*(a-1)+e*v:.5*(n+c)*(a-1);if(o<0||o>a-1)for(let n=0;n<d;n++)for(let r=0;r<u;r++){const s=r+n*b[2]+e*b[1]+t*b[0];p.values[s]=i}else if("bilinear"===s){const n=Math.floor(o),s=Math.ceil(o),a=o-n;for(let o=0;o<d;o++){const c=d>1?r*(l-1)+o*k:.5*(r+x)*(l-1);if(c<0||c>l-1){for(let n=0;n<u;n++){const r=n+o*b[2]+e*b[1]+t*b[0];p.values[r]=i}continue}const h=Math.floor(c),f=Math.ceil(c),g=c-h;for(let r=0;r<u;r++){let i=r+h*y[2]+n*y[1]+w*y[0];const l=m[i];i=r+f*y[2]+n*y[1]+w*y[0];const u=m[i];i=r+h*y[2]+s*y[1]+w*y[0];const c=m[i];i=r+f*y[2]+s*y[1]+w*y[0];const d=l+(u-l)*g,x=c+(m[i]-c)*g;i=r+o*b[2]+e*b[1]+t*b[0],p.values[i]=d+(x-d)*a}}}else for(let n=0;n<d;++n){const s=d>1?r*(l-1)+n*k:.5*(r+x)*(l-1);if(s<0||s>l-1){for(let r=0;r<u;r++){const s=r+n*b[2]+e*b[1]+t*b[0];p.values[s]=i}continue}const a=Math.round(s),c=Math.round(o);for(let r=0;r<u;r++){const s=r+a*y[2]+c*y[1]+w*y[0],i=r+n*b[2]+e*b[1]+t*b[0];p.values[i]=m[s]}}}}return p.toTensor()}sparseToDense(t,e,n,r){const{sliceRank:s,numUpdates:i,sliceSize:o,strides:a,outputSize:l}=ni(0,t,n);return this.scatter(t,e,n,l,o,i,s,a,r,!1)}gatherND(t,e){const n=e.shape,r=n[n.length-1],[s,i,o,a]=function(t,e){if(t.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[e.rank-1]>t.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[e.rank-1]} vs. ${t.rank}`);if(0===t.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const n=e.shape,r=n[n.length-1];let s=1;for(let t=0;t<n.length-1;++t)s*=n[t];const i=t.shape,o=n.slice();o.pop();let a=1;for(let e=r;e<t.rank;++e)a*=i[e],o.push(i[e]);const l=[...ce(t.shape).map((t=>t/a)),1].slice(0,r);return[o,s,a,l]}(t,e);if(0===i)return Rr([],s,t.dtype);const l=new Ae([i,o],t.dtype),u=this.readSync(e.dataId),c=this.readSync(t.dataId);for(let e=0;e<i;e++){const n=[];let s=0;for(let t=0;t<r;t++){const i=u[e*r+t];s+=i*a[t],n.push(i)}if(s<0||s>=t.size/o)throw new Error(`Invalid indices: ${n} does not index into ${t.shape}`);for(let t=0;t<o;t++)l.values[e*o+t]=c[s*o+t]}return l.toTensor().reshape(s)}scatterND(t,e,n){const{sliceRank:r,numUpdates:s,sliceSize:i,strides:o,outputSize:a}=ni(0,t,n),l=kr(0);return this.scatter(t,e,n,a,i,s,r,o,l,!0)}fill(t,e,n){const r=ie(n=n||le(e),Zt(t));return r.fill(e),bs().makeTensor(r,t,n,this)}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported for string tensors");return this.fill(t.shape,1,t.dtype)}zerosLike(t){const e=ie(t.dtype,Zt(t.shape));return this.makeOutput(e,t.shape,t.dtype)}linspace(t,e,n){return function(t,e,n){const r=(e-t)/(n-1),s=ge(n,"float32");s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+r;return Gr(s,"float32")}(t,e,n)}scatter(t,e,n,r,s,i,o,a,l,u){const c=[r/s,s],h=this.readSync(t.dataId),d=this.readSync(e.dataId);if(0===r)return Rr([],n,e.dtype);const p=new Ae(c,e.dtype);p.values.fill(this.readSync(l.dataId)[0]);for(let t=0;t<i;t++){const i=[];let l=0;for(let e=0;e<o;e++){const n=h[t*o+e];i.push(n),l+=n*a[e]}if(l<0||l>=r/s)throw new Error(`Invalid indices: ${i} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[l*s+n]+=d[t*s+n]:p.values[l*s+n]=0===e.rank?d[0]:d[t*s+n]}return p.toTensor().reshape(n)}}!function(t,e,n=1){Xe.registerBackend(t,e,n)}("cpu",(()=>new YS),1);const JS={kernelName:T,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;HS(n,"cos");const s=r.data.get(n.dataId).values,i=Zt(n.shape),o=new Float32Array(i);for(let t=0;t<i;++t)o[t]=Math.cos(s[t]);return{dataId:r.write(o,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},ZS={kernelName:O,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s}=t,{strides:i,pad:o,dilations:a}=n,l=e,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:$,dilationHeight:I,dilationWidth:S,outShape:E}=Ms(r.shape,s.shape,i,o,"NHWC",a),C=Zt(E),N=E.length,R=ie(r.dtype,C);for(let t=0;t<p;++t)for(let e=0;e<y;++e){const n=e*w-x.top;for(let i=0;i<b;++i){const o=i*v-x.left;for(let a=0;a<m;++a){let l=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){const i=n+e*I;if(i>=0&&i<f)for(let n=0;n<$;++n){const p=o+n*S;if(p>=0&&p<g){const o=we([t,i,p,a],c,ce(r.shape)),f=we([e,n,a],d,ce(s.shape)),g=u[o]+h[f];g>l&&(l=g)}}}R[we([t,e,i,a],N,ce(E))]=l}}}return{dataId:l.write(he(R,r.dtype),E,r.dtype),shape:E,dtype:r.dtype}}},QS={kernelName:B,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:i}=t,{strides:o,pad:a,dilations:l}=n,u=e,c=pe(r.shape,u.data.get(r.dataId).values),h=pe(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:$,dilationWidth:I,outShape:S}=Ms(r.shape,s.shape,o,a,"NHWC",l);jt(i.rank===S.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${S.length}, but got ${i.rank}`));const E=pe(S,u.data.get(i.dataId).values),C=me(s.shape,s.dtype);for(let t=0;t<d;++t)for(let e=0;e<m;++e){const n=e*x-b.top;for(let r=0;r<y;++r){const s=r*w-b.left;for(let i=0;i<g;++i){let o=Number.MIN_SAFE_INTEGER,a=0,l=0;for(let e=0;e<v;++e){const r=n+e*$;if(r>=0&&r<p)for(let n=0;n<k;++n){const u=s+n*I;if(u>=0&&u<f){const s=c[t][r][u][i]+h[e][n][i];s>o&&(o=s,a=e,l=n)}}}C[a][l][i]+=E[t][e][r][i]}}}return{dataId:u.write(he(C,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},tE={kernelName:M,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:i}=t,{strides:o,pad:a,dilations:l}=n,u=e,c=pe(r.shape,u.data.get(r.dataId).values),h=pe(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:$,dilationWidth:I,outShape:S}=Ms(r.shape,s.shape,o,a,"NHWC",l);jt(i.rank===S.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${S.length}, but got ${i.rank}`));const E=pe(S,u.data.get(i.dataId).values),C=me(r.shape,r.dtype);for(let t=0;t<d;++t)for(let e=0;e<m;++e){const n=e*x-b.top;for(let r=0;r<y;++r){const s=r*w-b.left;for(let i=0;i<g;++i){let o=Number.MIN_SAFE_INTEGER,a=n<0?0:n,l=s<0?0:s;for(let e=0;e<v;++e){const r=n+e*$;if(r>=0&&r<p)for(let n=0;n<k;++n){const u=s+n*I;if(u>=0&&u<f){const s=c[t][r][u][i]+h[e][n][i];s>o&&(o=s,a=r,l=u)}}}C[t][a][l][i]+=E[t][e][r][i]}}}return{dataId:u.write(he(C,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function eE(t,e){return{kernelName:t,backendName:"cpu",kernelFunc:({inputs:n,backend:r})=>{const{a:s,b:i}=n,o=r;HS([s,i],t);const a=o.data.get(s.dataId).values,l=o.data.get(i.dataId).values,[u,c]=e(s.shape,i.shape,a,l,s.dtype);return{dataId:o.write(u,c,s.dtype),shape:c,dtype:s.dtype}}}}function nE(t){return(e,n,r,s,i)=>{const o=dr(e,n),a=o.length,l=ce(o),u=se(i,Zt(o)),c=e.length,h=n.length,d=ce(e),p=ce(n),f=cr(e,o),g=cr(n,o);if(f.length+g.length===0)for(let e=0;e<u.length;++e)u[e]=t(r[e%r.length],s[e%s.length]);else for(let e=0;e<u.length;++e){const n=ve(e,a,l),i=n.slice(-c);f.forEach((t=>i[t]=0));const o=we(i,c,d),m=n.slice(-h);g.forEach((t=>m[t]=0));const y=we(m,h,p);u[e]=t(r[o],s[y])}return[u,o]}}const rE=nE(((t,e)=>t/e)),sE=eE(L,rE),iE={kernelName:P,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,s=n,i=se(r.dtype,Zt(r.shape)),[o,a,l,u]=r.shape,c=s.data.get(r.dataId).values;for(let t=0;t<o;t++){const e=t*l*a*u;for(let t=0;t<a;t++){const n=t*(l*u);for(let r=0;r<l;r++){const s=r*u;for(let a=0;a<u;a++){const h=[o,t,r,a][2],d=Math.round(l-h),p=e+n+s+a;let f=c[p];d>=0&&d<l&&(f=c[e+n+d*u+a]),i[p]=f}}}}return{dataId:s.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},oE={kernelName:K,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}};function aE(t,e,n,r,s){const i=e.length,o=Zt(e),a=ce(e),l=ce(s),u=se(n,Zt(s));for(let e=0;e<o;++e){const n=ve(e,i,a),s=new Array(n.length);for(let t=0;t<s.length;t++)s[t]=n[r[t]];u[we(s,i,l)]=t[e]}return u}const lE={kernelName:Z,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:s,keepDims:i}=e,o=n;let a=r.shape;const l=a.length,u=re(s,a);let c=u;const h=nr(c,l);let d=o.data.get(r.dataId).values;if(null!=h){const t=new Array(l);for(let e=0;e<t.length;e++)t[e]=a[h[e]];d=aE(d,a,r.dtype,h,t),c=sr(c.length,l),a=t}HS(r,"max"),er("max",c,l);const[p,f]=Qn(a,c),g=function(t,e,n,r){const s=se(r,Zt(n));for(let n=0;n<s.length;++n){const r=n*e;let i=t[r];for(let n=0;n<e;++n){const e=t[r+n];e>i&&(i=e)}s[n]=i}return s}(d,Zt(f),p,r.dtype),m=o.write(g,p,r.dtype);let y=p;return i&&(y=tr(p,u)),{dataId:m,shape:y,dtype:r.dtype}}},uE={kernelName:"MaxPoolWithArgmax",backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:a}=e,l=n;HS(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=Bs(r.shape,s,i,[1,1],o),[h,d]=function(t,e,n,r,s){const i=KS(t,0,n,ce(e),s,"max"),o=qS(t,e,n,s,!0,r);return[i.values,o.values]}(u,r.shape,r.dtype,a,c),p=l.write(h,c.outShape,r.dtype),f=l.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},cE=function(t,e,n,r,s,i){return Zr(t,e,n,r,s,0,!1,i,!0)},hE={kernelName:st,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:a,padToMaxOutputSize:l}=n,u=e;HS(r,"NonMaxSuppressionPadded");const c=u.data.get(r.dataId).values,h=u.data.get(s.dataId).values,{selectedIndices:d,validOutputs:p}=cE(c,h,i,o,a,l);return[d,p]}},dE=function(t,e,n,r,s,i){return Zr(t,e,n,r,s,i,!0)},pE={kernelName:it,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:a,softNmsSigma:l}=n,u=e;HS(r,"NonMaxSuppressionWithScore");const c=u.data.get(r.dataId).values,h=u.data.get(s.dataId).values,d=i,p=o,f=a,g=l,{selectedIndices:m,selectedScores:y}=dE(c,h,d,p,f,g);return[m,y]}},fE={kernelName:lt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:i,constantValue:o}=r;HS(s,"pad");const a=i.map(((t,e)=>t[0]+s.shape[e]+t[1])),l=i.map((t=>t[0])),u=n.data.get(s.dataId).values,c=Zt(s.shape),h=s.shape.length,d=ce(s.shape),p=Zt(a),f=a.length,g=ce(a),m=se(s.dtype,p);0!==o&&m.fill(o);for(let t=0;t<c;t++)m[we(ve(t,h,d).map(((t,e)=>t+l[e])),f,g)]=u[t];return{dataId:n.write(m,a,s.dtype),shape:a,dtype:s.dtype}}};function gE(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:i}=r;return n.incRef(s.dataId),{dataId:s.dataId,shape:i,dtype:s.dtype}}const mE={kernelName:dt,backendName:"cpu",kernelFunc:gE},yE={kernelName:zt,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:i,center:o}=e,a=n,l=se(r.dtype,Zt(r.shape)),[u,c,h,d]=r.shape,[p,f]=function(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}(o,c,h),g=Math.sin(s),m=Math.cos(s),y=a.data.get(r.dataId).values;for(let t=0;t<u;t++){const e=t*h*c*d;for(let t=0;t<c;t++){const n=t*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let o=0;o<d;o++){const a=[u,t,r,o],b=a[2],x=a[1];let w=(b-p)*m-(x-f)*g,v=(b-p)*g+(x-f)*m;w=Math.round(w+p),v=Math.round(v+f);let k=i;"number"!=typeof i&&(k=3===o?255:i[o]),w>=0&&w<h&&v>=0&&v<c&&(k=y[e+v*(h*d)+w*d+o]),l[e+n+s+o]=k}}}}return{dataId:a.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function bE(t){const{inputs:e,attrs:n,backend:r}=t,{x:s}=e,{perm:i}=n;HS(s,"transpose");const o=s.shape.length,a=new Array(o);for(let t=0;t<a.length;t++)a[t]=s.shape[i[t]];const l=aE(r.data.get(s.dataId).values,s.shape,s.dtype,i,a);return{dataId:r.write(l,a,s.dtype),shape:a,dtype:s.dtype}}const xE={kernelName:_t,backendName:"cpu",kernelFunc:bE},wE={kernelName:Ct,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,paddings:o}=r;HS([s],"spaceToBatchND");const a=Zt(i),l=[[0,0]];l.push(...o);for(let t=1+i.length;t<s.shape.length;++t)l.push([0,0]);const u=fE.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=Qs(u.shape,i,a,!1),h=ti(c.length,i.length,!1),d=ei(u.shape,i,a,!1),p=gE({inputs:{x:u},backend:n,attrs:{shape:c}}),f=bE({inputs:{x:p},backend:n,attrs:{perm:h}}),g=gE({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}},vE={kernelName:Tt,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;HS(n,"square");const s=r.data.get(n.dataId).values,i=new Float32Array(s.length);for(let t=0;t<s.length;++t){const e=s[t];i[t]=e*e}return{dataId:r.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},kE=nE(((t,e)=>{const n=t-e;return n*n})),$E=eE(At,kE),IE=[JS,ZS,tE,QS,sE,iE,oE,uE,lE,hE,pE,fE,mE,yE,wE,vE,$E,xE];for(const t of IE)Gt(t);const SE={},EE={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function CE(t){t in SE||(SE[t]=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);return e.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete SE[t]}),!1),1===t?e.getContext("webgl",EE)||e.getContext("experimental-webgl",EE):e.getContext("webgl2",EE)}(t));const e=SE[t];return e.isContextLost()?(delete SE[t],CE(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),SE[t])}var NE,RE,AE;function TE(t,e){return[e,t]}function DE(t){const e=Fc(t);return Mc(Math.ceil(e/4))}function FE(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function _E(t,e){const n=t;let r,s,i,o,a,l,u,c,h,d;return 2===Ol().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,i=n.RGBA16F,o=n.RGBA32F,a=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT):(r=t.RGBA,s=t.RGBA,i=t.RGBA,o=n.RGBA,a=t.RGBA,u=4,c=4,h=null!=e?e.HALF_FLOAT_OES:null,d=t.FLOAT),l=t.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function OE(t,e){const n=e();return Ol().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}(t,e))}(t),n}function ME(t){return!!(Ol().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function BE(t,e){return HE(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(NE||(NE={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(RE||(RE={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(AE||(AE={}));const LE=/ERROR: [0-9]+:([0-9]+):/g;function zE(t,e){if(OE(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function PE(t,e,n,r,s,i,o){const a=t.getAttribLocation(e,n);return-1!==a&&(OE(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,r))),OE(t,(()=>t.vertexAttribPointer(a,s,t.FLOAT,!1,i,o))),OE(t,(()=>t.enableVertexAttribArray(a))),!0)}function WE(t,e,n,r){OE(t,(()=>function(t,e,n){(function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(t,n),OE(t,(()=>t.activeTexture(t.TEXTURE0+n))),OE(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,r))),OE(t,(()=>t.uniform1i(n,r)))}function UE(t,e,n){OE(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),OE(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function VE(t,e){OE(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),OE(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function GE(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}(t,e))}function HE(t,e,n){const r=OE(t,(()=>e()));if(null==r)throw new Error(n);return r}function KE(t,e=2){return Fc(t.slice(0,t.length-e))}function qE(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function jE(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[KE(t),...qE(t)]),e}function XE(t){return t%2==0}function YE(t,e){if(_c(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(XE(n)&&XE(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&XE(t[0])&&XE(e[0])}let JE,ZE;function QE(t,e){return null!=t.getExtension(e)}function tC(t){try{if(null!=CE(t))return!0}catch(t){return!1}return!1}function eC(t){const e=_E(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),s}const nC=Ol();nC.registerFlag("HAS_WEBGL",(()=>nC.getNumber("WEBGL_VERSION")>0)),nC.registerFlag("WEBGL_VERSION",(()=>tC(2)?2:tC(1)?1:0)),nC.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),nC.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===nC.get("WEBGL_VERSION"))),nC.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),nC.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),nC.registerFlag("WEBGL_PACK",(()=>nC.getBool("HAS_WEBGL"))),nC.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>nC.getBool("WEBGL_PACK"))),nC.registerFlag("WEBGL_PACK_CLIP",(()=>nC.getBool("WEBGL_PACK"))),nC.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),nC.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>nC.getBool("WEBGL_PACK"))),nC.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>nC.getBool("WEBGL_PACK"))),nC.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>nC.getBool("WEBGL_PACK"))),nC.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>nC.getBool("WEBGL_PACK"))),nC.registerFlag("WEBGL_PACK_REDUCE",(()=>nC.getBool("WEBGL_PACK"))),nC.registerFlag("WEBGL_LAZILY_UNPACK",(()=>nC.getBool("WEBGL_PACK"))),nC.registerFlag("WEBGL_CONV_IM2COL",(()=>nC.getBool("WEBGL_PACK"))),nC.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==JE){const e=CE(t);JE=e.getParameter(e.MAX_TEXTURE_SIZE)}return JE}(nC.getNumber("WEBGL_VERSION")))),nC.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==ZE){const e=CE(t);ZE=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,ZE)}(nC.getNumber("WEBGL_VERSION")))),nC.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=nC.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=CE(t);return e=QE(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:QE(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),nC.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>nC.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!function(){if("undefined"!=typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}())),nC.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=CE(t);if(1===t){if(!QE(e,"OES_texture_float"))return!1}else if(!QE(e,"EXT_color_buffer_float"))return!1;return eC(e)}(nC.getNumber("WEBGL_VERSION")))),nC.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!nC.getBool("WEBGL_FORCE_F16_TEXTURES")&&nC.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),nC.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(t){if(0===t)return!1;const e=CE(t);if(1!==t){if(QE(e,"EXT_color_buffer_float"))return eC(e);const t="EXT_color_buffer_half_float";if(QE(e,t)){const n=e.getExtension(t);return function(t,e){const n=_E(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(s),i}(e,n)}return!1}return!!QE(e,"OES_texture_float")&&!!QE(e,"WEBGL_color_buffer_float")&&eC(e)}(nC.getNumber("WEBGL_VERSION")))),nC.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=nC.getNumber("WEBGL_VERSION"))&&null!=CE(t).fenceSync;var t})),nC.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>nC.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),nC.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)}));class rC{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`float v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class sC{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}class iC{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:i}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];const o="max"===e?">":"<",a=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${a};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}function oC(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>`${t}.${e}`))}function aC(t,e){return 1===e?[t]:oC(t,e)}function lC(){let t,e,n,r,s,i,o,a,l,u;return 2===Ol().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",s="texture",i="outputColor",o="out vec4 outputColor;",a="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",s="texture2D",i="gl_FragColor",o="",a="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:s,output:i,defineOutput:o,defineSpecialNaN:a,defineSpecialInf:l,defineRound:u}}function uC(t,e,n="index"){const r=Yc(e);return r.map(((e,s)=>`int ${t[s]} = ${n} / ${e}; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * ${e}`:`index -= ${t[s]} * ${e}`};`)).join("")}function cC(t){const e=Yc(t).map((t=>t.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}const hC="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:dC}=r;function pC(t,e,n,r){const s=[];t.forEach((t=>{const e=Fc(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?s.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(s.push(`uniform sampler2D ${t.name};`),s.push(`uniform int offset${t.name};`))}));const i=s.join("\n"),o=t.map((t=>function(t,e,n=!1){let r="";r+=n?gC(t):fC(t);const s=t.shapeInfo.logicalShape,i=e.logicalShape;return s.length<=i.length&&(r+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=t.shapeInfo.logicalShape.length,o=e.logicalShape.length,a=dC(t.shapeInfo.logicalShape,e.logicalShape),l=kC(o),u=o-i;let c;const h=["x","y","z","w","u","v"];c=0===i?"":o<2&&a.length>=1?"coords = 0;":a.map((t=>`coords.${h[t+u]} = 0;`)).join("\n");let d="";d=o<2&&i>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${h[e+u]}`)).join(", ");let p="return outputValue;";const f=1===Fc(t.shapeInfo.logicalShape),g=1===Fc(e.logicalShape);if(1!==i||f||g){if(f&&!g)p=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(a.length){const t=i-2,e=i-1;a.indexOf(t)>-1&&a.indexOf(e)>-1?p="return vec4(outputValue.x);":a.indexOf(t)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(e)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=e.texShape,o=t.shapeInfo.texShape,a=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&a===l&&null==t.shapeInfo.flatOffset&&_c(o,i))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=kC(l),c=dC(t.shapeInfo.logicalShape,e.logicalShape),h=l-a;let d;const p=["x","y","z","w","u","v"];d=0===a?"":l<2&&c.length>=1?"coords = 0;":c.map((t=>`coords.${p[t+h]} = 0;`)).join("\n");let f="";return f=l<2&&a>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${p[e+h]}`)).join(", "),`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(t,e)),r}(t,e,r))).join("\n"),a=e.texShape,l=lC(),u=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,h,d=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${mC}\n    ${yC}\n    ${bC}\n  `}(l);return e.isPacked?(c=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(_c(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),s=r*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),s=r*Math.ceil(t[t.length-2]/2);let i=s,o="",a="b, r, c";for(let e=2;e<t.length-1;e++)i*=t[t.length-e-1],o=`\n      int b${e} = index / ${i};\n      index -= b${e} * ${i};\n    `+o,a=`b${e}, `+a;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${t.length}(${a});\n    }\n  `}(t,e)}}(e.logicalShape,a),h=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(l)):(c=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=e)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(t,e){return _c(t,e)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=uC(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=uC(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=uC(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=uC(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}var n}(e.logicalShape,a),h=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),r&&(d+=xC),[d,u,h,i,c,o,n].join("\n")}function fC(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[r,s]=t.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[i,o]=t.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${i}, ${o}, ${wC(e)});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${vC(t)}\n      }\n    `;const r=t.shapeInfo.texShape,s=r[0],i=r[1];if(1===i&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const o=wC(e);return 1===i?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `:1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape;if(null!=s&&_c(e,s)){const t=s[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=Pc(e),a=i;if(a.length<e.length){const e=["row","col"];return`\n      ${fC($C(t,a))}\n      float ${r}(int row, int col) {\n        return ${r}(${IC(e,o)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${vC(t)}\n      }\n    `;const l=s[0],u=s[1],c=wC(n);return 1===u?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[1]*e[2],i=e[2],{newShape:o,keptDims:a}=Pc(e),l=o;if(l.length<e.length){const e=["row","col","depth"];return`\n        ${fC($C(t,l))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${IC(e,a)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${vC(t)}\n      }\n    `;const u=t.shapeInfo.texShape,c=u[0],h=u[1],d=t.shapeInfo.flatOffset;if(h===s&&null==d)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===i&&null==d)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${wC(n)};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[3],i=e[2]*s,o=e[1]*i,{newShape:a,keptDims:l}=Pc(e);if(a.length<e.length){const e=["row","col","depth","depth2"];return`\n      ${fC($C(t,a))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${IC(e,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${vC(t)}\n      }\n    `;const u=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,h=c[0],d=c[1];if(d===o&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${d}, index + ${wC(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[4],i=e[3]*s,o=e[2]*i,a=e[1]*o,{newShape:l,keptDims:u}=Pc(e);if(l.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${fC($C(t,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${IC(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${a}, ${o}, ${i}, ${s})) +\n          depth3;\n        ${vC(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1];if(p===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${a} + col * ${o} + depth * ${i} +\n          depth2 * ${s} + depth3 + ${wC(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=Pc(e);if(s.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${fC($C(t,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${IC(e,i)});\n      }\n    `}const o=e[5],a=e[4]*o,l=e[3]*a,u=e[2]*l,c=e[1]*u;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${a})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${vC(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${a}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===o&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${a} + depth3 * ${o} + depth4 + ${wC(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function gC(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${lC().texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],i=lC();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${i.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,i=s[0],o=s[1],a=lC();if(null!=s&&_c(e,s))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${a.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(e[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===e[0]){const n=[1,2],s=["b","row","col"];return`\n        ${gC($C(t,e.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${IC(s,n)});\n        }\n      `}const o=i[0],a=i[1],l=Math.ceil(e[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${o}, ${a}, ${l*Math.ceil(e[1]/2)}, ${l}, b, row, col);\n      return ${lC().texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t.shapeInfo.texShape,o=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],a=o[0],l=o[1],u=Math.ceil(e[n-1]/2);let c=u*Math.ceil(e[n-2]/2),h="int b, int row, int col",d=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let t=2;t<n-1;t++)h=`int b${t}, `+h,c*=e[n-t-1],d=`b${t} * ${c} + `+d;return`\n    vec4 ${s}(${h}) {\n      int index = ${d};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${a});\n      return ${lC().texture2D}(${r}, uv);\n    }\n  `}(t)}}const mC="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",yC="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",bC="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",xC="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function wC(t){return`offset${t}`}function vC(t){const e=t.name,n=Fc(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function kC(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function $C(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function IC(t,e){return e.map((e=>t[e])).join(", ")}class SC{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,Rc(t.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=t[t.length-1],i=Math.ceil(s/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,a=o.length,l=kC(a),u=aC("coords",a);let c,h;if(1===i){h=a+1;const t=kC(h);c=`\n        ${t} sourceLocR = ${t}(${u.join()}, 0);\n        ++${u[a-1]};\n        ${t} sourceLocG = ${t}(${u.join()}, 0);\n        ++${u[a-2]};\n        ${t} sourceLocA = ${t}(${u.join()}, 0);\n        --${u[a-1]};\n        ${t} sourceLocB = ${t}(${u.join()}, 0);\n        --${u[a-2]};`}else h=a,c=`\n        ${l} sourceLocR = coords;\n        ++${u[a-1]};\n        ${l} sourceLocG = coords;\n        ++${u[a-2]};\n        ${l} sourceLocA = coords;\n        --${u[a-1]};\n        ${l} sourceLocB = coords;\n        --${u[a-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((t=>"int "+t)),g=aC("sourceLocR",h-1).concat("inIdx.r"),m=aC("sourceLocG",h-1).concat("inIdx.g"),y=aC("sourceLocB",h-1).concat("inIdx.b"),b=aC("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${m.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[a-1]} < ${o[a-1]-1};\n        bool hasNextRow = ${u[a-2]} < ${o[a-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}class EC{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i=t.dilationHeight,o=t.dilationWidth,a=t.effectiveFilterHeight,l=t.effectiveFilterWidth,u=a-1-t.padInfo.top,c=l-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${o}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class CC{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,i=t.strideHeight,o=t.strideWidth,a=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=c-1-t.padInfo.front,f=h-1-t.padInfo.top,g=d-1-t.padInfo.left,m=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${g});\n      const float avgMultiplier = float(${m});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class NC{constructor(t,e,n,r,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],df(t,e),df(t,n);let o="0.0";null!=r&&(df(t,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let a="1.0";null!=s&&(df(t,s),this.variableNames.push("scale"),a="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${a};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class RC{constructor(t,e,n,r,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],df(t,e),df(t,n);let o="vec4(0.0)";null!=r&&(df(t,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let a="vec4(1.0)";null!=s&&(df(t,s),this.variableNames.push("scale"),a="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${a};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}class AC{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=df(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const TC="return a + b;",DC="return a - b;",FC="return a * b;",_C="return (a < 0.) ? b * a : a;";class OC{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=df(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const MC="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";class BC{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=df(e,n);const s=this.outputShape.length;let i="";if(r)if(0===s||1===Fc(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${kC(s)} coords = getOutputCoords();\n        `,1===s)i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=aC("coords",s);i+=`\n            bool nextRowOutOfBounds =\n              (${t[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${t[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}class LC{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class zC{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class PC{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}class WC{constructor(t){this.outputShape=[],this.outputShape=jp(t,1),this.variableNames=t.map(((t,e)=>`T${e}`));const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const r=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${r}));`)}const r=e.length,s=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class UC{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=jp(t,e);const n=this.outputShape,r=n.length,s=kC(r),i=aC("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map(((t,e)=>`T${e}`));const a=new Array(t.length-1);a[0]=t[0][e];for(let n=1;n<a.length;n++)a[n]=a[n-1]+t[n][e];const l=o[e],u=o.slice(-2),c=o.join();let h=`if (${l} < ${a[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let t=1;t<a.length;t++){const e=a[t-1];h+=`\n        if (${l} < ${a[t]}  && ${l} >= ${a[t-1]}) {\n          return getChannel(\n            getT${t}(${VC(o,l,e)}),\n            vec2(${VC(u,l,e)}));\n        }`}const d=a.length,p=a[a.length-1];h+=`\n        return getChannel(\n          getT${d}(${VC(o,l,p)}),\n          vec2(${VC(u,l,p)}));`,this.userCode=`\n      float getValue(${o.map((t=>"int "+t))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function VC(t,e,n){const r=t.indexOf(e);return t.map(((t,e)=>e===r?`${t} - ${n}`:t)).join()}class GC{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,i="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${i}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class HC{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i="channelsLast"===t.dataFormat,o=e-1-t.padInfo.top,a=n-1-t.padInfo.left,l=i?1:2,u=i?2:3,c=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class KC{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.padInfo.front,i=t.padInfo.top,o=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${s};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${o};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class qC{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,i=t.strideHeight,o=t.strideWidth,a=e-1-t.padInfo.front,l=n-1-t.padInfo.top,u=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${a}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class jC{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class XC{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i=e-1-t.padInfo.top,o=n-1-t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${a}; dm++) {\n              int d2 = d1 * ${a} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class YC{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.padInfo.top,i=t.padInfo.left,o=t.strideHeight,a=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,c=t.filterHeight,h=t.filterWidth,d=4*Math.floor(t.inChannels/4),p=t.inChannels%4,f="channelsLast"===t.dataFormat,g=f?1:2,m=f?2:3,y=f?3:1;let b="",x="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${o}, ${a});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${m}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${c}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${u};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===p}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===p}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===p}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}}class JC{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,s=t.strideDepth,i=t.strideHeight,o=t.strideWidth,a=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${i}, ${o});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${a};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ZC{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.inHeight,i=t.inWidth,o=t.padInfo.top,a=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,f=t.outChannels/t.inChannels;let g="",m="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,m="result = activation(result);");const y=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${l}, ${u});\n      const ivec2 pads = ivec2(${o}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${f};\n        int q = d2 - d1 * ${f};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${m}\n        setOutput(result);\n      }\n    `}}class QC{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const s=t.inHeight,i=t.inWidth,o=t.padInfo.top,a=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,f=p;let g="int xR; int xC; int xCOffset;";for(let t=0;t<d;t++)for(let e=0;e<p;e++)g+=`\n          vec4 xTexelR${t}C${2*e} = vec4(0.);\n          vec4 wR${t}C${e} = vec4(0.);\n          vec4 xR${t}C${e} = vec4(0.);`;for(let t=0;t<d;t++)for(let e=0;e<f;e++){const n=2*e;if(g+=`\n          xR = xRCorner + ${t*c};\n          xC = xCCorner + ${n*h};\n        `,1===u){if(n<p&&(g+=a%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    xTexelR${t}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${t}C${n} = vec4(previous.zw, xTexelR${t}C${n}.xy);\n                } else {\n                  xR${t}C${n} = vec4(0, 0, xTexelR${t}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${s} && xC >= 0 && xC < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xR${t}C${n} = xTexelR${t}C${n};\n              `,n+1<p)){const e=a%2==0?Nc(h):h;h%2==0&&a%2==1||h%2!=0&&a%2!=1?(g+=`\n                  xCOffset = xC + ${a%2} + ${e};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,h>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${s} &&\n                      xCOffset >= 0 && xCOffset < ${i}) {\n                      xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${t}C${n} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${t}C${n+1} = xTexelR${t}C${n+2};\n                `}}else n<p&&(g+=`\n              if(xR >= 0 && xR < ${s}) {\n            `,a%2==1?(g+=`\n                xCOffset = xC + 1 - ${u};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n              `,n+1<p&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${u};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${t}C${n+1} = vec4(xTexelR${t}C${n+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${u};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.xy, xTexelR${t}C${n+2}.xy);\n              `,n+1<p&&(g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n                `)),g+="}");n<p&&(g+=`\n            vec4 wTexelR${t}C${n} = getW(${t}, ${n}, d1, q);\n            wR${t}C${n} = vec4(wTexelR${t}C${n}.xz, wTexelR${t}C${n}.xz);\n          `,n+1<p&&(g+=`\n              vec4 wTexelR${t}C${n+1} = getW(${t}, ${n+1}, d1, q);\n              wR${t}C${n+1} =\n                vec4(wTexelR${t}C${n+1}.xz, wTexelR${t}C${n+1}.xz);`))}for(let t=0;t<d;t++)for(let e=0;e<p;e++)g+=`dotProd += xR${t}C${e} * wR${t}C${e};`;let m="",y="";n&&(m=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,y="result = activation(result);");const b=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${l}, ${u});\n      const ivec2 pads = ivec2(${o}, ${a});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}}class tN{constructor(t,e,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,o,a,l]=t,[u]=e,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[o-1+".0",a-1+".0"],[g,m,y]=c>1?[""+(o-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,x,w]=h>1?[""+(a-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${g});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${m};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}class eN{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const r=t.length,s=e?"0.0":`getX(${nN(r,"coords")})`,i=t[t.length-1];let o="",a="";e?(o=n?"end != "+(i-1):"end != 0",a=n?"end + 1":"end - 1"):(o=n?`end + pow2 < ${i}`:"end >= pow2",a=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${kC(r)} coords = getOutputCoords();\n        int end = ${rN(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${o}) {\n          int idx = ${a};\n          ${rN(r,"coords")} = idx;\n          val += getX(${nN(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function nN(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function rN(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.y`;if(3===t)return`${e}.z`;if(4===t)return`${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}class sN{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=NE.DENSE;const e=DE(t),n=lC();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${uC(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class iN{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=NE.DENSE;const e=DE(t),n=lC();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${uC(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class oN{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}class aN{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}class lN{constructor(t){this.variableNames=["A"],this.outTexUsage=RE.DOWNLOAD;const e=lC();this.outputShape=t,this.userCode=`\n      ${hC}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class uN{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=RE.DOWNLOAD;const e=lC();this.outputShape=t,this.userCode=`\n      ${hC}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class cN{constructor(t,e,n=!1){this.variableNames=["A"];const r=lC(),[s,i]=e;this.outputShape=t;let o="result";n&&(o="floor(result * 255. + 0.5)"),this.userCode=`\n      ${cC(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${i};\n        int c = imod(flatIndex, ${i});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${i}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${o}, 0., 0., 0.);\n      }\n    `}}class hN{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=lC(),[s,i]=e;this.outputShape=t;let o="",a="result";n&&(a="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let n=0;n<=1;n++){const a=2*e+n;o+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${t[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${e} < ${t[1]}) {\n              localCoords[1] += ${e};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${i};\n              c = imod(flatIndex, ${i});\n              uv = (vec2(c, r) + halfCR) / vec2(${i}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${a}] = values[0];\n              } else if(offset == 1) {\n                result[${a}] = values[1];\n              } else if(offset == 2) {\n                result[${a}] = values[2];\n              } else {\n                result[${a}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${cC(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${o}\n\n        ${r.output} = ${a};\n      }\n    `}}class dN{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${t}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}class pN{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class fN{constructor(t,e,n){this.variableNames=["A","indices"];const r=t.slice();r[n]=e,this.outputShape=r,this.rank=r.length;const s=kC(this.rank),i=function(t,e){const n=t.length;if(n>4)throw Error(`Gather for rank ${n} is not yet supported`);if(1===n)return"int(getIndices(resRC))";const r=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let n=0;n<t.length;n++)n===e?s.push(`int(getIndices(${r[n]}))`):s.push(`${r[n]}`);return s.join()}(t,n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${i}));\n      }\n    `}}class gN{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=kC(e.length),s=kC(n.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${i};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}function mN(t,e,n,r,s,i){!function(t,e){const n=Ol().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const o=function(t){return HE(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),a=t.TEXTURE_2D;return OE(t,(()=>t.bindTexture(a,o))),OE(t,(()=>t.texParameteri(a,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),OE(t,(()=>t.texParameteri(a,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),OE(t,(()=>t.texParameteri(a,t.TEXTURE_MIN_FILTER,t.NEAREST))),OE(t,(()=>t.texParameteri(a,t.TEXTURE_MAG_FILTER,t.NEAREST))),OE(t,(()=>t.texImage2D(a,0,r,e,n,0,s,i,null))),OE(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),o}function yN(t){return t.internalFormatFloat}function bN(t){return t.internalFormatHalfFloat}function xN(t){return t.downloadTextureFormat}function wN(t){return t.internalFormatPackedFloat}function vN(t){return t.internalFormatPackedHalfFloat}class kN{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=Ol().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){SE[t]=e}(e,t)):this.gl=CE(e);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Ol().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=BE(this.gl,t),QE(this.gl,e))this.textureHalfFloatExtension=BE(this.gl,e);else if(Ol().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),QE(this.gl,r))this.colorBufferHalfFloatExtension=BE(this.gl,r);else if(Ol().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",QE(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!QE(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(t){return function(t,e){const n=HE(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return OE(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),OE(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(t){return function(t,e){const n=HE(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return OE(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),OE(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(t){return HE(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=_E(this.gl,this.textureHalfFloatExtension)}get debug(){return Ol().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;OE(t,(()=>t.finish())),OE(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),OE(t,(()=>t.deleteFramebuffer(this.framebuffer))),OE(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),OE(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),OE(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=TE(e,n);return mN(t,s,i,yN(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=TE(e,n);return mN(t,s,i,bN(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=TE(e,n);return mN(t,s,i,xN(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){OE(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?OE(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):OE(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),OE(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,s,i){let o,a,l;OE(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),s instanceof Uint8Array?(o=new Uint8Array(n*r*4),a=t.UNSIGNED_BYTE,l=t.RGBA):(o=new Float32Array(n*r*4),a=t.FLOAT,l=i.internalFormatPackedFloat),o.set(s),OE(t,(()=>t.texImage2D(t.TEXTURE_2D,0,l,n,r,0,t.RGBA,a,o))),OE(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=FE(e,n);return mN(t,s,i,vN(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=FE(e,n);return mN(t,s,i,wN(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(VE(this.gl,this.framebuffer),this.outputTexture=null),OE(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,r){const[s,i]=TE(e,n),o=new Uint8Array(e*n*4);return OE(t,(()=>t.readPixels(0,0,s,i,r.downloadTextureFormat,t.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,r,s,i){return function(t,e,n,r,s,i,o,a){const l=t,u=new Float32Array(function(t,e){const[n,r]=FE(t,e);return n*r*4}(i,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,t,0,0,0,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const s=t.createBuffer();OE(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,s)));const i=16*e*n;return OE(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,i,t.STREAM_READ))),OE(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),OE(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),s}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(Ol().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(s,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=s}else Ol().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,Ol().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const r=new Float32Array(e*n*4);return OE(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r))),r}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=function(t,e){const n=HE(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(OE(t,(()=>t.shaderSource(n,e))),OE(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=LE.exec(e);if(null==n)return console.log(`Couldn't parse line number in error: ${e}`),void console.log(t);const r=+n[1],s=t.split("\n"),i=s.length.toString().length+2,o=s.map(((t,e)=>Bc((e+1).toString(),i)+t));let a=0;for(let t=0;t<o.length;t++)a=Math.max(o[t].length,a);const l=o.slice(0,r-1),u=o.slice(r-1,r),c=o.slice(r);console.log(l.join("\n")),console.log(e.split("\n")[0]),console.log(`%c ${Bc(u[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e,t),r=function(t){const e=lC();return function(t,e){const n=HE(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(OE(t,(()=>t.shaderSource(n,e))),OE(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e),s=function(t){return HE(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return OE(e,(()=>e.attachShader(s,r))),OE(e,(()=>e.attachShader(s,n))),function(t,e){if(OE(t,(()=>t.linkProgram(e))),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,s),this.debug&&zE(e,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=function(t,e,n){return OE(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),PE(t,e,"clipSpacePos",n,3,20,0)&&PE(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),s}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&OE(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&zE(this.gl,this.program),OE(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return HE(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),OE(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),WE(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,s]=FE(e,n);this.setOutputMatrixTextureDriver(t,r,s)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&zE(this.gl,this.program),GE(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),OE(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),OE(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=BE(this.gl,2===Ol().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Ol().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===Ol().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await Lc((()=>this.disposed||this.isQueryAvailable(t,Ol().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,Ol().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||Lc((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),UE(this.gl,t,this.framebuffer),this.debug&&GE(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(UE(this.gl,this.outputTexture,this.framebuffer),this.debug&&GE(this.gl)):VE(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;UE(r,t,this.framebuffer),this.debug&&GE(r),this.outputTexture=t,OE(r,(()=>r.viewport(0,0,e,n))),OE(r,(()=>r.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),OE(this.gl,(()=>this.gl.scissor(t,e,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function $N(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach(((t,n)=>{const r=t.logicalShape,s=e[n],i=s.shape;if(!_c(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(t.isUniform&&s.isUniform)return;const o=t.texShape,a=s.isUniform?null:s.texData.texShape;if(!_c(o,a))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${a} must match`)}))}class IN{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:s,strideWidth:i,strideHeight:o,padInfo:a,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:d,top:p}=a,f=s*r,g=lC(),m="channelsLast"===h,y=m?0:1,b=m?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${o} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${e[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${i}. - ${d}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${e[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${m}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${g.output} = result;\n      }\n    `}}class SN{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[];const i=e,o=t[3]-1;let a;this.outputShape=t;const l=`float(${n}) + float(${r}) * sum`;a=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${o}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${a};\n        setOutput(val);\n      }\n    `}}class EN{constructor(t,e,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}class CN{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=e,o=t[3]-1;let a;this.outputShape=t;const l=`float(${n}) + float(${r}) * sum`;a=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${a};\n        setOutput(result);\n      }\n    `}}class NN{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,s=t.effectiveFilterHeight,i=t.effectiveFilterWidth,o=s-1-t.padInfo.top,a=i-1-t.padInfo.left,l=s*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class RN{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.dilationDepth,i=t.dilationHeight,o=t.dilationWidth,a=t.effectiveFilterDepth,l=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=a-1-t.padInfo.front,h=l-1-t.padInfo.top,d=u-1-t.padInfo.left,p=a*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${a};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${o}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class AN{constructor(t,e,n=!1,r=!1,s=!1,i=null,o=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const a=n?t[1]:t[2],l=Math.ceil(a/2),u=n?"i * 2, rc.y":"rc.y, i * 2",c=r?"rc.z, i * 2":"i * 2, rc.z",h=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],d=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let p="",f="";i&&(p=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,f="result = activation(result);");const g=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${p}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          vec4 a = getMatrixA(rc.x, ${u});\n          vec4 b = getMatrixB(rc.x, ${c});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${d[0]});\n          result += (${h[1]} * ${d[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${f}\n\n        setOutput(result);\n      }\n    `}}class TN{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}class DN{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}class FN{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=aC("rc",e),r=kC(e),s=function(t,e,n){if(1===t)return`rc > ${e[0]}`;let r="";for(let s=t-2;s<t;s++)r+=`${n[s]} >= ${e[s]}`,s<t-1&&(r+="||");return r}(e,t,n),i=function(t,e,n,r){if(1===t)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),o=function(t,e){const n=t.length,r=function(t,e){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let i=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<t;n++)i=`${e[e.length-1-n]},`+i;n.push(i)}return n}(n,e);return 1===n?`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(t,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${i}\n\n            setOutput(vec4(${o}));\n          }\n        }\n      `}}}class _N{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=kC(r),i=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),a=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${a}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class ON{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=kC(r),i=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),a=aC("rc",r),l=aC("source",r),u=`${a[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${a[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${a[r-2]} += 1;\n       if(${a[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${a[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let t=0,e=1===r?2:4;t<e;t++)p+=`\n        ${h[t]}\n        if (${d}) {\n          result[${t}] = float(${n});\n        } else {\n          ${s} source = rc - start;\n          result[${t}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}class MN{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,o=t.strideHeight,a=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,g=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,m=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${o}, ${a});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?g:m:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(b="avgValue / count");const x=4*Math.floor(i/4),w=i%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${a});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class BN{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,o=t.strideDepth,a=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,g=t.padInfo.front,m=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;const b="avg"===e;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${o}, ${a}, ${l});\n        const ivec3 pads = ivec3(${g}, ${m}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(w="avgValue / count");const v=4*Math.floor(i/4),k=i%4,$=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${o}, ${a}, ${l});\n      const ivec3 pads = ivec3(${g}, ${m}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${$}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${$}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${$}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${$}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}class LN{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=t;this.outputShape=[r,i];let o="0.0",a="";"prod"===e?o="1.0":"min"===e?(o="1.0 / 1e-20",a="min"):"max"===e&&(o="-1.0 / 1e-20",a="max");let l=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?l="sumValue":"prod"===e?l="prodValue":"all"===e?l="allValue":"any"===e&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${a}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===e?(o="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(o="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${o});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}class zN{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${uC(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${cC(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class PN{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,s]=e.shape,[,i,o]=t.shape,a=[n&&i>1?r-1:r,n&&o>1?s-1:s],l=[n&&i>1?i-1:i,n&&o>1?o-1:o],u=a[0]/l[0],c=a[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class WN{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[s,i,o,a]=t;this.outputShape=[s,e,n,a];const l=[r&&e>1?i-1:i,r&&n>1?o-1:o],u=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class UN{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,a]=t;this.outputShape=[s,e,n,a];const l=[r&&e>1?i-1:i,r&&n>1?o-1:o],u=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]},\n          ${l[1]/u[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${a-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}class VN{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,s]=e.shape,[,i,o]=t.shape,a=[n&&i>1?r-1:r,n&&o>1?s-1:s],l=[n&&i>1?i-1:i,n&&o>1?o-1:o],u=a[0]/l[0],c=a[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${a[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${a[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class GN{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[s,i,o,a]=t;this.outputShape=[s,e,n,a];const l=[r&&e>1?i-1:i,r&&n>1?o-1:o],u=[r&&e>1?e-1:e,r&&n>1?n-1:n],c=r?"0.5":"0.0";this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class HN{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map(((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=kC(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class KN{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=aC("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,o=kC(n);function a(n){const r=t.map(((r,s)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${o} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return a(t)}(r.slice())};\n          if(${s}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",a(t)}(r.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",a(t)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",a(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}class qN{constructor(t,e,n,r,s,i,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const a=kC(s.length),l=kC(i.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=e>1?"strides[j]":"strides";this.userCode=`\n        ${a} strides = ${a}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}class jN{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,s=t.inSize,i=t.numSegments,o=i*Math.ceil(s/n);this.outputShape=[r,o];const a=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class XN{constructor(t,e,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],o=[];for(let r=0;r<e.length;r++)o.push(`${n[r]}`),r<t&&i.push(`${n[r]}`);r=i.join(),s=o.join()}const i=kC(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}class YN{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=kC(this.rank),n=`uniform int start[${this.rank}];`,r=function(t){if(1===t)return"sourceLoc";if(t<=6)return JN.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let s;s=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map(((t,e)=>`sourceLoc.${JN[e]} = start[${e}] + coords.${JN[e]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const JN=["x","y","z","w","u","v"];class ZN{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=kC(this.rank),n=aC("coords",this.rank),r=aC("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${s})`,o=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${i};\n        --${r[this.rank-1]};\n      }\n    `,a=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map(((t,e)=>`start[${e}]`)).join()});`:t.map(((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${o}\n        ${a}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}class QN{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=kC(n.length),i=kC(n.length);let o="";if(1===r)o="coords * strides + begin";else{let t=0;o=n.map(((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${t});\n      ${s} strides = ${s}(${e});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}class tR{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=nR(e,n),s=rR(t,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const i=eR(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const t=this.freeTextures[s].shift();return this.usedTextures[s].push(t),t}let o;return r===AE.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===AE.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===AE.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===AE.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===AE.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(o),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),o}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const s=nR(n,r),i=rR(e,s,r);i in this.freeTextures||(this.freeTextures[i]=[]);const o=eR(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),a=Ol().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==a&&this._numBytesAllocated>a?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=o):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const l=this.usedTextures[i],u=l.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function eR(t,e,n,r,s){const i=function(t,e){switch(t){case AE.PACKED_2X2_FLOAT32:return wN(e);case AE.PACKED_2X2_FLOAT16:return vN(e);case AE.UNPACKED_FLOAT32:return yN(e);case AE.UNPACKED_FLOAT16:return bN(e);case AE.PACKED_4X1_UNSIGNED_BYTE:return xN(e);default:throw new Error(`Unknown physical texture type ${t}`)}}(e,r);let o;if(s){const[e,n]=FE(t[0],t[1]);o=e*n}else{const[e,n]=TE(t[0],t[1]);o=e*n}return o*function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${e}`)}(n,i)}function nR(t,e){if(t===RE.UPLOAD)return AE.PACKED_2X2_FLOAT32;if(t===RE.RENDER||null==t)return function(t){return Ol().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?AE.PACKED_2X2_FLOAT32:AE.UNPACKED_FLOAT32:t?AE.PACKED_2X2_FLOAT16:AE.UNPACKED_FLOAT16}(e);if(t===RE.DOWNLOAD||t===RE.PIXELS)return AE.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function rR(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class sR{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[r]*e[r];this.outputShape=n,this.rank=n.length;const r=kC(this.rank),s=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let e=0;e<t.length;e++)r.push(`imod(${n[e]}, ${t[e]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}class iR{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const oR="return abs(x);",aR="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",lR="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",uR="return (x >= 0.0) ? x : (exp(x) - 1.0);",cR=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Wm};\n  float scale = ${Um};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,hR="return -x;",dR="return ceil(x);",pR="return floor(x);",fR="return exp(x);",gR="return exp(x) - 1.0;",mR=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Vm};\n  float a1 = ${Gm};\n  float a2 = ${Hm};\n  float a3 = ${Km};\n  float a4 = ${qm};\n  float a5 = ${jm};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,yR="return x;",bR="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",xR="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",wR="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n";class vR{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class kR{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=aC("rc",e),r=kC(e),s=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),i=n.slice(-2),o=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${o}));\n      }\n    `}}const{segment_util:$R}=r,IR={};function SR(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?bR:aR;if("elu"===t)return e?wR:uR;if("relu6"===t)return e?xR:lR;if("prelu"===t)return e?MC:_C;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class ER extends class{time(t){return uy("time")}read(t){return uy("read")}readSync(t){return uy("readSync")}numDataIds(){return uy("numDataIds")}disposeData(t){return uy("disposeData")}write(t,e,n){return uy("write")}move(t,e,n,r){return uy("move")}memory(){return uy("memory")}floatPrecision(){return uy("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(t,e,n,r){return uy("batchMatMul")}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:i,preluActivationWeights:o}){return uy("fusedBatchMatMul")}slice(t,e,n){return uy("slice")}stridedSlice(t,e,n,r){return uy("stridedSlice")}unstack(t,e){return uy("unstack")}reverse(t,e){return uy("reverse")}concat(t,e){return uy("concat")}neg(t){return uy("neg")}add(t,e){return uy("add")}addN(t){return uy("addN")}subtract(t,e){return uy("subtract")}multiply(t,e){return uy("multiply")}realDivide(t,e){return uy("realDivide")}floorDiv(t,e){return uy("floorDiv")}sum(t,e){return uy("sum")}prod(t,e){return uy("prod")}unsortedSegmentSum(t,e,n){return uy("unsortedSegmentSum")}argMin(t,e){return uy("argMin")}argMax(t,e){return uy("argMax")}equal(t,e){return uy("equal")}notEqual(t,e){return uy("notEqual")}less(t,e){return uy("less")}lessEqual(t,e){return uy("lessEqual")}greater(t,e){return uy("greater")}greaterEqual(t,e){return uy("greaterEqual")}logicalNot(t){return uy("logicalNot")}logicalAnd(t,e){return uy("logicalAnd")}logicalOr(t,e){return uy("logicalOr")}where(t){return uy("where")}select(t,e,n){return uy("select")}topk(t,e,n){return uy("topk")}min(t,e){return uy("min")}minimum(t,e){return uy("minimum")}mod(t,e){return uy("mod")}max(t,e){return uy("max")}maximum(t,e){return uy("maximum")}all(t,e){return uy("all")}any(t,e){return uy("any")}squaredDifference(t,e){return uy("squaredDifference")}ceil(t){return uy("ceil")}floor(t){return uy("floor")}round(t){return uy("round")}sign(t){return uy("sign")}isNaN(t){return uy("isNaN")}isInf(t){return uy("isInf")}isFinite(t){return uy("isFinite")}pow(t,e){return uy("pow")}exp(t){return uy("exp")}expm1(t){return uy("expm1")}softmax(t,e){return uy("softmax")}log(t){return uy("log")}log1p(t){return uy("log1p")}sqrt(t){return uy("sqrt")}rsqrt(t){return uy("rsqrt")}square(t){return uy("square")}reciprocal(t){return uy("reciprocal")}relu(t){return uy("relu")}relu6(t){return uy("relu6")}prelu(t,e){return uy("prelu")}elu(t){return uy("elu")}eluDer(t,e){return uy("eluDer")}selu(t){return uy("selu")}int(t){return uy("int")}clip(t,e,n){return uy("clip")}abs(t){return uy("abs")}complexAbs(t){return uy("complexAbs")}sigmoid(t){return uy("sigmoid")}softplus(t){return uy("softplus")}sin(t){return uy("sin")}cos(t){return uy("cos")}tan(t){return uy("tan")}asin(t){return uy("asin")}acos(t){return uy("acos")}atan(t){return uy("atan")}atan2(t,e){return uy("atan2")}sinh(t){return uy("sinh")}cosh(t){return uy("cosh")}tanh(t){return uy("tanh")}asinh(t){return uy("asinh")}acosh(t){return uy("acosh")}atanh(t){return uy("atanh")}erf(t){return uy("erf")}step(t,e){return uy("step")}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){return uy("fusedConv2d")}conv2d(t,e,n){return uy("conv2d")}conv2dDerInput(t,e,n){return uy("conv2dDerInput")}conv2dDerFilter(t,e,n){return uy("conv2dDerFilter")}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){return uy("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return uy("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return uy("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return uy("depthwiseConv2DDerFilter")}conv3d(t,e,n){return uy("conv3d")}conv3dDerInput(t,e,n){return uy("conv3dDerInput")}conv3dDerFilter(t,e,n){return uy("conv3dDerFilter")}maxPool(t,e){return uy("maxPool")}maxPoolBackprop(t,e,n,r){return uy("maxPoolBackprop")}avgPool(t,e){return uy("avgPool")}avgPoolBackprop(t,e,n){return uy("avgPoolBackprop")}avgPool3d(t,e){return uy("avgPool3d")}avgPool3dBackprop(t,e,n){return uy("avgPool3dBackprop")}maxPool3d(t,e){return uy("maxPool3d")}maxPool3dBackprop(t,e,n,r){return uy("maxPool3dBackprop")}reshape(t,e){return uy("reshape")}cast(t,e){return uy("cast")}tile(t,e){return uy("tile")}pad(t,e,n){return uy("pad")}transpose(t,e){return uy("transpose")}gather(t,e,n){return uy("gather")}gatherND(t,e){return uy("gatherND")}scatterND(t,e,n){return uy("scatterND")}batchToSpaceND(t,e,n){return uy("batchToSpaceND")}spaceToBatchND(t,e,n){return uy("spaceToBatchND")}resizeBilinear(t,e,n,r){return uy("resizeBilinear")}resizeBilinearBackprop(t,e,n){return uy("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,r){return uy("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return uy("resizeNearestNeighborBackprop")}batchNorm(t,e,n,r,s,i){return uy("batchNorm")}localResponseNormalization4D(t,e,n,r,s){return uy("localResponseNormalization4D")}LRNGrad(t,e,n,r,s,i,o){return uy("LRNGrad")}multinomial(t,e,n,r){return uy("multinomial")}oneHot(t,e,n,r){return uy("oneHot")}cumsum(t,e,n,r){return uy("cumsum")}nonMaxSuppression(t,e,n,r,s){return uy("nonMaxSuppression")}fft(t){return uy("fft")}ifft(t){return uy("ifft")}complex(t,e){return uy("complex")}real(t){return uy("real")}imag(t){return uy("imag")}cropAndResize(t,e,n,r,s,i){return uy("cropAndResize")}depthToSpace(t,e,n){return uy("depthToSpace")}split(t,e,n){return uy("split")}sparseToDense(t,e,n,r){return uy("sparseToDense")}diag(t){return uy("diag")}fill(t,e,n){return uy("fill")}onesLike(t){return uy("onesLike")}zerosLike(t){return uy("zerosLike")}linspace(t,e,n){return uy("linspace")}dispose(){return uy("dispose")}}{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Ol().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=CE(Ol().getNumber("WEBGL_VERSION"));this.binaryCache=((e=Ol().getNumber("WEBGL_VERSION"))in IR||(IR[e]={}),IR[e]),this.gpgpu=new kN(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new tR(this.gpgpu),this.numMBBeforeWarning=null==Ol().global.screen?1024:Ol().global.screen.height*Ol().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new ly(this,rp())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if((Ol().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Ol().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:RE.UPLOAD}),r}move(t,e,n,r){if(Ol().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:RE.UPLOAD})}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensors:s,slice:i,shape:o,isPacked:a}=e;if(null!=i){let e;e=a?new vR(o,yR):new iR(o,yR);const n=this.runWebGLProgram(e,[{dataId:t,shape:o,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeData(n.dataId),s}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=nh()),c="complex64"===r?Jm(s.real.dataSync(),s.imag.dataSync()):this.getValuesFromTexture(t),l&&(this.downloadWaitMs+=nh()-u),this.convertAndCacheOnCPU(t,c)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:r,slice:s,dtype:i,complexTensors:o,isPacked:a}=e;if(null!=s){let e;e=a?new vR(r,yR):new iR(r,yR);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:i}],i),s=this.read(n.dataId);return this.disposeData(n.dataId),s}if(null!=n)return this.convertAndCacheOnCPU(t);if(!Ol().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Ol().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==i&&Ol().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(t);const e=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(e.texture,...DE(r))}if(this.pendingRead.set(t,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const t=await Promise.all([o.real.data(),o.imag.data()]);u=Jm(t[0],t[1])}else if(null==c)u=this.getValuesFromTexture(t);else{const t=Fc(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,t)}null!=l&&this.disposeData(l.dataId);const h=this.convertAndCacheOnCPU(t,u),d=this.pendingRead.get(t);return this.pendingRead.delete(t),d.forEach((t=>t(h))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),h}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!ME(n)){if(Ol().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),s=Fc(e);if(Ol().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...DE(e)).subarray(0,s);return this.disposeData(n.dataId),i}const i=Ol().getBool("WEBGL_PACK")&&!0===r,o=i?jE(e):e,a=i?new uN(o):new lN(o),l=this.runWebGLProgram(a,[{shape:o,dtype:n,dataId:t}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeData(l.dataId),c}async time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const s=Dc(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),i=Dc(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Ol().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(s);o.kernelMs=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}(t),o.getExtraProfileInfo=()=>t.map(((t,e)=>({name:i[e],ms:t}))).map((t=>`${t.name}: ${t.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Ol().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:nh(),endMs:null}}endTimer(t){return Ol().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=nh(),t)}async getQueryTime(t){if(Ol().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;this.releaseGPUData(t);const{complexTensors:e}=this.texData.get(t);null!=e&&(e.real.dispose(),e.imag.dispose()),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:s,isPacked:i,slice:o}=this.texData.get(t),a=o&&o.origDataId||t,l=this.dataRefCount.get(a);l>1?this.dataRefCount.set(a,l-1):(this.dataRefCount.delete(a),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,s,i)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return Ol().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=rp().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){const n=this.getCPUBackend();return this.warnedAboutCPUBackend||null!=n||Ol().getBool("IS_TEST")||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every((t=>null==this.texData.get(t.dataId).texture&&Fc(t.shape)<e))}getGPGPUContext(){return this.gpgpu}complex(t,e){const n=this.makeOutput(t.shape,"complex64");return this.texData.get(n.dataId).complexTensors={real:rp().keep(t.clone()),imag:rp().keep(e.clone())},n}real(t){return this.texData.get(t.dataId).complexTensors.real.clone()}imag(t){return this.texData.get(t.dataId).complexTensors.imag.clone()}slice(t,e,n){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.slice(t,e,n);if(0===Fc(n))return jh([],n,t.dtype);const{isPacked:r}=this.texData.get(t.dataId),s=Yd(t.shape,e,n);if(r||!s){const r=Ol().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ZN(n):new YN(n),s=r.getCustomSetupFunc(e);return this.compileAndRun(r,[t],null,s)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,e,n)}shallowSlice(t,e,n){const r=this.texData.get(t.dataId),s=this.makeOutput(n,t.dtype),i=this.texData.get(s.dataId);Object.assign(i,r),i.shape=n,i.dtype=t.dtype;let o=Jd(e,t.strides);r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||t.dataId};const a=this.dataRefCount.get(i.slice.origDataId)||1;return this.dataRefCount.set(i.slice.origDataId,a+1),s}stridedSlice(t,e,n,r){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.stridedSlice(t,e,n,r);const s=Pd(e,n,r);if(s.some((t=>0===t)))return jh([],s);const i=new QN(e,r,s);return this.compileAndRun(i,[t])}reverse(t,e){const n=Ol().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new KN(t.shape,e):new HN(t.shape,e);return this.compileAndRun(n,[t])}concat(t,e){if("complex64"===t[0].dtype){const n=t.map((t=>Yf(t))),r=t.map((t=>Cf(t)));return Kh(this.concat(n,e),this.concat(r,e))}if(this.shouldExecuteOnCPU(t))return this.cpuBackend.concat(t,e);if(1===t.length)return t[0];if(t.length>Ol().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const n=Math.floor(t.length/2),r=this.concat(t.slice(0,n),e),s=this.concat(t.slice(n),e);return this.concat([r,s],e)}if(Ol().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].rank>1){const n=new UC(t.map((t=>t.shape)),e);return this.compileAndRun(n,t)}const n=jp(t.map((t=>t.shape)),e),r=t.map((t=>t.as2D(-1,Fc(t.shape.slice(e))))),s=new WC(r.map((t=>t.shape)));return this.compileAndRun(s,r).reshape(n)}neg(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.neg(t);if(Ol().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,hR,t.dtype);const e=new iR(t.shape,hR);return this.compileAndRun(e,[t])}batchMatMul(t,e,n,r){const s=n?t.shape[2]:t.shape[1],i=r?e.shape[1]:e.shape[2],o=n?t.shape[1]:t.shape[2],[a,,]=t.shape;if((1===s||1===i)&&o>1e3){n&&(t=kp(t,[0,2,1])),r&&(e=kp(e,[0,2,1]));const s=1===i?t:t.as3D(a,o,1),l=1===i?2:1,u=1===i?e.as3D(a,1,o):e;return this.multiply(s,u).sum(l,!0)}const l=Ch(t.dtype,e.dtype),u=new AN(t.shape,[a,s,i],n,r);return this.compileAndRun(u,[t,e],l)}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:i,preluActivationWeights:o}){const a=n?t.shape[2]:t.shape[1],l=r?e.shape[1]:e.shape[2],[u,,]=t.shape,c=Ch(t.dtype,e.dtype),h=null!=s,d=null!=o,p=i?SR(i,!0):null,f=new AN(t.shape,[u,a,l],n,r,h,p,d),g=[t,e];return s&&g.push(s),o&&g.push(o),this.compileAndRun(f,g,c)}multiply(t,e){if("complex64"===t.dtype){const n=this.texData.get(t.dataId),r=this.texData.get(e.dataId),s=new AC("return areal * breal - aimag * bimag;",t.shape,e.shape),i=new AC("return areal * bimag + aimag * breal;",t.shape,e.shape),o=[this.makeComplexComponentTensorInfo(t,n.complexTensors.real),this.makeComplexComponentTensorInfo(t,n.complexTensors.imag),this.makeComplexComponentTensorInfo(e,r.complexTensors.real),this.makeComplexComponentTensorInfo(e,r.complexTensors.imag)],a=this.compileAndRun(s,o),l=this.compileAndRun(i,o),u=this.complex(a,l);return a.dispose(),l.dispose(),u}if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.multiply(t,e);if(Ol().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,FC,t.dtype);const n=new OC(FC,t.shape,e.shape);return this.compileAndRun(n,[t,e],t.dtype)}batchNorm(t,e,n,r,s,i){const o=[t,e,n];let a=null;null!=r&&(a=r.shape,o.push(r));let l=null;if(null!=s&&(l=s.shape,o.push(s)),Ol().getBool("WEBGL_PACK_NORMALIZATION")){const r=new RC(t.shape,e.shape,n.shape,a,l,i);return this.compileAndRun(r,o)}const u=new NC(t.shape,e.shape,n.shape,a,l,i);return this.compileAndRun(u,o)}localResponseNormalization4D(t,e,n,r,s){const i=Ol().getBool("WEBGL_PACK_NORMALIZATION")?new CN(t.shape,e,n,r,s):new SN(t.shape,e,n,r,s);return this.compileAndRun(i,[t])}LRNGrad(t,e,n,r,s,i,o){const a=new EN(e.shape,r,s,i,o);return this.compileAndRun(a,[e,n,t])}tile(t,e){if("string"===t.dtype){const n=this.readSync(t.dataId).map((t=>sh(t)));return function(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const r=Cd(n,t.dtype);for(let e=0;e<r.values.length;++e){const n=r.indexToLoc(e),s=new Array(t.rank);for(let e=0;e<s.length;e++)s[e]=n[e]%t.shape[e];const i=t.locToIndex(s);r.values[e]=t.values[i]}return r.toTensor()}(Cd(t.shape,t.dtype,n),e)}const n=new sR(t.shape,e);return this.compileAndRun(n,[t])}pad(t,e,n){const r=Ol().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ON(t.shape,e,n):new _N(t.shape,e,n);return this.compileAndRun(r,[t])}gather(t,e,n){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.gather(t,e,n);const r=new fN(t.shape,e.size,n);return this.compileAndRun(r,[t,e])}batchToSpaceND(t,e,n){Rc(t.rank<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const r=e.reduce(((t,e)=>t*e)),s=Dm(t.shape,e,r),i=Fm(s.length,e.length),o=_m(t.shape,e,r),a=Om(n,e.length),l=Mm(o,n,e.length);return kp(t.reshape(s),i).reshape(o).slice(a,l)}spaceToBatchND(t,e,n){Rc(t.rank<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const r=e.reduce(((t,e)=>t*e)),s=[[0,0]];s.push(...n);for(let n=1+e.length;n<t.shape.length;++n)s.push([0,0]);const i=t.pad(s),o=Dm(i.shape,e,r,!1),a=Fm(o.length,e.length,!1),l=_m(i.shape,e,r,!1),u=kp(i.reshape(o),a);return vp(u,l)}reduce(t,e,n){const r=t.shape[0],s=t.shape[1],i=wf(s),o=Math.ceil(s/i),a=new LN({windowSize:i,inSize:s,batchSize:r,outSize:o},e),l=this.compileAndRun(a,[t],n);return 1===l.shape[1]?l:this.reduce(l,e,n)}argReduce(t,e,n=null){let r=t.shape[0],s=t.shape[1];null!=n&&(r=n.shape[0],s=n.shape[1]);const i=wf(s),o={windowSize:i,inSize:s,batchSize:r,outSize:Math.ceil(s/i)},a=new iC(o,e,null==n),l=[t];null!=n&&l.push(n);const u=this.compileAndRun(a,l,"int32");return 1===u.shape[1]?u:this.argReduce(t,e,u)}argReducePacked(t,e,n=null){const r=null!=n?n.shape:t.shape,s=wf(r[r.length-1]),i=new SC(r,s,e,null==n),o=null==n?[t]:[t,n],a=this.compileAndRun(i,o,"int32");return a.rank===t.rank?this.argReducePacked(t,e,a):a}sum(t,e){yp("sum",e,t.rank);const[n,r]=gp(t.shape,e),s=Fc(r),i=t.as2D(-1,s),o=Nh(t.dtype);return this.reduce(i,"sum",o).reshape(n)}prod(t,e){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.prod(t,e);const[n,r]=gp(t.shape,e),s=Fc(r),i=t.as2D(-1,s),o=Nh(t.dtype);return this.reduce(i,"prod",o).reshape(n)}unsortedSegmentSum(t,e,n){let r=0;const s=bp([r],t.rank);let i=t;null!=s&&(i=kp(t,s),r=wp(1,t.rank)[0]);const o=$R.computeOutShape(i.shape,r,n),a=Fc([i.shape[r]]),l=i.as2D(-1,a),u=Nh(t.dtype);let c=this.segOpCompute(l,"unsortedSegmentSum",e,u,n).reshape(o);return null!=s&&(c=kp(c,xp(s))),c}segOpCompute(t,e,n,r,s){const i=t.shape[0],o=t.shape[1],a=$R.segOpComputeOptimalWindowSize(o,s),l=new jN({windowSize:a,inSize:o,batchSize:i,numSegments:s},e),u=this.compileAndRun(l,[t,n],r);return u.shape[1]===s?u:(n=ag(0,s).tile([o/a]),this.segOpCompute(u,e,n,r,s))}argMinMaxReduce(t,e,n){const r=[e];if(yp("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,t.rank),!Ol().getBool("WEBGL_PACK_REDUCE")||t.rank<=2){const[e,s]=gp(t.shape,r),i=Fc(s),o=t.as2D(-1,i);return this.argReduce(o,n).reshape(e)}return this.argReducePacked(t,n)}argMin(t,e){return this.argMinMaxReduce(t,e,"min")}argMax(t,e){return this.argMinMaxReduce(t,e,"max")}cumsum(t,e,n,r){if(e!==t.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${t.rank-1} but got axis=${e}`);const s=t.shape[e];let i=t;for(let e=0;e<=Math.ceil(Math.log2(s))-1;e++){const n=new eN(t.shape,!1,r),s=n.getCustomSetupFunc(e),o=i;i=this.compileAndRun(n,[i],i.dtype,s),o.dispose()}if(n){const e=new eN(t.shape,n,r),s=i;i=this.compileAndRun(e,[i]),s.dispose()}return i}equal(t,e){if(Ol().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(equal(a, b));\n","bool");const n=new OC("return float(a == b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}notEqual(t,e){if(Ol().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(notEqual(a, b));\n","bool");const n=new OC("return float(a != b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}less(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.less(t,e);if(Ol().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThan(a, b));\n","bool");const n=new OC("return float(a < b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}lessEqual(t,e){if(Ol().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThanEqual(a, b));\n","bool");const n=new OC("return float(a <= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greater(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.greater(t,e);if(Ol().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThan(a, b));\n","bool");const n=new OC("return float(a > b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greaterEqual(t,e){if(Ol().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThanEqual(a, b));\n","bool");const n=new OC("return float(a >= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalNot(t){const e=new iR(t.shape,"return float(!(x >= 1.0));");return this.compileAndRun(e,[t])}logicalAnd(t,e){if(Ol().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");const n=new OC("return float(a >= 1.0 && b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalOr(t,e){if(Ol().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");const n=new OC("return float(a >= 1.0 || b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}select(t,e,n){const r=new XN(t.rank,e.shape,e.rank);return this.compileAndRun(r,[t,e,n],Ch(e.dtype,n.dtype))}where(t){Xm("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return function(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const r=Cd(t,"int32"),s=Cd([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const i=r.indexToLoc(n[e]),o=e*t.length;s.values.set(i,o)}return s.toTensor()}(t.shape,e)}topk(t,e,n){return function(t,e,n,r,s){const i=e[e.length-1],[o,a]=[t.length/i,i],l=Wc(n,o*r),u=Wc("int32",o*r);for(let e=0;e<o;e++){const n=e*a,s=t.subarray(n,n+a),i=[];for(let t=0;t<s.length;t++)i.push({value:s[t],index:t});i.sort(((t,e)=>e.value-t.value));const o=e*r,c=l.subarray(o,o+r),h=u.subarray(o,o+r);for(let t=0;t<r;t++)c[t]=i[t].value,h[t]=i[t].index}const c=e.slice();return c[c.length-1]=r,[jh(l,c,n),jh(u,c,"int32")]}(t.dataSync(),t.shape,t.dtype,e)}min(t,e){yp("min",e,t.rank);const[n,r]=gp(t.shape,e),s=Fc(r),i=t.as2D(-1,s);return this.reduce(i,"min",i.dtype).reshape(n)}minimum(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.minimum(t,e);const n=Ol().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BC("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new OC("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",t.shape,e.shape);return this.compileAndRun(n,[t,e])}mod(t,e){const n=Ol().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BC("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new OC("if (b == 0.0) return NAN;\n  return mod(a, b);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}maximum(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.maximum(t,e);const n=Ol().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BC("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new OC("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",t.shape,e.shape);return this.compileAndRun(n,[t,e])}all(t,e){yp("all",e,t.rank);const[n,r]=gp(t.shape,e),s=Fc(r),i=t.as2D(-1,s);return this.reduce(i,"all",i.dtype).reshape(n)}any(t,e){yp("any",e,t.rank);const[n,r]=gp(t.shape,e),s=Fc(r),i=t.as2D(-1,s);return this.reduce(i,"any",i.dtype).reshape(n)}floorDiv(t,e){const n="int32";if(Ol().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",n);const r=new OC("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",t.shape,e.shape);return this.compileAndRun(r,[t,e],n)}add(t,e){if("complex64"===t.dtype&&"complex64"===e.dtype)return this.complexSeparableBinaryOp(t,e,TC);if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.add(t,e);const n=Ch(t.dtype,e.dtype);if(Ol().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,TC,n);const r=new OC(TC,t.shape,e.shape);return this.compileAndRun(r,[t,e],n)}packedUnaryOp(t,e,n){const r=new vR(t.shape,e);return this.compileAndRun(r,[t],n)}packedBinaryOp(t,e,n,r,s=!1){const i=new BC(n,t.shape,e.shape,s);return this.compileAndRun(i,[t,e],r)}complexSeparableBinaryOp(t,e,n){const r=this.texData.get(t.dataId),s=this.texData.get(e.dataId),[i,o]=[[r.complexTensors.real,s.complexTensors.real],[r.complexTensors.imag,s.complexTensors.imag]].map((r=>{const[s,i]=r,o=this.makeComplexComponentTensorInfo(t,s),a=this.makeComplexComponentTensorInfo(e,i),l=new OC(n,t.shape,e.shape);return this.compileAndRun(l,[o,a],Ch(s.dtype,i.dtype))})),a=this.complex(i,o);return i.dispose(),o.dispose(),a}makeComplexComponentTensorInfo(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}addN(t){if(1===t.length)return t[0];if(t.length>Ol().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(t.length/2),n=this.addN(t.slice(0,e)),r=this.addN(t.slice(e));return this.addN([n,r])}const e=t.map((t=>t.dtype)).reduce(((t,e)=>Ch(t,e))),n=t.map((t=>t.shape)),r=Ol().getBool("WEBGL_PACK")?new sC(t[0].shape,n):new rC(t[0].shape,n);return this.compileAndRun(r,t,e)}subtract(t,e){if("complex64"===t.dtype&&"complex64"===e.dtype)return this.complexSeparableBinaryOp(t,e,DC);if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.subtract(t,e);const n=Ch(t.dtype,e.dtype);if(Ol().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,DC,t.dtype);const r=new OC(DC,t.shape,e.shape);return this.compileAndRun(r,[t,e],n)}pow(t,e){const n=Ol().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BC("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new OC("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",t.shape,e.shape),r=Ch(t.dtype,e.dtype);return this.compileAndRun(n,[t,e],r)}ceil(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.ceil(t);if(Ol().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,dR,t.dtype);const e=new iR(t.shape,dR);return this.compileAndRun(e,[t])}floor(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.floor(t);if(Ol().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,pR,t.dtype);const e=new iR(t.shape,pR);return this.compileAndRun(e,[t])}sign(t){const e=new iR(t.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(e,[t])}isNaN(t){const e=new iR(t.shape,"return float(isnan(x));");return this.compileAndRun(e,[t],"bool")}isInf(t){const e=new iR(t.shape,"return float(isinf(x));");return this.compileAndRun(e,[t],"bool")}isFinite(t){const e=new iR(t.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(e,[t],"bool")}round(t){const e=new iR(t.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(e,[t])}exp(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.exp(t);if(Ol().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,fR,t.dtype);const e=new iR(t.shape,fR);return this.compileAndRun(e,[t])}expm1(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.expm1(t);if(Ol().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,gR,t.dtype);const e=new iR(t.shape,gR);return this.compileAndRun(e,[t])}softmax(t,e){const n=zc([e],t.shape),r=Ff(t,n),s=mp(r.shape,n),i=this.subtract(t,r.reshape(s)),o=this.exp(i),a=this.sum(o,n).reshape(s);return lf(o,a)}log(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.log(t);if(Ol().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",t.dtype);const e=new iR(t.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(e,[t])}log1p(t){const e=new iR(t.shape,"return log(1.0 + x);");return this.compileAndRun(e,[t])}sqrt(t){const e=new iR(t.shape,"return sqrt(x);");return this.compileAndRun(e,[t])}rsqrt(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.rsqrt(t);const e=new iR(t.shape,"return inversesqrt(x);");return this.compileAndRun(e,[t])}reciprocal(t){const e=new iR(t.shape,"return 1.0 / x;");return this.compileAndRun(e,[t])}relu(t){let e;return e=Ol().getBool("WEBGL_PACK")?new vR(t.shape,bR):new iR(t.shape,aR),this.compileAndRun(e,[t])}relu6(t){let e;return e=Ol().getBool("WEBGL_PACK")?new vR(t.shape,xR):new iR(t.shape,lR),this.compileAndRun(e,[t])}prelu(t,e){const n=Ol().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BC(MC,t.shape,e.shape):new OC(_C,t.shape,e.shape);return this.compileAndRun(n,[t,e])}elu(t){if(Ol().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,wR,t.dtype);const e=new iR(t.shape,uR);return this.compileAndRun(e,[t])}eluDer(t,e){const n=Ol().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BC("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",t.shape,e.shape):new OC("return (b >= 1.0) ? a : a * (b + 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}selu(t){const e=new iR(t.shape,cR);return this.compileAndRun(e,[t])}int(t){const e=new iR(t.shape,"return float(int(x));");return this.compileAndRun(e,[t],"int32")}clip(t,e,n){let r;r=Ol().getBool("WEBGL_PACK_CLIP")?new zC(t.shape):new LC(t.shape);const s=r.getCustomSetupFunc(e,n);return this.compileAndRun(r,[t],null,s)}abs(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.abs(t);if(Ol().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,oR,t.dtype);const e=new iR(t.shape,oR);return this.compileAndRun(e,[t])}complexAbs(t){const e=this.texData.get(t.dataId),n=new PC(t.shape),r=[this.makeComplexComponentTensorInfo(t,e.complexTensors.real),this.makeComplexComponentTensorInfo(t,e.complexTensors.imag)];return this.compileAndRun(n,r)}sigmoid(t){const e=new iR(t.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(e,[t])}softplus(t){const e=new iR(t.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(e,[t])}sin(t){const e=new iR(t.shape,"if (isnan(x)) return x;\n  return sin(x);\n");return this.compileAndRun(e,[t])}cos(t){const e=new iR(t.shape,"if (isnan(x)) return x;\n  return cos(x);\n");return this.compileAndRun(e,[t])}tan(t){const e=new iR(t.shape,"return tan(x);");return this.compileAndRun(e,[t])}asin(t){const e=new iR(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n");return this.compileAndRun(e,[t])}acos(t){const e=new iR(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n");return this.compileAndRun(e,[t])}atan(t){const e=new iR(t.shape,"if (isnan(x)) return x;\n  return atan(x);\n");return this.compileAndRun(e,[t])}atan2(t,e){const n=Ol().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BC("\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new OC("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",t.shape,e.shape);return this.compileAndRun(n,[t,e])}sinh(t){const e=new iR(t.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}cosh(t){const e=new iR(t.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}tanh(t){const e=new iR(t.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(e,[t])}asinh(t){const e=new iR(t.shape,"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));");return this.compileAndRun(e,[t])}acosh(t){const e=new iR(t.shape,"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));");return this.compileAndRun(e,[t])}atanh(t){const e=new iR(t.shape,"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;");return this.compileAndRun(e,[t])}erf(t){const e=new iR(t.shape,mR);return this.compileAndRun(e,[t])}step(t,e){const n=new iR(t.shape,function(t=0){return`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t});\n  `}(e));return this.compileAndRun(n,[t])}conv2dByMatMul(t,e,n,r,s,i){const o=t.shape,a=this.texData.get(t.dataId),l=n.inChannels,u=o[0]*o[1]*o[2],c=n.outChannels,h="channelsLast"===n.dataFormat,d=(1===u||1===c)&&l>1e3,p=o[2]%2!=0&&!!a.isPacked;if(d||!Ol().getBool("WEBGL_LAZILY_UNPACK")||!Ol().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!p){const a=h?o[0]*o[1]*o[2]:o[0]*o[2]*o[3],l=this.reshape(t,[1,a,n.inChannels]),u=this.reshape(e,[1,n.inChannels,n.outChannels]);return this.reshape(this.fusedBatchMatMul({a:l,b:u,transposeA:!1,transposeB:!1,bias:r,activation:s,preluActivationWeights:i}),n.outShape)}const f=h?o[0]*o[1]*(o[2]+1):o[0]*o[2]*(o[3]+1),g={dataId:t.dataId,shape:[1,f,n.inChannels],dtype:t.dtype},m=a.shape;a.shape=a.shape.slice(),a.shape[a.shape.length-2]++,Rc(YE(a.shape,g.shape),(()=>`packed reshape ${a.shape} to ${g.shape} isn't free`));const y=this.reshape(e,[1,n.inChannels,n.outChannels]),b=this.fusedBatchMatMul({a:g,b:y,transposeA:!1,transposeB:!1,bias:r,activation:s,preluActivationWeights:i}),x=this.texData.get(b.dataId);return Rc(x.isPacked,(()=>"batchMatMul result is expected to be packed")),a.shape=m,x.shape=n.outShape,rp().makeTensorFromDataId(b.dataId,n.outShape,b.dtype)}conv2dWithIm2Row(t,e,n,r,s,i){const{filterWidth:o,filterHeight:a,inChannels:l,outWidth:u,outHeight:c,dataFormat:h}=n,d="channelsLast"===h,p=o*a*l,f=c*u,g=[p,f],m=t.squeeze([0]),y=e.reshape([1,p,-1]),b=new IN(g,m.shape,n),x=this.compileAndRun(b,[m]).reshape([1,g[0],g[1]]),w=null!=r,v=null!=i,k=s?SR(s,!0):null,$=new AN(x.shape,[1,f,n.outChannels],!0,!1,w,k,v),I=[x,y];r&&I.push(r),v&&I.push(i);const S=this.compileAndRun($,I);return d?S.reshape([1,c,u,n.outChannels]):S.reshape([1,n.outChannels,c,u])}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n,r,s,i);if(Ol().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n,r,s,i);const o=null!=r,a=null!=i,l=s?SR(s,!1):null,u=new YC(n,o,l,a),c=[t,e];return r&&c.push(r),i&&c.push(i),this.compileAndRun(u,c)}conv2d(t,e,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n);if(Ol().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n);const r=new YC(n);return this.compileAndRun(r,[t,e])}conv2dDerInput(t,e,n){const r=new HC(n);return this.compileAndRun(r,[t,e])}conv2dDerFilter(t,e,n){const r=new GC(n);return this.compileAndRun(r,[t,e])}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){const o=Ol().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1,a=s?SR(s,o):null,l=[t,e],u=null!=r,c=null!=i;let h;return u&&l.push(r),c&&l.push(i),o?(h=new QC(n,u,a,c),this.compileAndRun(h,l)):(h=new ZC(n,u,a,c),this.compileAndRun(h,l))}depthwiseConv2D(t,e,n){let r;return Ol().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(r=new QC(n),this.compileAndRun(r,[t,e])):(r=new ZC(n),this.compileAndRun(r,[t,e]))}depthwiseConv2DDerInput(t,e,n){const r=new XC(n);return this.compileAndRun(r,[t,e])}depthwiseConv2DDerFilter(t,e,n){const r=new jC(n);return this.compileAndRun(r,[t,e])}conv3d(t,e,n){const r=new JC(n);return this.compileAndRun(r,[t,e])}conv3dDerInput(t,e,n){const r=new qC(n);return this.compileAndRun(r,[t,e])}conv3dDerFilter(t,e,n){const r=new KC(n);return this.compileAndRun(r,[t,e])}maxPool(t,e){const n=new MN(e,"max",!1);return this.compileAndRun(n,[t])}avgPool(t,e){const n=new MN(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}maxPoolBackprop(t,e,n,r){const s=new MN(r,"max",!0),i=this.compileAndRun(s,[e]),o=new NN(r),a=this.compileAndRun(o,[t,i],e.dtype);return i.dispose(),a}avgPoolBackprop(t,e,n){const r=new EC(n);return this.compileAndRun(r,[t],e.dtype)}cast(t,e){return iy(t,e,this)}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let s=0;for(let n=0;n<t.rank;n++)n!==e&&(r[s++]=t.shape[n]);const i=new Array(t.rank).fill(0),o=t.shape.slice();o[e]=1;const a=new Array(n);for(let n=0;n<a.length;n++)i[e]=n,a[n]=this.slice(t,i,o).reshape(r);return a}avgPool3d(t,e){const n=new BN(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}avgPool3dBackprop(t,e,n){const r=new CC(n);return this.compileAndRun(r,[t],e.dtype)}maxPool3d(t,e){const n=new BN(e,"max",!1);return this.compileAndRun(n,[t],"float32")}maxPool3dBackprop(t,e,n,r){const s=new BN(r,"max",!0),i=this.compileAndRun(s,[e]),o=new RN(r),a=this.compileAndRun(o,[t,i],e.dtype);return i.dispose(),a}reshape(t,e){const n=this.texData.get(t.dataId);if(n.isPacked&&!YE(t.shape,e)&&(null===n.texture||!YE(n.shape,e))){const n=this.packedReshape(t,e);return rp().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}return oy(t,e)}resizeBilinear(t,e,n,r){const s=Ol().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new UN(t.shape,e,n,r):new WN(t.shape,e,n,r);return this.compileAndRun(s,[t],"float32")}resizeBilinearBackprop(t,e,n){const r=new PN(t,e,n);return this.compileAndRun(r,[t])}resizeNearestNeighbor(t,e,n,r){const s=new GN(t.shape,e,n,r);return this.compileAndRun(s,[t])}resizeNearestNeighborBackprop(t,e,n){const r=new VN(t,e,n);return this.compileAndRun(r,[t])}multinomial(t,e,n,r){const s=e?t:bg(t),i=s.shape[0],o=s.shape[1],a=new TN(i,o,n),l=a.getCustomSetupFunc(r);return this.compileAndRun(a,[s],"int32",l)}oneHot(t,e,n,r){const s=new DN(t.size,e,n,r);return this.compileAndRun(s,[t])}diag(t){const e=new aN(t.size);return this.compileAndRun(e,[t])}cropAndResize(t,e,n,r,s,i){const o=new tN(t.shape,e.shape,r,s,i);return this.compileAndRun(o,[t,e,n],"float32")}depthToSpace(t,e,n){Rc(e>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`));const r=t.shape[0],s="NHWC"===n?t.shape[1]:t.shape[2],i="NHWC"===n?t.shape[2]:t.shape[3],o="NHWC"===n?t.shape[3]:t.shape[1],a=s*e,l=i*e,u=o/(e*e),c=new oN("NHWC"===n?[r,a,l,u]:[r,u,a,l],e,n);return this.compileAndRun(c,[t])}split(t,e,n){return function(t,e,n){const r=new Array(t.rank).fill(0),s=t.shape.slice();return e.map((e=>{const i=[...s];i[n]=e;const o=pg(t,r,i);return r[n]+=e,o}))}(t,e,n)}scatterND(t,e,n){const{sliceRank:r,numUpdates:s,sliceSize:i,strides:o,outputSize:a}=Pm(0,t,n),l=[a/i,i],u=t.reshape([s,r]),c=e.reshape([s,i]);if(0===a)return oy(jh([]),n);const h=up(0),d=new qN(s,r,u.rank,c.rank,o,l);return this.compileAndRun(d,[c,u,h]).reshape(n)}sparseToDense(t,e,n,r){const{sliceRank:s,numUpdates:i,strides:o,outputSize:a}=Pm(0,t,n),l=new qN(i,s,t.rank,e.rank,o,[a,1],!1);return this.compileAndRun(l,[e,t,r]).reshape(n)}fft(t){return this.fftImpl(t,!1)}ifft(t){return this.fftImpl(t,!0)}fftImpl(t,e){const n=this.texData.get(t.dataId),r=new dN("return real * expR - imag * expI;",t.shape,e),s=new dN("return real * expI + imag * expR;",t.shape,e),i=[this.makeComplexComponentTensorInfo(t,n.complexTensors.real),this.makeComplexComponentTensorInfo(t,n.complexTensors.imag)],o=this.compileAndRun(r,i),a=this.compileAndRun(s,i),l=this.complex(o,a).as2D(t.shape[0],t.shape[1]);return o.dispose(),a.dispose(),l}gatherND(t,e){const n=e.shape,r=n[n.length-1],[s,i,o,a]=Bm(t,e),l=e.reshape([i,r]),u=t.reshape([t.size/o,o]),c=new gN(r,a,[i,o]);return this.compileAndRun(c,[u,l]).reshape(s)}fill(t,e,n){if("string"===(n=n||qc(e))){const r=Uc(n,Fc(t));return r.fill(e),rp().makeTensor(r,t,n,this)}{const r=new pN(t,e),s=r.getCustomSetupFunc(e);return this.compileAndRun(r,[],n,s)}}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(t.shape,1,t.dtype)}zerosLike(t){return this.fill(t.shape,"string"===t.dtype?"":0,t.dtype)}linspace(t,e,n){return ay(t,e,n)}makeTensorInfo(t,e){const n=this.write(null,t,e);return this.texData.get(n).usage=null,{dataId:n,shape:t,dtype:e}}makeOutput(t,e){const{dataId:n}=this.makeTensorInfo(t,e);return rp().makeTensorFromDataId(n,t,e,this)}unpackTensor(t){const e=new kR(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new FN(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[KE(t.shape),...qE(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},s=[KE(e),...qE(e)],i=new zN(s,n),o=this.runWebGLProgram(i,[r],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:s}=e,i=jE(r);let o;return o=n?new iN(i):new sN(i),{dtype:s,shape:r,dataId:this.runWebGLProgram(o,[{shape:i,dtype:s,dataId:t}],s,null,!0).dataId}}runWebGLProgram(t,e,n,r,s=!1){const i=this.makeTensorInfo(t.outputShape,n),o=this.texData.get(i.dataId);if(t.packedOutput&&(o.isPacked=!0),t.outPackingScheme===NE.DENSE){const e=DE(t.outputShape);o.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(o.usage=t.outTexUsage),0===Fc(i.shape))return o.values=Wc(i.dtype,0),i;const a=[],l=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&Fc(e.shape)<=Ol().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),a.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!YE(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),a.push(e),n=this.texData.get(e.dataId),t.shape=r}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const u={shape:i.shape,texData:o,isUniform:!1},c=function(t,e,n){let r="";e.concat(n).forEach((t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${n}_${e}`}));const s=t.userCode;let i=t.constructor.name;return i+="_"+r+"_"+s,i}(t,l,u),h=this.getAndSaveBinary(c,(()=>function(t,e,n,r){const s=e.userCode,i=n.map(((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}})),o=i.map((t=>t.shapeInfo)),a={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=pC(i,a,s,e.packedInputs),u=t.createProgram(l);let c=null;const h=t.getUniformLocation(u,"NAN",!1);1===Ol().getNumber("WEBGL_VERSION")&&(c=t.getUniformLocation(u,"INFINITY",!1));const d={};for(let n=0;n<e.variableNames.length;n++){const r=e.variableNames[n],s=!1;d[r]=t.getUniformLocation(u,r,s),d[`offset${r}`]=t.getUniformLocation(u,`offset${r}`,s)}return{program:e,source:l,webGLProgram:u,uniformLocations:d,inShapeInfos:o,outShapeInfo:a,infLoc:c,nanLoc:h}}(this.gpgpu,t,l,u))),d=null!=this.activeTimers;let p;if(d&&(p=this.startTimer()),function(t,e,n,r,s){$N(e.inShapeInfos,n),$N([e.outShapeInfo],[r]);const i=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(i,o[0],o[1]):t.setOutputMatrixTexture(i,o[0],o[1]),t.setProgram(e.webGLProgram),1===Ol().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,r)=>{const s=e.program.variableNames[r],i=e.uniformLocations[s],o=e.uniformLocations[`offset${s}`];if(null!=i)if(n.isUniform)if(Fc(n.shape)<2)t.gl.uniform1f(i,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(i,e)}else null!=n.texData.slice&&null!=o&&t.gl.uniform1i(o,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,i,r)})),null!=s&&s(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,h,l,u,r),a.forEach((t=>this.disposeData(t.dataId))),d&&(p=this.endTimer(p),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(p)})),!Ol().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const t=this.unpackTensor(i);return this.disposeData(i.dataId),t}return i}compileAndRun(t,e,n,r,s=!1){n=n||e[0].dtype;const i=this.runWebGLProgram(t,e,n,r,s);return rp().makeTensorFromDataId(i.dataId,i.shape,i.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Ol().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=ip((()=>{if(!Ol().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=Ol().getBool("DEBUG");Ol().set("DEBUG",!1);const e=this.abs(up(1e-8)).dataSync()[0];if(Ol().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:s,texture:i,usage:o,isPacked:a}=e;if(null!=i)return;const l=null!=this.activeTimers;let u;l&&(u=nh());let c=e.texShape;if(null==c&&(c=function(t,e=!1){let n=Ol().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map(((e,n)=>n>=t.length-2?Nc(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=Pc(t);t=e.newShape}let r=Fc(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=KE(t);let n=2,s=2;return t.length&&([n,s]=qE(t)),r=e*(n/2)*(s/2),Mc(r).map((t=>2*t))}return Mc(r)}(n,a),e.texShape=c),null!=s){const t=jE(n);let i,o=c[1],h=c[0];const d=s instanceof Uint8Array;a?([o,h]=FE(c[0],c[1]),i=new hN(t,[h,o],d)):i=new cN(t,[h,o],d);const p=this.makeTensorInfo([h,o],r);this.texData.get(p.dataId).usage=d?RE.PIXELS:RE.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),o,h,s);const f=!0,g=this.runWebGLProgram(i,[p],r,null,f),m=this.texData.get(g.dataId);e.texture=m.texture,e.texShape=m.texShape,e.isPacked=m.isPacked,e.usage=m.usage,this.disposeData(p.dataId),this.texData.delete(g.dataId),e.values=null,l&&(this.uploadWaitMs+=nh()-u)}else{const t=this.acquireTexture(c,o,r,a);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*Gc(e)}}Lh()&&function(t,e,n=1){Mh.registerBackend(t,e,n)}("webgl",(()=>new ER),2);const CR={kernelName:du,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{a:n,b:r}=t;return function(t,e,n){let r=new OC("\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",t.shape,e.shape);return Ol().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&(r=new BC("\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",t.shape,e.shape,!0)),n.runWebGLProgram(r,[t,e],"float32")}(n,r,e)}};class NR{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const RR={kernelName:fu,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,s=new NR(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}};class AR{constructor(t){this.variableNames=["A"];const e=lC(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class TR{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=lC(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const DR={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:s}=e;const{numChannels:i}=r,o="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,a="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],h=[u,l,i];(a||o)&&(null==FR&&(FR=document.createElement("canvas").getContext("2d")),FR.canvas.width=l,FR.canvas.height=u,FR.drawImage(s,0,0,l,u),s=FR.canvas);const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=RE.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=Ol().getBool("WEBGL_PACK")?new TR(h):new AR(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let FR;function _R(t,e,n,r){const s=Wc(r,Fc(n));for(let n=0;n<s.length;++n){const r=n*e;let i=t[r];for(let n=0;n<e;++n){const e=t[r+n];e>i&&(i=e)}s[n]=i}return s}function OR(t,e,n,r,s){const i=e.length,o=Fc(e),a=Yc(e),l=Yc(s),u=Wc(n,Fc(s));for(let e=0;e<o;++e){const n=oh(e,i,a),s=new Array(n.length);for(let t=0;t<s.length;t++)s[t]=n[r[t]];u[ih(s,i,l)]=t[e]}return u}const{maxImpl:MR,transposeImpl:BR}=s;function LR(t,e,n){const r=n.texData.get(t.dataId);return!r.isPacked||YE(t.shape,e)||null!==r.texture&&YE(r.shape,e)?{dataId:t.dataId,shape:e,dtype:t.dtype}:function(t,e,n){const r=[KE(t.shape),...qE(t.shape)],s={dtype:t.dtype,shape:r,dataId:t.dataId},i=[KE(e),...qE(e)],o=new zN(i,r),a=n.runWebGLProgram(o,[s],t.dtype,null,!0);return{dataId:a.dataId,shape:e,dtype:a.dtype}}(t,e,n)}class zR{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];this.outputShape=n,this.rank=n.length;const r=kC(this.rank),s=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let e=0;e<t.length;e++)r[t[e]]=n[e];return r.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class PR{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=kC(this.rank),s=oC("rc",this.rank),i=new Array(this.rank);for(let t=0;t<e.length;t++)i[e[t]]=s[t];const o=`vec2(${i.slice(-2).join()})`,a=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${o})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${a}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${a}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function WR(t,e,n){const r=Ol().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new PR(t.shape,e):new zR(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}const UR={kernelName:Eu,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:s,keepDims:i}=e,o=n,a=r.shape.length,l=zc(s,r.shape);let u=l;const c=bp(u,a),h=null!=c,d=o.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const t=o.texData.get(p.dataId).values,e=new Array(a);for(let t=0;t<e.length;t++)e[t]=r.shape[c[t]];const n=BR(t,r.shape,r.dtype,c,e);p=o.makeTensorInfo(e,r.dtype),o.texData.get(p.dataId).values=n}else p=WR(r,c,o);u=wp(u.length,a)}yp("max",u,a);const[f,g]=gp(p.shape,u);let m,y=f;if(i&&(y=mp(f,l)),d){const t=o.texData.get(p.dataId).values,e=MR(t,Fc(g),y,r.dtype);m=o.makeTensorInfo(y,r.dtype),o.texData.get(m.dataId).values=e}else m=function(t,e,n,r){const s=Fc(e),i=LR(t,[Fc(t.shape)/s,s],r),o=function(t,e,n,r){const s=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],r=wf(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}(t.shape);let i=t;for(let o=0;o<s.length;o++){const{inSize:a,windowSize:l,outSize:u}=s[o],c=new LN({windowSize:l,inSize:a,batchSize:t.shape[0],outSize:u},n),h=i;i=r.runWebGLProgram(c,[i],e),h.dataId!==t.dataId&&r.disposeData(h.dataId)}return i}(i,t.dtype,"max",r);return i.dataId!==t.dataId&&r.disposeData(i.dataId),LR(o,n,r)}(p,g,y,o);return h&&o.disposeData(p.dataId),m}},VR={kernelName:"MaxPoolWithArgmax",backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:a}=e,l=n;Rc(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];Rc(Bp(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));const c=Cp(r.shape,s,i,u,o),[h,d]=function(t,e,n,r){let s=new MN(n,"max",!1);const i=r.runWebGLProgram(s,[t],"float32");return s=new MN(n,"max",!0,!0,e),[i,r.runWebGLProgram(s,[t],"float32")]}(r,a,c,l);return[h,d]}},GR={kernelName:Fu,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{Xm("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:a}=n,l=e;return function(t,e,n,r,s){return tm(t,e,n,r,s,0).selectedIndices}(l.readSync(r.dataId),l.readSync(s.dataId),i,o,a)}},HR=function(t,e,n,r,s,i){return tm(t,e,n,r,s,0,!1,i,!0)},KR={kernelName:_u,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{Xm("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:a,padToMaxOutputSize:l}=n,u=e,c=u.readSync(r.dataId),h=u.readSync(s.dataId),{selectedIndices:d,validOutputs:p}=HR(c,h,i,o,a,l);return[d,p]}},qR=function(t,e,n,r,s,i){return tm(t,e,n,r,s,i,!0)},jR={kernelName:Ou,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{Xm("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:a,softNmsSigma:l}=n,u=e,c=u.readSync(r.dataId),h=u.readSync(s.dataId),d=i,p=o,f=a,g=l,{selectedIndices:m,selectedScores:y}=qR(c,h,d,p,f,g);return[m,y]}};class XR{constructor(t,e,n,r){this.variableNames=["Image"],this.outputShape=[];const s=t[1],i=t[2],o=Math.sin(e).toFixed(3),a=Math.cos(e).toFixed(3);this.outputShape=t;const[l,u]=Tm(r,s,i),c=l.toFixed(3),h=u.toFixed(3);let d="";d="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${c}) * ${a} - (float(y) - ${h}) * ${o};\n          float coordYFloat = (float(x) - ${c}) * ${o} + (float(y) - ${h}) * ${a};\n          int coordX = int(round(coordXFloat + ${c}));\n          int coordY = int(round(coordYFloat + ${h}));\n          ${d}\n          if(coordX >= 0 && coordX < ${i} && coordY >= 0 && coordY < ${s}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const YR=[UR,RR,DR,CR,VR,GR,KR,jR,{kernelName:gc,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:i,center:o}=e,a=n,l=new XR(r.shape,s,i,o);return a.runWebGLProgram(l,[r],r.dtype)}},{kernelName:ac,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e,s=new iR(n.shape,"return x * x;");return r.runWebGLProgram(s,[n],n.dtype)}},{kernelName:oc,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{a:n,b:r}=t,s="return (a - b) * (a - b);",i=e,o=Ol().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BC(s,n.shape,r.shape):new OC(s,n.shape,r.shape);return i.compileAndRun(o,[n,r])}},{kernelName:cc,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{perm:s}=e,i=n,o=r.shape.length,a=new Array(o);for(let t=0;t<a.length;t++)a[t]=r.shape[s[t]];let l;if(i.shouldExecuteOnCPU([r])){const t=i.texData.get(r.dataId).values,e=BR(t,r.shape,r.dtype,s,a);l=i.makeTensorInfo(a,r.dtype),i.texData.get(l.dataId).values=e}else l=WR(r,s,i);return l}}];for(const t of YR)$c(t);var JR=function(t,e){return(JR=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};function ZR(t,e){function n(){this.constructor=t}JR(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}function QR(t){return"function"==typeof t}var tA=!1,eA={Promise:void 0,set useDeprecatedSynchronousErrorHandling(t){t&&(new Error).stack,tA=t},get useDeprecatedSynchronousErrorHandling(){return tA}};function nA(t){setTimeout((function(){throw t}),0)}var rA={closed:!0,next:function(t){},error:function(t){if(eA.useDeprecatedSynchronousErrorHandling)throw t;nA(t)},complete:function(){}},sA=function(){return Array.isArray||function(t){return t&&"number"==typeof t.length}}(),iA=function(){function t(t){return Error.call(this),this.message=t?t.length+" errors occurred during unsubscription:\n"+t.map((function(t,e){return e+1+") "+t.toString()})).join("\n  "):"",this.name="UnsubscriptionError",this.errors=t,this}return t.prototype=Object.create(Error.prototype),t}(),oA=function(){function t(t){this.closed=!1,this._parentOrParents=null,this._subscriptions=null,t&&(this._ctorUnsubscribe=!0,this._unsubscribe=t)}return t.prototype.unsubscribe=function(){var e;if(!this.closed){var n,r=this,s=r._parentOrParents,i=r._ctorUnsubscribe,o=r._unsubscribe,a=r._subscriptions;if(this.closed=!0,this._parentOrParents=null,this._subscriptions=null,s instanceof t)s.remove(this);else if(null!==s)for(var l=0;l<s.length;++l)s[l].remove(this);if(QR(o)){i&&(this._unsubscribe=void 0);try{o.call(this)}catch(t){e=t instanceof iA?aA(t.errors):[t]}}if(sA(a)){l=-1;for(var u=a.length;++l<u;){var c=a[l];if(null!==(n=c)&&"object"==typeof n)try{c.unsubscribe()}catch(t){e=e||[],t instanceof iA?e=e.concat(aA(t.errors)):e.push(t)}}}if(e)throw new iA(e)}},t.prototype.add=function(e){var n=e;if(!e)return t.EMPTY;switch(typeof e){case"function":n=new t(e);case"object":if(n===this||n.closed||"function"!=typeof n.unsubscribe)return n;if(this.closed)return n.unsubscribe(),n;if(!(n instanceof t)){var r=n;(n=new t)._subscriptions=[r]}break;default:throw new Error("unrecognized teardown "+e+" added to Subscription.")}var s=n._parentOrParents;if(null===s)n._parentOrParents=this;else if(s instanceof t){if(s===this)return n;n._parentOrParents=[s,this]}else{if(-1!==s.indexOf(this))return n;s.push(this)}var i=this._subscriptions;return null===i?this._subscriptions=[n]:i.push(n),n},t.prototype.remove=function(t){var e=this._subscriptions;if(e){var n=e.indexOf(t);-1!==n&&e.splice(n,1)}},t.EMPTY=function(t){return t.closed=!0,t}(new t),t}();function aA(t){return t.reduce((function(t,e){return t.concat(e instanceof iA?e.errors:e)}),[])}var lA=function(){return"function"==typeof Symbol?Symbol("rxSubscriber"):"@@rxSubscriber_"+Math.random()}(),uA=function(t){function e(n,r,s){var i=t.call(this)||this;switch(i.syncErrorValue=null,i.syncErrorThrown=!1,i.syncErrorThrowable=!1,i.isStopped=!1,arguments.length){case 0:i.destination=rA;break;case 1:if(!n){i.destination=rA;break}if("object"==typeof n){n instanceof e?(i.syncErrorThrowable=n.syncErrorThrowable,i.destination=n,n.add(i)):(i.syncErrorThrowable=!0,i.destination=new cA(i,n));break}default:i.syncErrorThrowable=!0,i.destination=new cA(i,n,r,s)}return i}return ZR(e,t),e.prototype[lA]=function(){return this},e.create=function(t,n,r){var s=new e(t,n,r);return s.syncErrorThrowable=!1,s},e.prototype.next=function(t){this.isStopped||this._next(t)},e.prototype.error=function(t){this.isStopped||(this.isStopped=!0,this._error(t))},e.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},e.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,t.prototype.unsubscribe.call(this))},e.prototype._next=function(t){this.destination.next(t)},e.prototype._error=function(t){this.destination.error(t),this.unsubscribe()},e.prototype._complete=function(){this.destination.complete(),this.unsubscribe()},e.prototype._unsubscribeAndRecycle=function(){var t=this._parentOrParents;return this._parentOrParents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parentOrParents=t,this},e}(oA),cA=function(t){function e(e,n,r,s){var i,o=t.call(this)||this;o._parentSubscriber=e;var a=o;return QR(n)?i=n:n&&(i=n.next,r=n.error,s=n.complete,n!==rA&&(QR((a=Object.create(n)).unsubscribe)&&o.add(a.unsubscribe.bind(a)),a.unsubscribe=o.unsubscribe.bind(o))),o._context=a,o._next=i,o._error=r,o._complete=s,o}return ZR(e,t),e.prototype.next=function(t){if(!this.isStopped&&this._next){var e=this._parentSubscriber;eA.useDeprecatedSynchronousErrorHandling&&e.syncErrorThrowable?this.__tryOrSetError(e,this._next,t)&&this.unsubscribe():this.__tryOrUnsub(this._next,t)}},e.prototype.error=function(t){if(!this.isStopped){var e=this._parentSubscriber,n=eA.useDeprecatedSynchronousErrorHandling;if(this._error)n&&e.syncErrorThrowable?(this.__tryOrSetError(e,this._error,t),this.unsubscribe()):(this.__tryOrUnsub(this._error,t),this.unsubscribe());else if(e.syncErrorThrowable)n?(e.syncErrorValue=t,e.syncErrorThrown=!0):nA(t),this.unsubscribe();else{if(this.unsubscribe(),n)throw t;nA(t)}}},e.prototype.complete=function(){var t=this;if(!this.isStopped){var e=this._parentSubscriber;if(this._complete){var n=function(){return t._complete.call(t._context)};eA.useDeprecatedSynchronousErrorHandling&&e.syncErrorThrowable?(this.__tryOrSetError(e,n),this.unsubscribe()):(this.__tryOrUnsub(n),this.unsubscribe())}else this.unsubscribe()}},e.prototype.__tryOrUnsub=function(t,e){try{t.call(this._context,e)}catch(t){if(this.unsubscribe(),eA.useDeprecatedSynchronousErrorHandling)throw t;nA(t)}},e.prototype.__tryOrSetError=function(t,e,n){if(!eA.useDeprecatedSynchronousErrorHandling)throw new Error("bad call");try{e.call(this._context,n)}catch(e){return eA.useDeprecatedSynchronousErrorHandling?(t.syncErrorValue=e,t.syncErrorThrown=!0,!0):(nA(e),!0)}return!1},e.prototype._unsubscribe=function(){var t=this._parentSubscriber;this._context=null,this._parentSubscriber=null,t.unsubscribe()},e}(uA),hA=function(){return"function"==typeof Symbol&&Symbol.observable||"@@observable"}();function dA(t){return t}function pA(t){return 0===t.length?dA:1===t.length?t[0]:function(e){return t.reduce((function(t,e){return e(t)}),e)}}var fA=function(){function t(t){this._isScalar=!1,t&&(this._subscribe=t)}return t.prototype.lift=function(e){var n=new t;return n.source=this,n.operator=e,n},t.prototype.subscribe=function(t,e,n){var r=this.operator,s=function(t,e,n){if(t){if(t instanceof uA)return t;if(t[lA])return t[lA]()}return t||e||n?new uA(t,e,n):new uA(rA)}(t,e,n);if(r?s.add(r.call(s,this.source)):s.add(this.source||eA.useDeprecatedSynchronousErrorHandling&&!s.syncErrorThrowable?this._subscribe(s):this._trySubscribe(s)),eA.useDeprecatedSynchronousErrorHandling&&s.syncErrorThrowable&&(s.syncErrorThrowable=!1,s.syncErrorThrown))throw s.syncErrorValue;return s},t.prototype._trySubscribe=function(t){try{return this._subscribe(t)}catch(e){eA.useDeprecatedSynchronousErrorHandling&&(t.syncErrorThrown=!0,t.syncErrorValue=e),function(t){for(;t;){var e=t,n=e.closed,r=e.destination,s=e.isStopped;if(n||s)return!1;t=r&&r instanceof uA?r:null}return!0}(t)?t.error(e):console.warn(e)}},t.prototype.forEach=function(t,e){var n=this;return new(e=gA(e))((function(e,r){var s;s=n.subscribe((function(e){try{t(e)}catch(t){r(t),s&&s.unsubscribe()}}),r,e)}))},t.prototype._subscribe=function(t){var e=this.source;return e&&e.subscribe(t)},t.prototype[hA]=function(){return this},t.prototype.pipe=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return 0===t.length?this:pA(t)(this)},t.prototype.toPromise=function(t){var e=this;return new(t=gA(t))((function(t,n){var r;e.subscribe((function(t){return r=t}),(function(t){return n(t)}),(function(){return t(r)}))}))},t.create=function(e){return new t(e)},t}();function gA(t){if(t||(t=eA.Promise||Promise),!t)throw new Error("no Promise impl found");return t}var mA=function(t){function e(e,n){var r=t.call(this,e,n)||this;return r.scheduler=e,r.work=n,r.pending=!1,r}return ZR(e,t),e.prototype.schedule=function(t,e){if(void 0===e&&(e=0),this.closed)return this;this.state=t;var n=this.id,r=this.scheduler;return null!=n&&(this.id=this.recycleAsyncId(r,n,e)),this.pending=!0,this.delay=e,this.id=this.id||this.requestAsyncId(r,this.id,e),this},e.prototype.requestAsyncId=function(t,e,n){return void 0===n&&(n=0),setInterval(t.flush.bind(t,this),n)},e.prototype.recycleAsyncId=function(t,e,n){if(void 0===n&&(n=0),null!==n&&this.delay===n&&!1===this.pending)return e;clearInterval(e)},e.prototype.execute=function(t,e){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;var n=this._execute(t,e);if(n)return n;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))},e.prototype._execute=function(t,e){var n=!1,r=void 0;try{this.work(t)}catch(t){n=!0,r=!!t&&t||new Error(t)}if(n)return this.unsubscribe(),r},e.prototype._unsubscribe=function(){var t=this.id,e=this.scheduler,n=e.actions,r=n.indexOf(this);this.work=null,this.state=null,this.pending=!1,this.scheduler=null,-1!==r&&n.splice(r,1),null!=t&&(this.id=this.recycleAsyncId(e,t,null)),this.delay=null},e}(function(t){function e(e,n){return t.call(this)||this}return ZR(e,t),e.prototype.schedule=function(t,e){return void 0===e&&(e=0),this},e}(oA)),yA=function(){function t(e,n){void 0===n&&(n=t.now),this.SchedulerAction=e,this.now=n}return t.prototype.schedule=function(t,e,n){return void 0===e&&(e=0),new this.SchedulerAction(this,t).schedule(n,e)},t.now=function(){return Date.now()},t}(),bA=new(function(t){function e(n,r){void 0===r&&(r=yA.now);var s=t.call(this,n,(function(){return e.delegate&&e.delegate!==s?e.delegate.now():r()}))||this;return s.actions=[],s.active=!1,s.scheduled=void 0,s}return ZR(e,t),e.prototype.schedule=function(n,r,s){return void 0===r&&(r=0),e.delegate&&e.delegate!==this?e.delegate.schedule(n,r,s):t.prototype.schedule.call(this,n,r,s)},e.prototype.flush=function(t){var e=this.actions;if(this.active)e.push(t);else{var n;this.active=!0;do{if(n=t.execute(t.state,t.delay))break}while(t=e.shift());if(this.active=!1,n){for(;t=e.shift();)t.unsubscribe();throw n}}},e}(yA))(mA);function xA(t){var e=t.subscriber,n=t.counter,r=t.period;e.next(n),this.schedule({subscriber:e,counter:n+1,period:r},r)}const wA=["NEUTRAL","SMILING"],vA=document.getElementById("question-img"),kA=document.getElementById("happy-img"),$A=document.getElementById("neutral-img"),IA=document.getElementById("prediction");!async function(){await Xe.ready();let t=!1;const e=await("http://localhost:8080/model/model.json",null==n&&(n={}),d$("http://localhost:8080/model/model.json",n));var n;const r=await faceLandmarksDetection.load(faceLandmarksDetection.SupportedPackages.mediapipeFacemesh),s=document.getElementById("webcam-video");var i,o,a;s.addEventListener("loadeddata",(()=>{t=!0})),async function(t){let e=null;try{e=await navigator.mediaDevices.getUserMedia({video:!0,audio:!1});const t=document.getElementById("webcam-video");t.srcObject=e,t.play()}catch(t){console.error(t)}}(),(i=300,void 0===i&&(i=0),void 0===o&&(o=bA),(sA(a=i)||!(a-parseFloat(a)+1>=0)||i<0)&&(i=0),o&&"function"==typeof o.schedule||(o=bA),new fA((function(t){return t.add(o.schedule(xA,i,{subscriber:t,counter:0,period:i})),t}))).subscribe((n=>{t&&async function(){try{const[t]=await r.estimateFaces({input:s});if(t){const n=function(t){const e=_r(t.annotations.lipsLowerInner),n=_r(t.annotations.lipsUpperInner),r=_r(t.annotations.lipsLowerOuter),s=_r(t.annotations.lipsUpperOuter),i=_r(t.annotations.silhouette),o=Jn(Fr(Ir(n,0),Ir(e,0))).dataSync()[1],a=Jn(Fr(Ir(n,0),Ir(e,0))).dataSync()[1],l=Jn(Fr(mr(n,0),Sr(n,0))).dataSync()[0],u=Jn(Fr(mr(e,0),Sr(e,0))).dataSync()[0],c=Jn(Fr(mr(s,0),Sr(s,0))).dataSync()[0],h=(u+l)/2,d=(Jn(Fr(mr(r,0),Sr(r,0))).dataSync()[0]+c)/2,[p,f]=Jn(Fr(mr(i,0),Sr(i,0))).dataSync().slice(0,2);return Rr([[o,a,h,d,p,f]])}(t),r=gr(e.predict(n),[2]),[s]=or(r).dataSync();IA.innerHTML=wA[s],0===s?(vA.style.display="none",kA.style.display="none",$A.style.display="block"):(vA.style.display="none",kA.style.display="block",$A.style.display="none")}else vA.style.display="block",kA.style.display="none",$A.style.display="none",IA.innerHTML="Oh No! I can't see your face."}catch(t){console.error(t)}}().catch(console.error)}))}()})()})();